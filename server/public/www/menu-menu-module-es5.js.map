{"version":3,"sources":["webpack:///src/app/pages/menu/menu-routing.module.ts","webpack:///src/app/pages/menu/menu.module.ts","webpack:///src/app/pages/menu/menu.page.ts","webpack:///src/app/pages/menu/menu.page.html","webpack:///src/app/providers/Api/UsuariosLogin.service.ts"],"names":["routes","path","component","MenuPageRoutingModule","forChild","imports","exports","MenuPageModule","declarations","MenuPage","almacenamiento","loading","toastService","navCtrl","apiSeguimiento","cargaElementos","router","menuCtrl","conexion","usuarioApi","apiRecordatorios","statusbar","cantidadSeguimiento","notificaciones","recordatorios","red","role","backgroundColorByHexString","capturarRole","obtenerToken","info","solicitudesRecibidas","token","subscribe","data","exe","response","SeguimientoData","length","notiCantidad","console","log","getRecordatorioPersona","terminarPartida","estado","cargaProcesos","then","destruir","abandonarPartida","cancelarSuscripciones","navigate","finalizarCargado","alertApplication","background","selector","templateUrl","styleUrls","animations","UsuariosLoginService","http","transfer","error","intento","pipe","errorHttp","ErrorEvent","Error","ProgressEvent","status","navigateRoot","post","res","hanflerError","usuario","buscar","dispositivoID","options","headers","imagen","tipo","fileKey","httpMethod","params","fileTransfer","create","upload","old","get","termino","headerOption","HeaderOption","desde","toString","id","put","pais","providedIn"],"mappings":"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","file":"menu-menu-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { MenuPage } from './menu.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: MenuPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class MenuPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { MenuPageRoutingModule } from './menu-routing.module';\n\nimport { MenuPage } from './menu.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    MenuPageRoutingModule\n  ],\n  declarations: [MenuPage]\n})\nexport class MenuPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { InicioService } from 'src/app/providers/Almacenamiento/inicio.service';\nimport { LoadingService } from 'src/app/providers/Utilidades/LoadingService.service';\nimport { ToastServices } from 'src/app/providers/Utilidades/ToastService.service';\nimport { NavController, MenuController } from '@ionic/angular';\nimport { ApiSeguimientoService } from 'src/app/providers/Api/Seguimiento.service';\nimport { CargaElementosUsuariosService } from 'src/app/providers/cargas/usuarios.service';\nimport { Router } from '@angular/router';\nimport { ConexionService } from 'src/app/providers/Conexiones/Conexion.service';\nimport { trigger, transition, state, style, animate } from '@angular/animations';\nimport { UsuariosLoginService } from '../../providers/Api/UsuariosLogin.service';\nimport { RecordatoriosService } from '../../providers/Api/Recordatorios.service';\nimport { StatusBar } from '@ionic-native/status-bar/ngx';\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.page.html',\n  styleUrls: ['./menu.page.scss'],\n  animations: [\n    trigger('alerta', [\n      state('open', style({\n        background: '#FFEBAD',\n        \n      })),\n      state('close', style({\n        background: '#FFFFFF'\n      })),\n      transition('* => *', [\n        animate('300ms')\n      ])\n    ])\n  ]\n})\nexport class MenuPage implements OnInit {\n\n   public cantidadSeguimiento = 0;\n   public notificaciones = 0;\n   public recordatorios = 0;\n\n   public red: string = 'wifi';\n   public role = '';\n\n    constructor(\n        private almacenamiento: InicioService,\n        private loading: LoadingService,\n        private toastService: ToastServices,\n        private navCtrl: NavController,\n        private apiSeguimiento: ApiSeguimientoService,\n        private cargaElementos: CargaElementosUsuariosService,\n        private router: Router,\n        private menuCtrl: MenuController,\n        private conexion: ConexionService,\n        private usuarioApi: UsuariosLoginService,\n        private apiRecordatorios: RecordatoriosService,\n        private statusbar: StatusBar\n    ) {\n\n     \n\n    }\n\n    ngOnInit() {\n\n    }\n\n    ionViewWillEnter() {\n      this.statusbar.backgroundColorByHexString('#777777');\n      this.capturarRole();\n    }\n\n    async capturarRole() {\n      const info = await this.almacenamiento.obtenerToken();\n\n      if ( info ) {\n        this.role = info.role;\n\n        this.apiSeguimiento.solicitudesRecibidas(info.token).subscribe((data: any) => {\n          if (data.exe) {\n            this.cantidadSeguimiento = data.response.SeguimientoData.length;\n          }\n        });\n\n        this.usuarioApi.notiCantidad(info.token).subscribe((data: any) => {\n          console.log(data);\n          if (data.exe) {\n            this.notificaciones = data.response;\n            } \n        });\n\n        this.apiRecordatorios.getRecordatorioPersona(info.token).subscribe((data: any) => {\n            this.recordatorios = data.response.length;\n        })\n      }\n    }\n\n    async terminar() {\n        try {\n          const estado = await this.almacenamiento.terminarPartida();\n\n          if (estado) {\n            console.log(estado, 'ESTADO');\n            this.loading.cargaProcesos('Cerrando sesión, te esperamos pronto').then( async () => {\n              const abandonarPartida = await this.conexion.destruir(); \n\n              if (abandonarPartida) {\n                console.log(abandonarPartida)\n                console.log('Abandonar partida');\n                this.cargaElementos.cancelarSuscripciones();\n                this.router.navigate(['/home']);\n                \n                this.loading.finalizarCargado();\n              } else {\n                console.log('Abandonar partida falló');\n                this.loading.finalizarCargado();\n              }\n             \n            });\n\n          } else {\n            console.log('MUY MAL');\n            this.router.navigate(['/home']);\n          }\n\n        } catch (error) {\n          this.router.navigate(['/home']);\n          this.loading.finalizarCargado();\n          await this.toastService.alertApplication('No se pudo cerrar la sesión', false);\n        }\n\n      }\n\n      // ir() {\n      //   this.menuCtrl.close('perfilMenu').then(() => {\n      //     this.router.navigate(['/central/perfil/solicitudes']);\n      //   })\n      // }\n\n      // citas() {\n      //   this.menuCtrl.close('perfilMenu').then(() => {\n      //     this.router.navigate(['/citas']);\n      //   })\n      // }\n\n\n}\n","<ion-header class=\"ion-no-border\">\n    <ion-toolbar color=\"oscuro\">\n        <ion-title>Herramientas</ion-title>\n    </ion-toolbar>\n</ion-header>\n\n<ion-content color=\"light\">\n\n    <div class=\"opts\">\n\n\n        <ion-card mode=\"ios\" [routerLink]=\"['/central/menu/factura']\">\n            <ion-card-header><img src=\"/assets/NuevaFactura.png\" width=\"100px\"></ion-card-header>\n            <ion-card-title>Facturero\n            </ion-card-title>\n        </ion-card>\n\n\n\n\n    </div>\n\n    <ion-list class=\"light\">\n\n\n\n\n    </ion-list>\n\n\n</ion-content>","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\r\nimport { Observable, timer, of, from } from 'rxjs';\r\nimport { retryWhen, delayWhen, tap, catchError, take, map, concatAll } from 'rxjs/operators';\r\nimport { Registro } from '../../interfaces/registro.interface';\r\nimport { FileTransfer, FileUploadOptions, FileTransferObject } from '@ionic-native/file-transfer/ngx';\r\nimport { URL_SERVER } from 'src/environments/environment';\r\nimport { InicioService } from '../Almacenamiento/inicio.service';\r\nimport { NavController } from '@ionic/angular';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class UsuariosLoginService {\r\n\r\n\r\n    constructor(\r\n                private http: HttpClient,\r\n                private transfer: FileTransfer, \r\n                private almacenamiento: InicioService,\r\n                private navCtrl: NavController) { }\r\n\r\n    private hanflerError(error: Observable<any>) {\r\n\r\n        let intento = 0;\r\n\r\n        return error.pipe(\r\n            delayWhen(() => timer(5000)),\r\n            map((errorHttp: HttpErrorResponse) => {\r\n\r\n                intento++;\r\n                \r\n                console.log('Entramos a intentos');\r\n                if (errorHttp instanceof ErrorEvent) {\r\n                    if (intento === 3) {\r\n                        throw new Error('Error de Red');\r\n                    }\r\n                } else if (errorHttp instanceof ProgressEvent) {\r\n                    if (intento === 3) {\r\n                        throw new Error('Error de Red');\r\n                    }\r\n                } else {\r\n\r\n                    if ( errorHttp.status === 404) {\r\n                           throw new Error(' al realizar la solicictud ');\r\n                        } else if ( errorHttp.status === 401) {\r\n                            this.almacenamiento.terminarPartida().then(() => {\r\n                                this.navCtrl.navigateRoot('/home');\r\n                            });\r\n                            throw new Error('No tiene permisos para realizar la petición ');\r\n                         } else {\r\n                             console.log(errorHttp, 'Error de servidor');\r\n                             throw new Error(' No se pudo realizar la petición, intentalo más tarde ');\r\n                        }\r\n                }\r\n            }),\r\n            take(3)\r\n        );\r\n}\r\n\r\n    registrar(data): Observable<any> {\r\n        return this.http.post(`${URL_SERVER}/usuarios`, data).pipe(\r\n            map((res: any) => {\r\n                if (res.exe) {\r\n                    res.response.exe = res.exe;\r\n                    res.response.token = res.token;\r\n                    return res.response;\r\n                } else {\r\n                    return res;\r\n                }\r\n            }),\r\n            retryWhen(error => this.hanflerError(error))\r\n        )\r\n    }\r\n\r\n\r\n    usuario(usuario): Observable<any> {\r\n        return this.http.post(`${URL_SERVER}/usuarios/unico`, {buscar: usuario}).pipe(\r\n            retryWhen(error => this.hanflerError(error))\r\n        )\r\n    }\r\n\r\n    iniciarPartida(usuario, dispositivoID): Observable<any> {\r\n        const options = {\r\n            headers: new HttpHeaders({\r\n                'x-dispositivoID': dispositivoID\r\n            })\r\n        };\r\n        return this.http.post(`${URL_SERVER}/login`, usuario, options ).pipe(\r\n            map((res: any) => {\r\n                if (res.exe) {\r\n                    res.response.exe = res.exe;\r\n                    res.response.token = res.token;\r\n                    return res.response;\r\n                } else {\r\n                    return res.exe;\r\n                }\r\n            }),\r\n            retryWhen(error => this.hanflerError(error))\r\n        );\r\n    }\r\n\r\n    fotoPerfilUsuarioMoto( imagen, token, tipo ) {\r\n        const options: FileUploadOptions  = {\r\n            fileKey: 'archivo',\r\n            httpMethod: 'PUT',\r\n            headers: {\r\n                'x-token': token\r\n            },\r\n            params: {\r\n                tipo\r\n            }\r\n        }\r\n\r\n        // 4912685137238652\r\n\r\n        const fileTransfer: FileTransferObject = this.transfer.create();\r\n\r\n        return from(fileTransfer.upload(imagen, `${URL_SERVER}/upload`, options))\r\n        .pipe(\r\n            catchError(error => {\r\n                console.log(`No se pudo subir la imagen `);\r\n                throw new Error(`No se pudo subir la imagen `);\r\n            })\r\n        );\r\n    }\r\n\r\n\r\n    fotoPortada( imagen, token, old ) {\r\n        const options: FileUploadOptions  = {\r\n            fileKey: 'archivo',\r\n            httpMethod: 'PUT',\r\n            headers: {\r\n                'x-token': token\r\n            },\r\n            params: {\r\n                old\r\n            }\r\n        }\r\n\r\n        // 4912685137238652\r\n\r\n        const fileTransfer: FileTransferObject = this.transfer.create();\r\n\r\n        return from(fileTransfer.upload(imagen, `${URL_SERVER}/upload/portada/`, options))\r\n        .pipe(\r\n            catchError(error => {\r\n                console.log(`No se pudo subir la imagen `);\r\n                throw new Error(`No se pudo subir la imagen `);\r\n            })\r\n        );\r\n    }\r\n\r\n    viewImagen(token) {\r\n        const options = {\r\n            headers: new HttpHeaders({\r\n                'x-token': token\r\n            })\r\n        };\r\n        return this.http.get(`${URL_SERVER}/ver`, options).pipe(\r\n            retryWhen(error => this.hanflerError(error))\r\n        );\r\n    }\r\n\r\n    buscarUsuario(termino: string, token: string) {\r\n        const headerOption = {\r\n            headers: new HttpHeaders({\r\n                'x-token': token\r\n            })\r\n        };\r\n\r\n        return this.http.get(`${URL_SERVER}/usuarios/${termino}`, headerOption ).pipe(\r\n            retryWhen(error => this.hanflerError(error))\r\n        );\r\n    }\r\n\r\n    buscarPerfilUsuario(usuario, token) {\r\n        const HeaderOption = {\r\n            headers: new HttpHeaders({\r\n                'x-token': token\r\n            })\r\n        };\r\n\r\n        return this.http.get(`${URL_SERVER}/usuarios/perfil/${usuario}`, HeaderOption).pipe(\r\n            retryWhen(error => this.hanflerError(error))\r\n        );\r\n    }\r\n\r\n\r\n    traerMisNotificaciones(token, desde) {\r\n        const HeaderOption = {\r\n            headers: new HttpHeaders({\r\n                'x-token': token,\r\n                'x-desde': desde.toString()\r\n            })\r\n        };\r\n\r\n        return this.http.get(`${URL_SERVER}/notificaciones/misnotificaciones/`, HeaderOption).pipe(\r\n            retryWhen(error => this.hanflerError(error))\r\n        );\r\n    }\r\n\r\n    notiCantidad(token) {\r\n        const HeaderOption = {\r\n            headers: new HttpHeaders({\r\n                'x-token': token\r\n            })\r\n        };\r\n\r\n        return this.http.get(`${URL_SERVER}/notificaciones/numero/`, HeaderOption).pipe(\r\n            retryWhen(error => this.hanflerError(error))\r\n        );\r\n    }\r\n\r\n\r\n    ActualizarNotificaciones(token, id) {\r\n        const HeaderOption = {\r\n            headers: new HttpHeaders({\r\n                'x-token': token\r\n            })\r\n        };\r\n\r\n        return this.http.put(`${URL_SERVER}/notificaciones/misnotificaciones/cambiarestado/`, {id}, HeaderOption).pipe(\r\n            retryWhen(error => this.hanflerError(error))\r\n        );\r\n    }\r\n\r\n\r\n    listarPaises() {\r\n        return this.http.get(`${URL_SERVER}/paises` ).pipe(\r\n            retryWhen(error => this.hanflerError(error))\r\n        );\r\n    }\r\n\r\n    listarCiudades(pais) {\r\n        const headerOption = {\r\n            headers: new HttpHeaders({\r\n                'x-pais': pais\r\n            })\r\n        };\r\n\r\n        return this.http.get(`${URL_SERVER}/ciudad`, headerOption ).pipe(\r\n            retryWhen(error => this.hanflerError(error))\r\n        );\r\n    }\r\n\r\n    CodigoComprobar(data) {\r\n     \r\n        return this.http.put(`${URL_SERVER}/codigos`, data ).pipe(\r\n            retryWhen(error => this.hanflerError(error))\r\n        );\r\n    }\r\n\r\n    EditarCodigo(data) {\r\n     \r\n        return this.http.put(`${URL_SERVER}/codigos/cambiar`, data ).pipe(\r\n            retryWhen(error => this.hanflerError(error))\r\n        );\r\n    }\r\n\r\n\r\n\r\n    negocios() {\r\n     \r\n        return this.http.get(`${URL_SERVER}/tiponegocio` ).pipe(\r\n            retryWhen(error => this.hanflerError(error))\r\n        );\r\n    }\r\n}\r\n"]}