{"version":3,"sources":["webpack:///src/app/pages/notificaciones/notificaciones-routing.module.ts","webpack:///src/app/pages/notificaciones/notificaciones.module.ts","webpack:///src/app/pages/notificaciones/notificaciones.page.html","webpack:///src/app/pages/notificaciones/notificaciones.page.ts","webpack:///src/app/providers/Api/UsuariosLogin.service.ts"],"names":["routes","path","component","NotificacionesPageRoutingModule","forChild","imports","exports","NotificacionesPageModule","declarations","NotificacionesPage","almacenamiento","usuarioApi","toastCtrl","router","notificaciones","desde","carga","inicio","obtenerToken","login","traerMisNotificaciones","token","subscribe","data","exe","response","forEach","item","usuarioCreador","cd","imagen","length","alertApplication","error","console","log","event","then","detail","complete","info","push","target","disabled","noti","ActualizarNotificaciones","_id","accion","tipo","navigate","nombreusuario","id","creador","refrescando","selector","templateUrl","styleUrls","static","UsuariosLoginService","http","transfer","navCtrl","intento","pipe","errorHttp","ErrorEvent","Error","ProgressEvent","status","terminarPartida","navigateRoot","post","res","hanflerError","usuario","buscar","dispositivoID","options","headers","fileKey","httpMethod","params","fileTransfer","create","upload","old","get","termino","headerOption","HeaderOption","toString","put","pais","providedIn"],"mappings":"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","file":"notificaciones-notificaciones-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { NotificacionesPage } from './notificaciones.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: NotificacionesPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class NotificacionesPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { NotificacionesPageRoutingModule } from './notificaciones-routing.module';\n\nimport { NotificacionesPage } from './notificaciones.page';\nimport { PipesModule } from '../../pipes/pipes.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    NotificacionesPageRoutingModule,\n    PipesModule\n  ],\n  declarations: [NotificacionesPage]\n})\nexport class NotificacionesPageModule {}\n","<ion-header class=\"ion-no-border\">\n    <ion-toolbar color=\"oscuro\">\n        <ion-buttons slot=\"start\">\n            <ion-back-button icon=\"chevron-back-outline\" defaultHref=\"/central/menu/\"></ion-back-button>\n        </ion-buttons>\n        <ion-title>Notificaciones</ion-title>\n    </ion-toolbar>\n</ion-header>\n\n<ion-content>\n    <ion-refresher slot=\"fixed\" (ionRefresh)=\"refrescando($event)\" pullFactor=\"0.5\" pullMin=\"50\" pullMax=\"150\">\n        <ion-refresher-content pullingIcon=\"arrow-dropdown\" refreshingSpinner=\"circles\">\n        </ion-refresher-content>\n    </ion-refresher>\n    <h3 class=\"tituloGrande\" *ngIf=\"notificaciones.length === 0\">La bandeja de notificaciones está vacía</h3>\n    <ion-list class=\"blanco \" *ngIf=\"notificaciones.length > 0\">\n        <ion-item lines=\"none\" *ngFor=\"let notificacion of notificaciones; let i = index;\" [color]=\"notificacion.abierta ? 'blanco' : 'light'\" (click)=\"navegar(notificacion)\">\n            <ion-avatar class=\"avatar\" slot=\"start\">\n                <ion-img *ngIf=\"notificacion.cd\" src=\"https://motocaliapp.com/{{notificacion.imagen}}\"></ion-img>\n                <ion-img *ngIf=\"!notificacion.cd\" src=\"{{notificacion.rutaApp}}\"></ion-img>\n            </ion-avatar>\n            <ion-label class=\"ion-text-wrap\">\n                <strong>{{notificacion.titulo}}</strong><br>\n                <div>{{notificacion.mensaje}}</div>\n                <div class=\"ion-text-right\">{{notificacion.fechaCreado | cambioUTC}}</div>\n\n            </ion-label>\n\n        </ion-item>\n    </ion-list>\n\n    <ion-infinite-scroll *ngIf=\"carga\" #inifinito threshold=\"100px\" (ionInfinite)=\"loadData($event)\">\n        <ion-infinite-scroll-content loadingSpinner=\"bubbles\" loadingText=\"Cargando entradas...\">\n        </ion-infinite-scroll-content>\n    </ion-infinite-scroll>\n\n</ion-content>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { InicioService } from '../../providers/Almacenamiento/inicio.service';\nimport { UsuariosLoginService } from 'src/app/providers/Api/UsuariosLogin.service';\nimport { ToastServices } from '../../providers/Utilidades/ToastService.service';\nimport * as moment from 'moment';\nimport { Router } from '@angular/router';\nimport { IonInfiniteScroll } from '@ionic/angular';\n@Component({\n  selector: 'app-notificaciones',\n  templateUrl: './notificaciones.page.html',\n  styleUrls: ['./notificaciones.page.scss'],\n})\nexport class NotificacionesPage implements OnInit {\n\n  notificaciones: any = [''];\n  desde = 0;\n  carga = false;\n\n  @ViewChild('inifinito', {static: false}) infinite: IonInfiniteScroll;\n\n  constructor(\n    private almacenamiento: InicioService,\n    private usuarioApi: UsuariosLoginService,\n    private toastCtrl: ToastServices,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n  }\n\n  ionViewWillEnter() {\n\n    this.inicio();\n\n  }\n\n  async inicio() {\n      const login = await this.almacenamiento.obtenerToken();\n\n      if (login) {\n        this.usuarioApi.traerMisNotificaciones(login.token, this.desde).subscribe((data: any) => {\n          if (data.exe) {\n              \n              data.response.forEach((item) => {\n                if (item.usuarioCreador) {\n                  item.cd = true;\n                  if (item.usuarioCreador.imagen.length > 0) {\n                    item.imagen = item.usuarioCreador.imagen[0].path;\n                  }\n                } else {\n                    item.cd = false;\n                }\n                \n              })\n              this.notificaciones = data.response;\n              this.carga = true;\n            } else {\n              this.toastCtrl.alertApplication('No se pudo traer las notificaciones, intentelo más tarde', false);\n            }\n        }, (error) => {\n          console.log(error)\n            this.toastCtrl.alertApplication('No se pudo traer las notificaciones, intentelo más tarde', false);\n        })\n      }\n  }\n\n  refrescando( event ) {\n    this.desde = 0;\n    this.inicio().then(() => {\n      event.detail.complete();\n    })\n  }\n\n  async loadData( event ) {\n    this.desde = this.desde + 10;\n    console.log(this.desde)\n    const info = await this.almacenamiento.obtenerToken();\n\n    if ( info ) {\n\n      this.usuarioApi.traerMisNotificaciones(info.token, this.desde).subscribe((data: any) => {\n        console.log(data);\n        if (data.exe) {\n           \n            if ( data.response.length > 0  ) {\n               \n            data.response.forEach((item) => {\n              if (item.usuarioCreador) {\n                item.cd = true;\n                if (item.usuarioCreador.imagen.length > 0) {\n                  item.imagen = item.usuarioCreador.imagen[0].path;\n                }\n              } else {\n                  item.cd = false;\n              }\n              this.notificaciones.push(item)\n            })\n            event.target.complete();\n           } else {\n            event.target.disabled = true;\n            this.desde = 0;\n           }\n          } else {\n            this.toastCtrl.alertApplication('No se pudo traer las notificaciones, intentelo más tarde', false);\n          }\n      }, (error) => {\n        console.log(error)\n          this.toastCtrl.alertApplication('No se pudo traer las notificaciones, intentelo más tarde', false);\n      })\n\n    }\n  } \n\n  async navegar( noti: any) {\n      const info = await this.almacenamiento.obtenerToken();\n\n      if ( info ) {\n        this.usuarioApi.ActualizarNotificaciones(info.token, noti._id).subscribe((data: any) => {\n          if (data.exe) {\n            if (noti.accion.tipo === 'Seguimiento') {\n              this.router.navigate(['/central/menu/solicitudes']);\n            } else if (noti.accion.tipo === 'SeguimientoAceptado') {\n              this.router.navigate(['/central/buscar/perfil-visita/', noti.usuarioCreador.nombreusuario]);\n            } else if (noti.accion.tipo === 'Productos') {\n              this.router.navigate(['/central/menu/ivt-miinventario/', noti.accion.data.id, 'productos', noti.accion.data.id]);\n            } else if (noti.accion.tipo === 'SalidaIVT') {\n              this.router.navigate(['/central/menu/ivt-miinventario/', noti.accion.data.id, 'salidas', noti.accion.data.id, noti.accion.data.creador]);\n            } else if (noti.accion.tipo === 'EntradaIVT') {\n              this.router.navigate(['/central/menu/ivt-miinventario/', noti.accion.data.id, 'entradas', noti.accion.data.id]);\n            } else if (noti.accion.tipo === 'Publicacion') {\n              this.router.navigate(['/igtmpublic/', noti.accion.data.id]);\n            }\n          }\n        })\n      }\n  }\n\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\r\nimport { Observable, timer, of, from } from 'rxjs';\r\nimport { retryWhen, delayWhen, tap, catchError, take, map, concatAll } from 'rxjs/operators';\r\nimport { Registro } from '../../interfaces/registro.interface';\r\nimport { FileTransfer, FileUploadOptions, FileTransferObject } from '@ionic-native/file-transfer/ngx';\r\nimport { URL_SERVER } from 'src/environments/environment';\r\nimport { InicioService } from '../Almacenamiento/inicio.service';\r\nimport { NavController } from '@ionic/angular';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class UsuariosLoginService {\r\n\r\n\r\n    constructor(\r\n                private http: HttpClient,\r\n                private transfer: FileTransfer, \r\n                private almacenamiento: InicioService,\r\n                private navCtrl: NavController) { }\r\n\r\n    private hanflerError(error: Observable<any>) {\r\n\r\n        let intento = 0;\r\n\r\n        return error.pipe(\r\n            delayWhen(() => timer(5000)),\r\n            map((errorHttp: HttpErrorResponse) => {\r\n\r\n                intento++;\r\n                \r\n                console.log('Entramos a intentos');\r\n                if (errorHttp instanceof ErrorEvent) {\r\n                    if (intento === 3) {\r\n                        throw new Error('Error de Red');\r\n                    }\r\n                } else if (errorHttp instanceof ProgressEvent) {\r\n                    if (intento === 3) {\r\n                        throw new Error('Error de Red');\r\n                    }\r\n                } else {\r\n\r\n                    if ( errorHttp.status === 404) {\r\n                           throw new Error(' al realizar la solicictud ');\r\n                        } else if ( errorHttp.status === 401) {\r\n                            this.almacenamiento.terminarPartida().then(() => {\r\n                                this.navCtrl.navigateRoot('/home');\r\n                            });\r\n                            throw new Error('No tiene permisos para realizar la petición ');\r\n                         } else {\r\n                             console.log(errorHttp, 'Error de servidor');\r\n                             throw new Error(' No se pudo realizar la petición, intentalo más tarde ');\r\n                        }\r\n                }\r\n            }),\r\n            take(3)\r\n        );\r\n}\r\n\r\n    registrar(data): Observable<any> {\r\n        return this.http.post(`${URL_SERVER}/usuarios`, data).pipe(\r\n            map((res: any) => {\r\n                if (res.exe) {\r\n                    res.response.exe = res.exe;\r\n                    res.response.token = res.token;\r\n                    return res.response;\r\n                } else {\r\n                    return res;\r\n                }\r\n            }),\r\n            retryWhen(error => this.hanflerError(error))\r\n        )\r\n    }\r\n\r\n\r\n    usuario(usuario): Observable<any> {\r\n        return this.http.post(`${URL_SERVER}/usuarios/unico`, {buscar: usuario}).pipe(\r\n            retryWhen(error => this.hanflerError(error))\r\n        )\r\n    }\r\n\r\n    iniciarPartida(usuario, dispositivoID): Observable<any> {\r\n        const options = {\r\n            headers: new HttpHeaders({\r\n                'x-dispositivoID': dispositivoID\r\n            })\r\n        };\r\n        return this.http.post(`${URL_SERVER}/login`, usuario, options ).pipe(\r\n            map((res: any) => {\r\n                if (res.exe) {\r\n                    res.response.exe = res.exe;\r\n                    res.response.token = res.token;\r\n                    return res.response;\r\n                } else {\r\n                    return res.exe;\r\n                }\r\n            }),\r\n            retryWhen(error => this.hanflerError(error))\r\n        );\r\n    }\r\n\r\n    fotoPerfilUsuarioMoto( imagen, token, tipo ) {\r\n        const options: FileUploadOptions  = {\r\n            fileKey: 'archivo',\r\n            httpMethod: 'PUT',\r\n            headers: {\r\n                'x-token': token\r\n            },\r\n            params: {\r\n                tipo\r\n            }\r\n        }\r\n\r\n        // 4912685137238652\r\n\r\n        const fileTransfer: FileTransferObject = this.transfer.create();\r\n\r\n        return from(fileTransfer.upload(imagen, `${URL_SERVER}/upload`, options))\r\n        .pipe(\r\n            catchError(error => {\r\n                console.log(`No se pudo subir la imagen `);\r\n                throw new Error(`No se pudo subir la imagen `);\r\n            })\r\n        );\r\n    }\r\n\r\n\r\n    fotoPortada( imagen, token, old ) {\r\n        const options: FileUploadOptions  = {\r\n            fileKey: 'archivo',\r\n            httpMethod: 'PUT',\r\n            headers: {\r\n                'x-token': token\r\n            },\r\n            params: {\r\n                old\r\n            }\r\n        }\r\n\r\n        // 4912685137238652\r\n\r\n        const fileTransfer: FileTransferObject = this.transfer.create();\r\n\r\n        return from(fileTransfer.upload(imagen, `${URL_SERVER}/upload/portada/`, options))\r\n        .pipe(\r\n            catchError(error => {\r\n                console.log(`No se pudo subir la imagen `);\r\n                throw new Error(`No se pudo subir la imagen `);\r\n            })\r\n        );\r\n    }\r\n\r\n    viewImagen(token) {\r\n        const options = {\r\n            headers: new HttpHeaders({\r\n                'x-token': token\r\n            })\r\n        };\r\n        return this.http.get(`${URL_SERVER}/ver`, options).pipe(\r\n            retryWhen(error => this.hanflerError(error))\r\n        );\r\n    }\r\n\r\n    buscarUsuario(termino: string, token: string) {\r\n        const headerOption = {\r\n            headers: new HttpHeaders({\r\n                'x-token': token\r\n            })\r\n        };\r\n\r\n        return this.http.get(`${URL_SERVER}/usuarios/${termino}`, headerOption ).pipe(\r\n            retryWhen(error => this.hanflerError(error))\r\n        );\r\n    }\r\n\r\n    buscarPerfilUsuario(usuario, token) {\r\n        const HeaderOption = {\r\n            headers: new HttpHeaders({\r\n                'x-token': token\r\n            })\r\n        };\r\n\r\n        return this.http.get(`${URL_SERVER}/usuarios/perfil/${usuario}`, HeaderOption).pipe(\r\n            retryWhen(error => this.hanflerError(error))\r\n        );\r\n    }\r\n\r\n\r\n    traerMisNotificaciones(token, desde) {\r\n        const HeaderOption = {\r\n            headers: new HttpHeaders({\r\n                'x-token': token,\r\n                'x-desde': desde.toString()\r\n            })\r\n        };\r\n\r\n        return this.http.get(`${URL_SERVER}/notificaciones/misnotificaciones/`, HeaderOption).pipe(\r\n            retryWhen(error => this.hanflerError(error))\r\n        );\r\n    }\r\n\r\n    notiCantidad(token) {\r\n        const HeaderOption = {\r\n            headers: new HttpHeaders({\r\n                'x-token': token\r\n            })\r\n        };\r\n\r\n        return this.http.get(`${URL_SERVER}/notificaciones/numero/`, HeaderOption).pipe(\r\n            retryWhen(error => this.hanflerError(error))\r\n        );\r\n    }\r\n\r\n\r\n    ActualizarNotificaciones(token, id) {\r\n        const HeaderOption = {\r\n            headers: new HttpHeaders({\r\n                'x-token': token\r\n            })\r\n        };\r\n\r\n        return this.http.put(`${URL_SERVER}/notificaciones/misnotificaciones/cambiarestado/`, {id}, HeaderOption).pipe(\r\n            retryWhen(error => this.hanflerError(error))\r\n        );\r\n    }\r\n\r\n\r\n    listarPaises() {\r\n        return this.http.get(`${URL_SERVER}/paises` ).pipe(\r\n            retryWhen(error => this.hanflerError(error))\r\n        );\r\n    }\r\n\r\n    listarCiudades(pais) {\r\n        const headerOption = {\r\n            headers: new HttpHeaders({\r\n                'x-pais': pais\r\n            })\r\n        };\r\n\r\n        return this.http.get(`${URL_SERVER}/ciudad`, headerOption ).pipe(\r\n            retryWhen(error => this.hanflerError(error))\r\n        );\r\n    }\r\n\r\n    CodigoComprobar(data) {\r\n     \r\n        return this.http.put(`${URL_SERVER}/codigos`, data ).pipe(\r\n            retryWhen(error => this.hanflerError(error))\r\n        );\r\n    }\r\n\r\n    EditarCodigo(data) {\r\n     \r\n        return this.http.put(`${URL_SERVER}/codigos/cambiar`, data ).pipe(\r\n            retryWhen(error => this.hanflerError(error))\r\n        );\r\n    }\r\n\r\n\r\n\r\n    negocios() {\r\n     \r\n        return this.http.get(`${URL_SERVER}/tiponegocio` ).pipe(\r\n            retryWhen(error => this.hanflerError(error))\r\n        );\r\n    }\r\n}\r\n"]}