{"version":3,"sources":["webpack:///src/app/pages/EstadoCitas/hoja/hoja-routing.module.ts","webpack:///src/app/pages/EstadoCitas/hoja/hoja.module.ts","webpack:///src/app/pages/EstadoCitas/hoja/hoja.page.html","webpack:///src/app/pages/EstadoCitas/hoja/hoja.page.ts"],"names":["routes","path","component","HojaPageRoutingModule","forChild","imports","exports","HojaPageModule","declarations","HojaPage","modalCtrl","alertCtrl","almacenamiento","active","router","hojaApi","toast","fotos","repuestos","trabajos","role","cargaFotos","id","idHoja","estado","tipo","placa","snapshot","paramMap","get","miHoja2","miHoja","event","target","complete","navigate","idx","obtenerToken","info","leeHoja","token","subscribe","data","console","log","exe","response","_id","cita","traerFotos","err","toastError","leeHoja2","leefotos","msg","create","header","message","mode","buttons","text","handler","cambiarEstado","alert","present","editarCita","toastExitoso","refrescando","selector","templateUrl","styleUrls"],"mappings":"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","file":"EstadoCitas-hoja-hoja-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { HojaPage } from './hoja.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HojaPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class HojaPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { HojaPageRoutingModule } from './hoja-routing.module';\n\nimport { HojaPage } from './hoja.page';\nimport { PipesModule } from '../../../pipes/pipes.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    HojaPageRoutingModule,\n    PipesModule\n  ],\n  declarations: [HojaPage]\n})\nexport class HojaPageModule {}\n","<ion-header class=\"ion-no-border\">\n    <ion-toolbar color=\"oscuro\">\n        <ion-buttons slot=\"start\">\n            <ion-back-button icon=\"chevron-back-outline\" defaultHref=\"/central/menu\"></ion-back-button>\n        </ion-buttons>\n        <ion-title>Hoja de Vida</ion-title>\n\n        <div *ngIf=\"role === 'TALLER_ROLE'\" class=\"estadobol\" [ngClass]=\"{'estado-amarillo ': estado === 'PENDIENTE', 'estado-azul ': estado === 'EN PROGRESO', 'estado-verde ': estado === 'TERMINADO'}\" slot=\"end\" (click)=\"estados()\">\n\n\n        </div>\n        <div *ngIf=\"role === 'USER_ROLE'\" class=\"estadobol\" [ngClass]=\"{'estado-amarillo ': estado === 'PENDIENTE', 'estado-azul ': estado === 'EN PROGRESO', 'estado-verde ': estado === 'TERMINADO'}\" slot=\"end\"></div>\n\n    </ion-toolbar>\n</ion-header>\n\n<ion-content>\n    <ion-refresher slot=\"fixed\" (ionRefresh)=\"refrescando($event)\" pullFactor=\"0.5\" pullMin=\"50\" pullMax=\"150\">\n        <ion-refresher-content pullingIcon=\"arrow-dropdown\" refreshingSpinner=\"circles\">\n        </ion-refresher-content>\n    </ion-refresher>\n\n    <div class=\"divider \"></div>\n\n    <div class=\"placa\" *ngIf=\"tipo === 'hoja'\">{{ placa }}</div>\n\n    <div class=\"divider \"></div>\n\n    <ion-list>\n        <ion-item-divider color=\"light\">\n            Registro Fotográfico\n        </ion-item-divider>\n    </ion-list>\n\n    <div *ngIf=\"fotos.length === 0 && trabajos.length === 0 && repuestos.length === 0 && !cargaFotos && role === 'USER_ROLE'\" class=\"flexbetver\">\n        <img src=\"/assets/Hojas.png\" width=\"70px\" alt=\"\">\n        <h3 class=\"tituloGrande\">No hay información en mi hoja de vida</h3>\n    </div>\n\n    <ion-segment scrollable=\"true\">\n        <div class=\"color\" (click)=\"tomarFoto()\" *ngIf=\"role === 'TALLER_ROLE'\"><span class=\"none\">ssfsdfsfs</span>\n            <div class=\"add\">\n                <ion-buttons>\n                    <ion-button color=\"medium\">\n                        <ion-icon name=\"add\" slot=\"icon-only\"></ion-icon>\n                    </ion-button>\n                </ion-buttons>\n                <strong>Añadir Fotografía</strong>\n            </div>\n        </div>\n\n        <div class=\"color2\" *ngIf=\"cargaFotos\"><span class=\"none\">ssfsdfsfs</span>\n            <ion-skeleton-text animated></ion-skeleton-text>\n        </div>\n        <div class=\"color2\" *ngIf=\"cargaFotos\"><span class=\"none\">ssfsdfsfs</span>\n            <ion-skeleton-text animated></ion-skeleton-text>\n        </div>\n\n        <div class=\"color\" *ngFor=\"let foto of fotos; let i = index;\" (click)=\"verFoto(i)\"><span class=\"none\">ssfsdfsfs</span>\n            <img src=\"https://motocaliapp.com/11927613402/{{foto.ruta}}\" width=\"100%\" alt=\"\">\n        </div>\n\n\n    </ion-segment>\n\n\n    <ion-list *ngIf=\"role === 'TALLER_ROLE' || repuestos.length > 0\">\n        <ion-item-divider color=\"light\">\n            <ion-label> Añadir Repuestos</ion-label>\n            <ion-buttons slot=\"end\" *ngIf=\"role === 'TALLER_ROLE'\">\n                <ion-button (click)=\"viajar('repuestos')\">\n                    <ion-icon name=\"add\" slot=\"icon-only\"></ion-icon>\n                </ion-button>\n            </ion-buttons>\n        </ion-item-divider>\n        <div class=\"divider\" *ngIf=\"repuestos.length === 0\"></div>\n\n        <ion-item *ngFor=\"let repuesto of repuestos; let i = index;\" class=\"sinfondo\">\n            <ion-label class=\"ion-text-wrap\">\n                <div class=\"nombre\">\n                    {{repuesto.nombre}}\n                </div>\n                <br>\n                <div class=\"flexbet\">\n                    <div class=\"flexbet\">\n                        <strong>Cantidad: </strong>\n                        <span class=\"verdei padd\"> {{repuesto.cantidad}} </span>\n                    </div>\n\n                    <div class=\"flexbet\">\n                        <strong>Precio: </strong>\n                        <span class=\"verdei\">$ {{repuesto.precio | decimales: 'es-CO'}}</span>\n                    </div>\n                </div>\n\n\n                <div class=\"flexbet bor\">\n                    <strong>Total: </strong>\n                    <span class=\"rojoi\">$ {{repuesto.total | decimales: 'es-CO'}}</span>\n                </div>\n\n            </ion-label>\n        </ion-item>\n    </ion-list>\n\n\n    <ion-list *ngIf=\"role === 'TALLER_ROLE' || trabajos.length > 0\">\n        <ion-item-divider color=\"light\">\n            <ion-label>Trabajos realizados</ion-label>\n            <ion-buttons slot=\"end\" *ngIf=\"role === 'TALLER_ROLE'\">\n                <ion-button (click)=\"viajar('trabajos')\">\n                    <ion-icon name=\"add\" slot=\"icon-only\"></ion-icon>\n                </ion-button>\n            </ion-buttons>\n        </ion-item-divider>\n        <div class=\"divider\" *ngIf=\"trabajos.length === 0\"></div>\n        <ion-item *ngFor=\"let trabajo of trabajos; let i = index;\" class=\"sinfondo\">\n            <ion-label class=\"ion-text-wrap\">\n                <div class=\"nombre\">\n                    {{trabajo.nombre}}\n                </div>\n                <br>\n                <div class=\"flexbet\">\n                    <strong>Precio: </strong>\n                    <span class=\"verdei\">$ {{trabajo.precio | decimales: 'es-CO'}}</span>\n                </div>\n\n\n            </ion-label>\n        </ion-item>\n    </ion-list>\n</ion-content>","import { Component, OnInit } from '@angular/core';\nimport { ModalController, AlertController } from '@ionic/angular';\nimport { InicioService } from '../../../providers/Almacenamiento/inicio.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { EstadoCitasService } from '../../../providers/Api/EstadoCitas.service';\nimport { ToastServices } from '../../../providers/Utilidades/ToastService.service';\n\n@Component({\n  selector: 'app-hoja',\n  templateUrl: './hoja.page.html',\n  styleUrls: ['./hoja.page.scss'],\n})\nexport class HojaPage implements OnInit {\n\n  fotos = [];\n  repuestos = [];\n  trabajos = [];\n\n  role = '';\n\n  cargaFotos = true;\n\n  id = '';\n  idHoja = '';\n\n  estado = '';\n\n  tipo = '';\n  placa = '';\n  constructor(\n    private modalCtrl: ModalController,\n    private alertCtrl: AlertController,\n    private almacenamiento: InicioService,\n    private active: ActivatedRoute,\n    private router: Router,\n    private hojaApi: EstadoCitasService,\n    private toast: ToastServices\n  ) { }\n\n  ngOnInit() {\n  }\n\n  async ionViewWillEnter() {\n\n    this.tipo = this.active.snapshot.paramMap.get('tipo');\n\n    if (this.active.snapshot.paramMap.get('tipo') === 'hoja') {\n      await this.miHoja2();\n    } else {\n      await this.miHoja();\n    }\n    \n   \n  }\n\n  async refrescando(event) {\n\n    if (this.active.snapshot.paramMap.get('tipo') === 'hoja') {\n      await this.miHoja2();\n    } else {\n      await this.miHoja();\n    }\n    \n    event.target.complete();\n  }\n\n  tomarFoto() {\n    this.router.navigate(['/hoja-vida-modal', this.active.snapshot.paramMap.get('id'), 'fotos', this.idHoja]);\n  }\n\n  verFoto(idx) {\n    this.router.navigate(['/hoja-vida-modal', this.active.snapshot.paramMap.get('id'), 'ver', this.idHoja, idx]);\n  }\n\n  viajar( tipo ) {\n    this.router.navigate(['/hoja-vida-modal', this.active.snapshot.paramMap.get('id'), tipo, this.idHoja])\n  }\n\n  async miHoja() {\n    const info = await this.almacenamiento.obtenerToken();\n\n    if ( info ) {\n      this.hojaApi.leeHoja(info.token, {id: this.active.snapshot.paramMap.get('id')}).subscribe(async (data: any) => {\n        console.log(data);\n        if (data.exe) {\n          if (data.response) {\n            this.idHoja = data.response._id;\n          this.repuestos = data.response.repuestos;\n          this.trabajos = data.response.trabajos;\n          this.estado = data.response.cita.estado;\n          }\n          await this.traerFotos();\n        } else {\n\n        }\n      }, (err) => {\n        this.toast.toastError('No se pudo traer la información de la hoja de vida, inténtelo más tarde');\n      })\n    }\n  }\n\n\n  async miHoja2() {\n    const info = await this.almacenamiento.obtenerToken();\n\n    if ( info ) {\n      this.hojaApi.leeHoja2(info.token, {id: this.active.snapshot.paramMap.get('id')}).subscribe(async (data: any) => {\n        console.log(data);\n        if (data.exe) {\n          if (data.response) {\n            this.idHoja = data.response._id;\n            this.repuestos = data.response.repuestos;\n            this.trabajos = data.response.trabajos;\n\n            this.placa = data.response.placa;\n          }\n          await this.traerFotos();\n        } else {\n\n        }\n      }, (err) => {\n        this.toast.toastError('No se pudo traer la información de la hoja de vida, inténtelo más tarde');\n      })\n    }\n  }\n\n\n  async traerFotos() {\n      const info = await this.almacenamiento.obtenerToken();\n\n      if ( info ) {\n          this.role = info.role;\n          this.hojaApi.leefotos(info.token, {id: this.idHoja}).subscribe((data: any) => {\n            if (data.exe) {\n              this.fotos = data.response;\n            } else {\n\n            }\n            this.cargaFotos = false;\n          }, (err) => {\n            this.cargaFotos = false;\n            this.toast.toastError('No se pudo traer las fotos de la hoja de vida, inténtelo más tarde');\n          })\n      }\n  }\n\n  async estados() {\n    let msg = 'PENDIENTE';\n\n    if (this.estado === 'PENDIENTE') {\n      msg = 'Marcar como \"en Progeso\"';\n    } else if (this.estado === 'EN PROGRESO') {\n      msg = 'Marcar como \"Terminado\"';\n    }\n    const alert = await this.alertCtrl.create({\n      header: 'Cambiar Estado de Cita',\n      message: `Actualmente la cita esta en estado ${this.estado}`,\n      mode: 'ios',\n      buttons: [\n        {\n          text: 'cancelar',\n          role: 'cancel',\n        },\n        {\n          text: msg,\n          handler: () => {\n            this.estado = this.estado === 'PENDIENTE' ? 'EN PROGRESO' : 'TERMINADO';\n            this.cambiarEstado();\n          }\n        }\n      ]\n    })\n\n    await alert.present();\n  }\n\n  async cambiarEstado() {\n    const info = await this.almacenamiento.obtenerToken();\n\n    if ( info ) {\n      this.hojaApi.editarCita(info.token, this.active.snapshot.paramMap.get('id'), {estado: this.estado}).subscribe((data: any) => {\n        console.log(data);\n        if (data.exe) {\n          this.toast.toastExitoso('Estado cambiado');\n        } else {\n          this.toast.toastError('No se pudo cambiar el estado de la cita, inténtelo ás tarde');\n        }\n      }, (err) => {\n        this.toast.toastError('No se pudo cambiar el estado de la cita, inténtelo ás tarde');\n      });\n    }\n  }\n\n}\n"]}