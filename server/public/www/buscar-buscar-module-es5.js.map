{"version":3,"sources":["webpack:///src/app/pages/buscar/buscar.module.ts","webpack:///src/app/pages/buscar/buscar.page.ts","webpack:///src/app/pages/buscar/buscar.page.html","webpack:///src/app/providers/Api/UsuariosLogin.service.ts"],"names":["routes","path","component","BuscarPageModule","forChild","imports","declarations","BuscarPage","apiUsuario","almacenamiento","toast","cargarElementos","menuCtrl","statusbar","data","red","$cargarRed","subscribe","backgroundColorByHexString","event","console","log","detail","value","termino","trimLeft","obtenerToken","then","info","buscarUsuario","token","usuarios","response","error","alertApplication","message","catch","e","toggle","selector","templateUrl","styleUrls","UsuariosLoginService","http","transfer","navCtrl","intento","pipe","errorHttp","ErrorEvent","Error","ProgressEvent","status","terminarPartida","navigateRoot","post","res","exe","hanflerError","usuario","buscar","dispositivoID","options","headers","imagen","tipo","fileKey","httpMethod","params","fileTransfer","create","upload","old","get","headerOption","HeaderOption","desde","toString","id","put","pais","providedIn"],"mappings":"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","file":"buscar-buscar-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { BuscarPage } from './buscar.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: BuscarPage,\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [BuscarPage]\n})\nexport class BuscarPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { UsuariosLoginService } from '../../providers/Api/UsuariosLogin.service';\nimport { InicioService } from '../../providers/Almacenamiento/inicio.service';\nimport { ToastServices } from '../../providers/Utilidades/ToastService.service';\nimport { trigger, transition, animate, style, stagger, query } from '@angular/animations';\nimport { CargaElementosUsuariosService } from '../../providers/cargas/usuarios.service';\nimport { MenuController } from '@ionic/angular';\nimport { StatusBar } from '@ionic-native/status-bar/ngx';\n\n@Component({\n  selector: 'app-buscar',\n  templateUrl: './buscar.page.html',\n  // animations: [\n  //   trigger('usuario', [\n  //     transition('* => *', [\n  //       query(':enter', [\n  //         style({opacity: 0, transform: 'translateX(-200px)'}),\n  //         stagger(200, [\n  //           animate('40ms', style({ opacity: 1, transform: 'none' }))\n  //         ])\n  //       ], {optional: true}),\n\n  //       query(':leave', [\n  //         style({opacity: 1, transform: 'none'}),\n  //         stagger(200, [\n  //           animate('40ms', style({ opacity: 0, transform: 'translateX(-200px)' }))\n  //         ])\n  //       ], {optional: true})\n  //     ])\n  //   ])\n  // ],\n  styleUrls: ['./buscar.page.scss'],\n})\nexport class BuscarPage implements OnInit {\n\n  data = [];\n  red = 'wifi';\n\n  constructor(\n    private apiUsuario: UsuariosLoginService,\n    private almacenamiento: InicioService,\n    private toast: ToastServices,\n    private cargarElementos: CargaElementosUsuariosService,\n    private menuCtrl: MenuController,\n    private statusbar: StatusBar\n  ) { \n    this.cargarElementos.$cargarRed.subscribe((red: any) => {\n      this.red = red;\n    })\n\n  }\n\n  ngOnInit() {\n  }\n\n  ionViewWillEnter() {\n    this.statusbar.backgroundColorByHexString('#777777');\n  }\n\n  buscar( event ) {\n    console.log( event.detail.value);\n    const termino: string = event.detail.value.trimLeft() === '' ? '<<<<<<<<<<<<<<<<<<<<' :  event.detail.value.trimLeft();\n\n    this.almacenamiento.obtenerToken().then((info: any) => {\n    //console.log(info);\n    this.apiUsuario.buscarUsuario(termino, info.token).subscribe((usuarios: any) => {\n          // for (let i = 0; i <= usuario.response.length; i++)\n          this.data = usuarios.response;\n          console.log(this.data);\n        }, (error) => {\n          this.toast.alertApplication( error.message , false);\n        });\n     }).catch((e) => {\n      this.toast.alertApplication('Error al buscar el usuario', false);\n    });\n  }\n\n  viajar() {\n    console.log('Holiii');\n  }\n\n  abrirMenu() {\n    this.menuCtrl.toggle('perfilMenu');\n  }\n}\n","<ion-header class=\"ion-no-border\" *ngIf=\"red !== 'none'\">\n    <ion-toolbar color=\"blanco\">\n        <ion-searchbar mode=\"ios\" placeholder=\"Buscar\" (ionChange)=\"buscar( $event );\"></ion-searchbar>\n    </ion-toolbar>\n\n</ion-header>\n\n<ion-header class=\"ion-no-border\" *ngIf=\"red === 'none'\">\n    <ion-toolbar color=\"light\">\n\n        <ion-title class=\"titulo\">Fuera de Línea</ion-title>\n        <ion-buttons slot=\"end\">\n            <ion-button>\n                <ion-icon color=\"danger\" name=\"wifi-outline\" slot=\"icon-only\"></ion-icon>\n            </ion-button>\n        </ion-buttons>\n    </ion-toolbar>\n\n\n</ion-header>\n\n<ion-content *ngIf=\"red !== 'none'\">\n\n    <ion-list>\n        <ion-item *ngFor=\"let usuario of data\" class=\"hero\" [routerLink]=\"['/central//buscar/perfil-visita/', usuario.nombreusuario]\">\n\n            <ion-avatar *ngIf=\"usuario.imagen.length > 0\" slot=\"start\">\n                <img src=\"https://motocaliapp.com/{{ usuario.imagen[0].path }}\">\n            </ion-avatar>\n\n            <ion-avatar *ngIf=\"usuario.imagen.length === 0\" slot=\"start\">\n                <img src=\"/assets/resources/perfil.PNG\">\n            </ion-avatar>\n\n            <ion-label>\n                <h4 class=\"nombre\">{{ usuario.nombrecompleto }}</h4>\n                <span class=\"usuario\">{{ usuario.nombreusuario }}</span>\n            </ion-label>\n        </ion-item>\n    </ion-list>\n</ion-content>\n\n<ion-content color=\"blanco\" *ngIf=\"red === 'none'\">\n    <div class=\"main ion-padding\">\n        <h2 class=\"ion-text-center opacity\">\n            Ups! lo sentimos, <br> no tienes acceso a internet\n        </h2> <br>\n\n        <p class=\"ion-text-center\">Te invitamos a que disfrutes de los módulos offline que ofrecemos</p>\n\n\n        <br>\n        <ion-button (click)=\"abrirMenu()\" fill=\"outline\" mode=\"ios\" expand=\"block\" color=\"success\">Módulos Offline</ion-button>\n\n    </div>\n\n\n\n\n</ion-content>","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\r\nimport { Observable, timer, of, from } from 'rxjs';\r\nimport { retryWhen, delayWhen, tap, catchError, take, map, concatAll } from 'rxjs/operators';\r\nimport { Registro } from '../../interfaces/registro.interface';\r\nimport { FileTransfer, FileUploadOptions, FileTransferObject } from '@ionic-native/file-transfer/ngx';\r\nimport { URL_SERVER } from 'src/environments/environment';\r\nimport { InicioService } from '../Almacenamiento/inicio.service';\r\nimport { NavController } from '@ionic/angular';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class UsuariosLoginService {\r\n\r\n\r\n    constructor(\r\n                private http: HttpClient,\r\n                private transfer: FileTransfer, \r\n                private almacenamiento: InicioService,\r\n                private navCtrl: NavController) { }\r\n\r\n    private hanflerError(error: Observable<any>) {\r\n\r\n        let intento = 0;\r\n\r\n        return error.pipe(\r\n            delayWhen(() => timer(5000)),\r\n            map((errorHttp: HttpErrorResponse) => {\r\n\r\n                intento++;\r\n                \r\n                console.log('Entramos a intentos');\r\n                if (errorHttp instanceof ErrorEvent) {\r\n                    if (intento === 3) {\r\n                        throw new Error('Error de Red');\r\n                    }\r\n                } else if (errorHttp instanceof ProgressEvent) {\r\n                    if (intento === 3) {\r\n                        throw new Error('Error de Red');\r\n                    }\r\n                } else {\r\n\r\n                    if ( errorHttp.status === 404) {\r\n                           throw new Error(' al realizar la solicictud ');\r\n                        } else if ( errorHttp.status === 401) {\r\n                            this.almacenamiento.terminarPartida().then(() => {\r\n                                this.navCtrl.navigateRoot('/home');\r\n                            });\r\n                            throw new Error('No tiene permisos para realizar la petición ');\r\n                         } else {\r\n                             console.log(errorHttp, 'Error de servidor');\r\n                             throw new Error(' No se pudo realizar la petición, intentalo más tarde ');\r\n                        }\r\n                }\r\n            }),\r\n            take(3)\r\n        );\r\n}\r\n\r\n    registrar(data): Observable<any> {\r\n        return this.http.post(`${URL_SERVER}/usuarios`, data).pipe(\r\n            map((res: any) => {\r\n                if (res.exe) {\r\n                    res.response.exe = res.exe;\r\n                    res.response.token = res.token;\r\n                    return res.response;\r\n                } else {\r\n                    return res;\r\n                }\r\n            }),\r\n            retryWhen(error => this.hanflerError(error))\r\n        )\r\n    }\r\n\r\n\r\n    usuario(usuario): Observable<any> {\r\n        return this.http.post(`${URL_SERVER}/usuarios/unico`, {buscar: usuario}).pipe(\r\n            retryWhen(error => this.hanflerError(error))\r\n        )\r\n    }\r\n\r\n    iniciarPartida(usuario, dispositivoID): Observable<any> {\r\n        const options = {\r\n            headers: new HttpHeaders({\r\n                'x-dispositivoID': dispositivoID\r\n            })\r\n        };\r\n        return this.http.post(`${URL_SERVER}/login`, usuario, options ).pipe(\r\n            map((res: any) => {\r\n                if (res.exe) {\r\n                    res.response.exe = res.exe;\r\n                    res.response.token = res.token;\r\n                    return res.response;\r\n                } else {\r\n                    return res.exe;\r\n                }\r\n            }),\r\n            retryWhen(error => this.hanflerError(error))\r\n        );\r\n    }\r\n\r\n    fotoPerfilUsuarioMoto( imagen, token, tipo ) {\r\n        const options: FileUploadOptions  = {\r\n            fileKey: 'archivo',\r\n            httpMethod: 'PUT',\r\n            headers: {\r\n                'x-token': token\r\n            },\r\n            params: {\r\n                tipo\r\n            }\r\n        }\r\n\r\n        // 4912685137238652\r\n\r\n        const fileTransfer: FileTransferObject = this.transfer.create();\r\n\r\n        return from(fileTransfer.upload(imagen, `${URL_SERVER}/upload`, options))\r\n        .pipe(\r\n            catchError(error => {\r\n                console.log(`No se pudo subir la imagen `);\r\n                throw new Error(`No se pudo subir la imagen `);\r\n            })\r\n        );\r\n    }\r\n\r\n\r\n    fotoPortada( imagen, token, old ) {\r\n        const options: FileUploadOptions  = {\r\n            fileKey: 'archivo',\r\n            httpMethod: 'PUT',\r\n            headers: {\r\n                'x-token': token\r\n            },\r\n            params: {\r\n                old\r\n            }\r\n        }\r\n\r\n        // 4912685137238652\r\n\r\n        const fileTransfer: FileTransferObject = this.transfer.create();\r\n\r\n        return from(fileTransfer.upload(imagen, `${URL_SERVER}/upload/portada/`, options))\r\n        .pipe(\r\n            catchError(error => {\r\n                console.log(`No se pudo subir la imagen `);\r\n                throw new Error(`No se pudo subir la imagen `);\r\n            })\r\n        );\r\n    }\r\n\r\n    viewImagen(token) {\r\n        const options = {\r\n            headers: new HttpHeaders({\r\n                'x-token': token\r\n            })\r\n        };\r\n        return this.http.get(`${URL_SERVER}/ver`, options).pipe(\r\n            retryWhen(error => this.hanflerError(error))\r\n        );\r\n    }\r\n\r\n    buscarUsuario(termino: string, token: string) {\r\n        const headerOption = {\r\n            headers: new HttpHeaders({\r\n                'x-token': token\r\n            })\r\n        };\r\n\r\n        return this.http.get(`${URL_SERVER}/usuarios/${termino}`, headerOption ).pipe(\r\n            retryWhen(error => this.hanflerError(error))\r\n        );\r\n    }\r\n\r\n    buscarPerfilUsuario(usuario, token) {\r\n        const HeaderOption = {\r\n            headers: new HttpHeaders({\r\n                'x-token': token\r\n            })\r\n        };\r\n\r\n        return this.http.get(`${URL_SERVER}/usuarios/perfil/${usuario}`, HeaderOption).pipe(\r\n            retryWhen(error => this.hanflerError(error))\r\n        );\r\n    }\r\n\r\n\r\n    traerMisNotificaciones(token, desde) {\r\n        const HeaderOption = {\r\n            headers: new HttpHeaders({\r\n                'x-token': token,\r\n                'x-desde': desde.toString()\r\n            })\r\n        };\r\n\r\n        return this.http.get(`${URL_SERVER}/notificaciones/misnotificaciones/`, HeaderOption).pipe(\r\n            retryWhen(error => this.hanflerError(error))\r\n        );\r\n    }\r\n\r\n    notiCantidad(token) {\r\n        const HeaderOption = {\r\n            headers: new HttpHeaders({\r\n                'x-token': token\r\n            })\r\n        };\r\n\r\n        return this.http.get(`${URL_SERVER}/notificaciones/numero/`, HeaderOption).pipe(\r\n            retryWhen(error => this.hanflerError(error))\r\n        );\r\n    }\r\n\r\n\r\n    ActualizarNotificaciones(token, id) {\r\n        const HeaderOption = {\r\n            headers: new HttpHeaders({\r\n                'x-token': token\r\n            })\r\n        };\r\n\r\n        return this.http.put(`${URL_SERVER}/notificaciones/misnotificaciones/cambiarestado/`, {id}, HeaderOption).pipe(\r\n            retryWhen(error => this.hanflerError(error))\r\n        );\r\n    }\r\n\r\n\r\n    listarPaises() {\r\n        return this.http.get(`${URL_SERVER}/paises` ).pipe(\r\n            retryWhen(error => this.hanflerError(error))\r\n        );\r\n    }\r\n\r\n    listarCiudades(pais) {\r\n        const headerOption = {\r\n            headers: new HttpHeaders({\r\n                'x-pais': pais\r\n            })\r\n        };\r\n\r\n        return this.http.get(`${URL_SERVER}/ciudad`, headerOption ).pipe(\r\n            retryWhen(error => this.hanflerError(error))\r\n        );\r\n    }\r\n\r\n    CodigoComprobar(data) {\r\n     \r\n        return this.http.put(`${URL_SERVER}/codigos`, data ).pipe(\r\n            retryWhen(error => this.hanflerError(error))\r\n        );\r\n    }\r\n\r\n    EditarCodigo(data) {\r\n     \r\n        return this.http.put(`${URL_SERVER}/codigos/cambiar`, data ).pipe(\r\n            retryWhen(error => this.hanflerError(error))\r\n        );\r\n    }\r\n\r\n\r\n\r\n    negocios() {\r\n     \r\n        return this.http.get(`${URL_SERVER}/tiponegocio` ).pipe(\r\n            retryWhen(error => this.hanflerError(error))\r\n        );\r\n    }\r\n}\r\n"]}