{"version":3,"sources":["webpack:///src/app/pages/empleados/empleados-routing.module.ts","webpack:///src/app/pages/empleados/empleados.module.ts","webpack:///src/app/pages/empleados/empleados.page.html","webpack:///src/app/pages/empleados/empleados.page.ts"],"names":["routes","path","component","EmpleadosPageRoutingModule","forChild","imports","exports","EmpleadosPageModule","declarations","EmpleadosPage","IVTapi","almacenamiento","alertCtrl","toast","empleados","buscados","texto","traerEmpleados","event","then","target","complete","catch","obtenerToken","info","leerEmpleados","token","subscribe","data","console","log","exe","response","forEach","item","usuario","imagen","length","detail","value","BuscarUsuarios","create","header","message","nombrecompleto","buttons","role","text","handler","crearEmpleado","nombre","_id","err","errors","kind","toastError","alert","present","empleado","eliminarEmpleados","inputs","type","name","placeholder","re","editarEmpleado","cargo","alias","refrescando","buscarEmpleados","selector","templateUrl","styleUrls"],"mappings":"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","file":"empleados-empleados-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { EmpleadosPage } from './empleados.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: EmpleadosPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class EmpleadosPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { EmpleadosPageRoutingModule } from './empleados-routing.module';\n\nimport { EmpleadosPage } from './empleados.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    EmpleadosPageRoutingModule\n  ],\n  declarations: [EmpleadosPage]\n})\nexport class EmpleadosPageModule {}\n","<ion-header class=\"ion-no-border\">\n    <ion-toolbar color=\"oscuro\">\n        <ion-buttons slot=\"start\">\n            <ion-back-button icon=\"chevron-back-outline\" defaultHref=\"/central/menu\"></ion-back-button>\n        </ion-buttons>\n        <ion-title>Empleados</ion-title>\n    </ion-toolbar>\n</ion-header>\n\n<ion-content>\n\n    <ion-refresher slot=\"fixed\" (ionRefresh)=\"refrescando($event)\" pullFactor=\"0.5\" pullMin=\"50\" pullMax=\"150\">\n        <ion-refresher-content pullingIcon=\"arrow-dropdown\" refreshingSpinner=\"circles\">\n        </ion-refresher-content>\n    </ion-refresher>\n\n    <ion-searchbar mode=\"ios\" placeholder=\"Buscar Usuario\" (ionChange)=\"buscarEmpleados( $event )\"></ion-searchbar>\n\n    <ion-list *ngIf=\"buscados.length > 0\">\n        <ion-item *ngFor=\"let usuario of buscados\" (click)=\"agregar( usuario )\">\n            <ion-avatar slot=\"start\">\n                <img [src]=\"usuario.imagen\" width=\"100%\" height=\"100%\" alt=\"\">\n            </ion-avatar>\n            <ion-label>\n                <strong>{{ usuario.nombrecompleto }}</strong><br> @{{ usuario.nombreusuario }}\n            </ion-label>\n\n        </ion-item>\n    </ion-list>\n\n    <div class=\"divider light\"></div>\n\n    <div class=\"cen\" *ngIf=\"empleados.length === 0\">\n        <img src=\"/assets/Empleados.png\" width=\"100px\" alt=\"\">\n        <h3 class=\"tituloGrande\">No tiene empleados registrados, buscalos para agregarlos a la lista</h3>\n    </div>\n\n    <ion-list *ngIf=\"empleados.length > 0\">\n        <ion-item-divider lines=\"none\" color=\"muro\">\n            <div class=\"padreflex\">\n                <div class=\"titulo\">\n                    <h3>Registrados</h3>\n                </div>\n                <div class=\"numero\">\n                    <img src=\"/assets/Empleadoslista.png\" width=\"25px\" height=\"25px\" alt=\"\">\n                    <h3>{{ empleados.length }}</h3>\n                </div>\n            </div>\n        </ion-item-divider>\n        <ion-item-sliding *ngFor=\"let empleado of empleados\">\n            <ion-item>\n                <ion-avatar slot=\"start\">\n                    <img [src]=\"empleado.usuario.imagen\" width=\"100%\" height=\"100%\" alt=\"\">\n                </ion-avatar>\n                <ion-label>\n                    <span>{{ empleado.usuario.nombrecompleto }}</span><br> <strong class=\"verdei\">@{{ empleado.usuario.nombreusuario }}</strong>\n                    <div *ngIf=\"empleado.cargo\" class=\"rojoi\">Cargo: {{ empleado.cargo }}</div>\n                    <div *ngIf=\"empleado.alias\" class=\"rojoi\">Alías: {{ empleado.alias }}</div>\n                </ion-label>\n\n            </ion-item>\n\n            <ion-item-options side=\"end\">\n                <ion-item-option color=\"warning\" (click)=\"editar( empleado )\">\n                    <ion-icon name=\"pencil-outline\" slot=\"icon-only\"></ion-icon>\n                </ion-item-option>\n\n                <ion-item-option color=\"danger\" (click)=\"eliminar( empleado )\">\n                    <ion-icon name=\"trash-outline\" slot=\"icon-only\"></ion-icon>\n                </ion-item-option>\n            </ion-item-options>\n        </ion-item-sliding>\n    </ion-list>\n\n</ion-content>","import { Component, OnInit } from '@angular/core';\nimport { InventariosService } from '../../providers/Api/Inventarios.service';\nimport { InicioService } from '../../providers/Almacenamiento/inicio.service';\nimport { AlertController } from '@ionic/angular';\nimport { ToastServices } from '../../providers/Utilidades/ToastService.service';\n\n@Component({\n  selector: 'app-empleados',\n  templateUrl: './empleados.page.html',\n  styleUrls: ['./empleados.page.scss'],\n})\nexport class EmpleadosPage implements OnInit {\n\n  empleados: any = [];\n  buscados = [];\n\n  texto = '';\n\n  constructor(\n    private IVTapi: InventariosService,\n    private almacenamiento: InicioService,\n    private alertCtrl: AlertController,\n    private toast: ToastServices\n  ) { }\n\n  ngOnInit() {\n  }\n\n  ionViewWillEnter() {\n      this.traerEmpleados();\n  }\n\n  refrescando( event) {\n    this.traerEmpleados().then(() => {\n      event.target.complete();\n    }).catch(() => {\n      event.target.complete();\n    });\n  }\n\n  async traerEmpleados() {\n    const info = await this.almacenamiento.obtenerToken();\n\n    if ( info ) {\n        this.IVTapi.leerEmpleados(info.token).subscribe((data: any) => {\n            console.log(data);\n            if (data.exe) {\n\n                data.response.forEach((item) => {\n                  if (item.usuario.imagen.length > 0) {\n                    item.usuario.imagen = `https://motocaliapp.com/19927613410/${item.usuario.imagen[0].path}`;\n                  } else {\n                    item.usuario.imagen = '/assets/notfound.png';\n                  }\n                })\n                this.empleados = data.response;\n            }\n        })\n      }\n  }\n\n  async buscarEmpleados( event ) {\n      const info = await this.almacenamiento.obtenerToken();\n\n      if ( info && event.detail.value !== '') {\n        this.IVTapi.BuscarUsuarios(info.token, event.detail.value).subscribe((data: any) => {\n            console.log(data);\n            if (data.exe) {\n\n                data.response.forEach((item) => {\n                  if (item.imagen.length > 0) {\n                    item.imagen = `https://motocaliapp.com/19927613410/${item.imagen[0].path}`;\n                  } else {\n                    item.imagen = '/assets/notfound.png';\n                  }\n                })\n                this.buscados = data.response;\n            }\n        })\n      } else {\n        this.buscados = [];\n      }\n  }\n\n  async agregar( usuario: any ) {\n    const alert = await this.alertCtrl.create({\n        header: 'Marcar usuario como empleado',\n        message: `¿Estas seguro de marcar a ${usuario.nombrecompleto} como empleado?`,\n        buttons: [\n          {\n            role: 'cancel',\n            text: 'Cancelar'\n          },\n          {\n            text: 'Aceptar',\n            handler: async () => {\n              const info = await this.almacenamiento.obtenerToken();\n\n              if ( info ) {\n                this.IVTapi.crearEmpleado(info.token, {nombre: usuario.nombrecompleto, _id: usuario._id}).subscribe((data: any) => {\n                    console.log(data);\n                    if (data.exe) {\n                        this.traerEmpleados();\n                    } else {\n                      if (data.err.errors) {\n                        if (data.err.errors.usuario) {\n                          if (data.err.errors.usuario.kind === 'unique') {\n                              this.toast.toastError('El usuario ya ha sido agregado como empleado');\n                          }\n                        }\n                      }\n                    }\n                })\n              }\n            }\n          }\n        ]\n    })\n\n    return await alert.present();\n  }\n\n\n  async eliminar( empleado: any ) {\n    const alert = await this.alertCtrl.create({\n        header: 'Eliminar Empleado',\n        message: `¿Estas seguro de eliminar a ${empleado.usuario.nombrecompleto} como empleado?`,\n        buttons: [\n          {\n            role: 'cancel',\n            text: 'Cancelar'\n          },\n          {\n            text: 'Aceptar',\n            handler: async () => {\n              const info = await this.almacenamiento.obtenerToken();\n\n              if ( info ) {\n                this.IVTapi.eliminarEmpleados(info.token, empleado._id).subscribe((data: any) => {\n                    if (data.exe) {\n                        this.traerEmpleados();\n                    } else {\n                      this.toast.toastError('No se pudo eliminar el empleado');\n                    }\n                }, (err) => {\n                  this.toast.toastError('No se pudo eliminar el empleado, intentelo más tarde');\n                })\n              }\n            }\n          }\n        ]\n    })\n\n    return await alert.present();\n  }\n\n\n\n  async editar( empleado: any ) {\n    const alert = await this.alertCtrl.create({\n        header: 'Eliminar Empleado',\n        message: `¿Estas seguro de eliminar a ${empleado.usuario.nombrecompleto} como empleado?`,\n        inputs: [\n          {\n            type: 'text',\n            name: 'cargo',\n            placeholder: `Escriba el cargo ${empleado.usuario.nombrecompleto}`\n          },\n\n          {\n            type: 'text',\n            name: 'alias',\n            placeholder: `Escribe un alías`\n          },\n\n        ],\n        buttons: [\n          {\n            role: 'cancel',\n            text: 'Cancelar'\n          },\n          {\n            text: 'Aceptar',\n            handler: async (re) => {\n              const info = await this.almacenamiento.obtenerToken();\n\n              if ( info ) {\n                this.IVTapi.editarEmpleado(info.token, {_id: empleado._id, cargo: re.cargo, alias: re.alias}).subscribe((data: any) => {\n                    if (data.exe) {\n                        this.traerEmpleados();\n                    } else {\n                      this.toast.toastError('No se pudo editar el empleado');\n                    }\n                }, (err) => {\n                  this.toast.toastError('No se pudo editar el empleado, intentelo más tarde');\n                })\n              }\n            }\n          }\n        ]\n    })\n\n    return await alert.present();\n  }\n\n}\n"]}