{"version":3,"sources":["webpack:///src/app/pipes/Fechas/CambioUTC.pipe.ts","webpack:///src/app/pipes/Fechas/ConversionUTC.pipe.ts","webpack:///src/app/pipes/Fechas/fecha.pipe.ts","webpack:///src/app/pipes/Fechas/horario.pipe.ts","webpack:///src/app/pipes/Textos/Imagen.pipe.ts","webpack:///src/app/pipes/Textos/colores.pipe.ts","webpack:///src/app/pipes/Textos/recortar.pipe.ts","webpack:///src/app/pipes/archivos/descarga.pipe.ts","webpack:///src/app/pipes/filtros/filtro-chat.pipe.ts","webpack:///src/app/pipes/filtros/filtro-recordatorio.pipe.ts","webpack:///src/app/pipes/filtros/filtro-recorlist.pipe.ts","webpack:///src/app/pipes/filtros/mi-filtro.pipe.ts","webpack:///src/app/pipes/numeros/Contar.pipe.ts","webpack:///src/app/pipes/numeros/calculos.pipe.ts","webpack:///src/app/pipes/numeros/decimales.pipe.ts","webpack:///src/app/pipes/pipes.module.ts","webpack:///src/app/providers/Api/EstadoCitas.service.ts"],"names":["CambioUTCaLocalPipe","date","fecha","toDate","format","name","ConvertirUTCPipe","value","console","log","MiFechaPipe","HorarioPipe","ImagenSelectPipe","valor","ruta","toLowerCase","includes","ColoresPipe","tipo","dibujo","fondo","color","RecortarTextoPipe","length","substr","DescargaPipe","file","apiCitas","dom","validar","then","e","checkFile","dataDirectory","html","url","window","Ionic","WebView","convertFileSrc","bypassSecurityTrustUrl","descargarArchivosChat","subscribe","descarga","error","FiltroChat","listado","param","filter","item","val","FiltroRecordatorio","arr","usuarioEmisor","checked","find","person","id","_id","nombrecompleto","FiltroRecordatoriosLista","lista","tipoRetorno","texto","titulo","informacion","contenido","nada","MiFiltroPipe","array","ContarPipe","cantidad","forEach","parseFloat","ValoresPipe","valoru","DecimalesPipe","locale","Intl","NumberFormat","minimumFractionDigits","PipesModule","declarations","imports","exports","EstadoCitasService","http","MmyTransfer","pipe","errorHttp","ErrorEvent","Error","status","token","options","headers","get","hanflerError","data","post","cita","desde","put","idCita","imagen","mime","fileKey","fileName","mimeType","httpMethod","fileTransfer","create","upload","download","asunto","providedIn"],"mappings":"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","file":"default~EstadoCitas-citas-citas-module~EstadoCitas-hoja-hoja-module~Facturas-factura-nueva-factura-n~20677346-es5.js","sourcesContent":["import { Pipe, PipeTransform  } from '@angular/core';\r\nimport * as moment from 'moment';\r\n\r\n@Pipe({\r\n    name: 'cambioUTC'\r\n})\r\n\r\nexport class CambioUTCaLocalPipe implements PipeTransform {\r\n\r\n    transform(date: any) {\r\n        let fecha = moment.utc(date).toDate();\r\n        return moment(fecha).format('dddd, DD MMMM YYYY h:mm:a');\r\n    }\r\n}","import { Pipe, PipeTransform } from '@angular/core';\r\nimport * as moment from 'moment';\r\n\r\n@Pipe({\r\n    name: 'convertFecha'\r\n})\r\n\r\nexport class ConvertirUTCPipe implements PipeTransform {\r\n    transform(value: any) {\r\n        console.log(value, 'Fechs')\r\n        return moment(value).format('DD-MM-YYYY hh:mm:a')\r\n    }\r\n}","import { Pipe, PipeTransform } from '@angular/core';\r\nimport * as moment from 'moment';\r\n\r\n@Pipe({\r\n  name: 'fecha'\r\n})\r\nexport class MiFechaPipe implements PipeTransform {\r\n\r\n  transform(value: any): any {\r\n      moment.locale('es');\r\n      return moment(value).format('LLLL');\r\n  }\r\n\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport * as moment from 'moment';\r\n\r\n@Pipe({\r\n  name: 'horario'\r\n})\r\nexport class HorarioPipe implements PipeTransform {\r\n\r\n  transform(value: any): any {\r\n      moment.locale('es');\r\n      return moment(value).format('h:mm a');\r\n  }\r\n\r\n}","import { PipeTransform, Pipe }  from '@angular/core';\r\n\r\n@Pipe({\r\n    name: 'ImagenSelect'\r\n})\r\n\r\nexport class ImagenSelectPipe implements PipeTransform {\r\n    transform(valor: string) {\r\n        let ruta = '';\r\n        valor = valor.toLowerCase();\r\n\r\n\r\n        if (valor.includes('entrada')) {\r\n            ruta = '/assets/Entradas.png';\r\n        } else if (valor.includes('salida')) {\r\n            ruta = '/assets/Salidas.png';\r\n        }\r\n        return ruta;\r\n    }\r\n}","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n    name: 'colores'\r\n})\r\n\r\nexport class ColoresPipe implements PipeTransform {\r\n\r\n    transform(value: any) {\r\n        if (value.tipo === 'dibujar') {\r\n             return `background-color: ${value.dibujo.fondo}; color: ${value.dibujo.color};`;\r\n          }\r\n    }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n    name: 'recortar'\r\n})\r\n\r\nexport class RecortarTextoPipe implements PipeTransform {\r\n\r\n    transform(value: string) {\r\n        if (value.length >= 50) {\r\n            return value.substr(0, 50) + '...';\r\n        } else {\r\n            return value;\r\n        }\r\n    }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { File } from '@ionic-native/file/ngx';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { EstadoCitasService } from '../../providers/Api/EstadoCitas.service';\ndeclare var window: any;\n@Pipe({\n  name: 'descarga'\n})\nexport class DescargaPipe implements PipeTransform {\n\n  constructor(\n    private file: File,\n    private apiCitas: EstadoCitasService,\n    private dom: DomSanitizer\n  ) {\n\n  }\n\n  transform(file: string): any {\n   \n   return this.validar(file).then((e) => {\n     return e;\n   })\n   \n   \n  }\n\n  async validar(file ) {\n    try {\n      const html = await this.file.checkFile(this.file.dataDirectory + 'MimotoMedia/', file);\n\n      if (html) {\n          console.log(html, ' html');\n          const url = window.Ionic.WebView.convertFileSrc( this.file.dataDirectory + 'MimotoMedia/' + file )\n          console.log('url', url, this.dom.bypassSecurityTrustUrl(url))\n          return '<video width=\"100%\" src=\"'+ url +'\" controls></video>';\n      }\n\n      \n    } catch (error) {\n\n      // tslint:disable-next-line: deprecation\n      \n      this.apiCitas.descargarArchivosChat(file).subscribe((descarga) => {\n        console.log(descarga, ' Descargando');\n\n        const url = window.Ionic.WebView.convertFileSrc( this.file.dataDirectory + 'MimotoMedia/' + file )\n        console.log('url descargada', url, this.dom.bypassSecurityTrustUrl(url))\n        return '<video width=\"100%\" src=\"'+ url +'\" controls></video>';\n      }, (error) => {\n        return '<ion-chip color=\"danger\">Error al escargar  ' + error + '</ion-chip>';\n      });\n    \n  }\n\n}\n\n}","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'filtroChat'\r\n})\r\n\r\n\r\nexport class FiltroChat implements PipeTransform {\r\n    \r\n    transform(listado: any[], param: string) {\r\n        param = param.toLowerCase();\r\n        if (param === '') {\r\n            return listado;\r\n        } else {\r\n            console.log(param)\r\n            return listado.filter((item: string) => {\r\n                const val: string = item;\r\n                item = item.toLowerCase();\r\n                if (item.includes(param)) {\r\n                    item = val;\r\n                    return val;\r\n                }\r\n            });\r\n        }\r\n        \r\n\r\n    }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'filtroRepo'\r\n})\r\n\r\n\r\nexport class FiltroRecordatorio implements PipeTransform {\r\n    \r\n    transform(listado: any[], param: string, arr?: any[]) {\r\n        param = param.toLowerCase();\r\n        if (param === '') {\r\n            return [];\r\n        } else {\r\n            return listado.filter((item: any) => {\r\n                item.usuarioEmisor.checked = false;\r\n                if (arr.length > 0) {\r\n                    if (arr.find((person: any) => person.id === item.usuarioEmisor._id)) {\r\n                        item.usuarioEmisor.checked = true;\r\n                    }\r\n                } \r\n                const val: string = item.usuarioEmisor.nombrecompleto;\r\n                item.usuarioEmisor.nombrecompleto = item.usuarioEmisor.nombrecompleto.toLowerCase();\r\n                if (item.usuarioEmisor.nombrecompleto.includes(param)) {\r\n                    item.usuarioEmisor.nombrecompleto = val;\r\n                    return val;\r\n                }\r\n            });\r\n        }\r\n        \r\n\r\n    }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n    name: 'filtroRecorList'\r\n})\r\n\r\nexport class FiltroRecordatoriosLista implements PipeTransform{\r\n    \r\n    transform(lista: any [], tipoRetorno: string, texto: string) {\r\n        texto = texto.toLowerCase();\r\n        console.log(texto,lista)\r\n        let listado = lista;\r\n        if ( texto !== '') {\r\n            listado = lista.filter((item) => {\r\n                const titulo: string = (item.informacion.titulo).toLowerCase();\r\n                const contenido: string = (item.informacion.contenido).toLowerCase();\r\n                if (titulo.includes(texto) || contenido.includes(texto)) {\r\n                    item.nada = false;\r\n                    return item;\r\n                }\r\n            });\r\n        }\r\n\r\n        listado = listado.filter((item) => item.tipo === tipoRetorno);\r\n\r\n        if (listado.length === 0) {\r\n            return [{nada: true}];\r\n        }\r\n        return listado;\r\n    }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'miFiltro'\n})\nexport class MiFiltroPipe implements PipeTransform {\n\n  transform(value: any, texto: string): any {\n    texto = texto.toLowerCase();\n    const array = value.filter((item: any) => {\n      item.nombrecompleto = item.nombrecompleto.toLowerCase();\n      return item.nombrecompleto.includes(texto);\n    });\n\n    return array;\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'contar'\r\n})\r\nexport class ContarPipe implements PipeTransform {\r\n\r\n  transform(value: any[]): any {\r\n    let cantidad = 0;\r\n    value.forEach((item) => {\r\n        cantidad = cantidad + parseFloat(item.cantidad);\r\n    })\r\n\r\n    return cantidad;\r\n  }\r\n\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'calculo'\r\n})\r\nexport class ValoresPipe implements PipeTransform {\r\n\r\n  transform(value: any[]): any {\r\n      console.log(value, 'valor');\r\n    let cantidad = 0;\r\n    value.forEach((item) => {\r\n        cantidad = cantidad + parseFloat(item.valoru);\r\n    })\r\n\r\n    console.log(cantidad)\r\n\r\n    return cantidad;\r\n  }\r\n\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'decimales'\n})\nexport class DecimalesPipe implements PipeTransform {\n\n  transform(value: number, locale: string): any {\n    if (value === 0) {\n      return 0\n    } else {\n      return new Intl.NumberFormat(locale, {\n        minimumFractionDigits: 1\n      }).format(value);\n    }\n  }\n\n}\n","import { NgModule } from '@angular/core';\r\nimport { MiFiltroPipe } from './filtros/mi-filtro.pipe';\r\nimport { DescargaPipe } from './archivos/descarga.pipe';\r\nimport { DecimalesPipe } from './numeros/decimales.pipe';\r\nimport { FiltroChat } from './filtros/filtro-chat.pipe';\r\nimport { MiFechaPipe } from './Fechas/fecha.pipe';\r\nimport { FiltroRecordatorio } from './filtros/filtro-recordatorio.pipe';\r\nimport { RecortarTextoPipe } from './Textos/recortar.pipe';\r\nimport { FiltroRecordatoriosLista } from './filtros/filtro-recorlist.pipe';\r\nimport { HorarioPipe } from './Fechas/horario.pipe';\r\nimport { ConvertirUTCPipe } from './Fechas/ConversionUTC.pipe';\r\nimport { CambioUTCaLocalPipe } from './Fechas/CambioUTC.pipe';\r\nimport { ImagenSelectPipe } from './Textos/Imagen.pipe';\r\nimport { ContarPipe } from './numeros/Contar.pipe';\r\nimport { ValoresPipe } from './numeros/calculos.pipe';\r\nimport { ColoresPipe } from './Textos/colores.pipe';\r\n\r\n@NgModule({\r\n    declarations: [\r\n    MiFiltroPipe,\r\n    FiltroChat,\r\n    DescargaPipe,\r\n    DecimalesPipe,\r\n    MiFechaPipe,\r\n    FiltroRecordatorio,\r\n    RecortarTextoPipe,\r\n    FiltroRecordatoriosLista,\r\n    HorarioPipe,\r\n    ConvertirUTCPipe,\r\n    CambioUTCaLocalPipe,\r\n    ImagenSelectPipe,\r\n    ContarPipe,\r\n    ValoresPipe,\r\n    ColoresPipe\r\n    ],\r\n    imports: [\r\n\r\n    ],\r\n    exports: [\r\n        MiFiltroPipe,\r\n        DescargaPipe,\r\n        DecimalesPipe,\r\n        FiltroChat,\r\n        MiFechaPipe,\r\n        FiltroRecordatorio,\r\n        RecortarTextoPipe,\r\n        FiltroRecordatoriosLista,\r\n        HorarioPipe,\r\n        ConvertirUTCPipe,\r\n        CambioUTCaLocalPipe,\r\n        ImagenSelectPipe,\r\n        ContarPipe,\r\n        ValoresPipe,\r\n        ColoresPipe\r\n    ]\r\n})\r\n\r\nexport class PipesModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\r\nimport { Observable, timer, from } from 'rxjs';\r\nimport { delayWhen, map, take, retryWhen, catchError } from 'rxjs/operators';\r\nimport { URL_SERVER } from 'src/environments/environment';\r\nimport { FileTransfer, FileUploadOptions, FileTransferObject } from '@ionic-native/file-transfer/ngx';\r\nimport { File } from '@ionic-native/file/ngx';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class EstadoCitasService {\r\n    constructor(\r\n        private http: HttpClient,\r\n        private MmyTransfer: FileTransfer,\r\n        private file: File\r\n    ) {\r\n\r\n    }\r\n\r\n\r\n    private hanflerError(error: Observable<any>) {\r\n        return error.pipe(\r\n            delayWhen(() => timer(3000)),\r\n            map((errorHttp: HttpErrorResponse) => {\r\n\r\n                    console.log('Entramos a intentos');\r\n                    if (errorHttp instanceof ErrorEvent) {\r\n                        throw new Error('Error de Red');\r\n                    } else {\r\n\r\n                        if ( errorHttp.status === 401) {\r\n                            throw new Error('No tiene permisos para realizar esta petición, vuelva a iniciar sesión ');\r\n                        } else {\r\n                            throw new Error(' No se pudo realizar la conexión, comprueba tu red ');\r\n                        }\r\n                       \r\n                    }\r\n            })\r\n        );\r\n}\r\n\r\n    listadoTalleres(token) {\r\n        const options = {\r\n            headers: new HttpHeaders({\r\n                'x-token': token\r\n            })\r\n        }\r\n        return this.http.get(`${URL_SERVER}/citas/talleres`, options).pipe(\r\n            retryWhen(error => this.hanflerError(error))\r\n        )\r\n    }\r\n\r\n\r\n\r\n    crearCita(token, data) {\r\n        const options = {\r\n            headers: new HttpHeaders({\r\n                'x-token': token\r\n            })\r\n        }\r\n        return this.http.post(`${URL_SERVER}/citas/crear`, data, options).pipe(\r\n            retryWhen(error => this.hanflerError(error))\r\n        )\r\n    }\r\n\r\n\r\n\r\n    listarCitas(token) {\r\n        const options = {\r\n            headers: new HttpHeaders({\r\n                'x-token': token\r\n            })\r\n        }\r\n        return this.http.get(`${URL_SERVER}/citas/miscitas`, options).pipe(\r\n            retryWhen(error => this.hanflerError(error))\r\n        )\r\n    }\r\n\r\n\r\n    listarCitasTaller(token) {\r\n        const options = {\r\n            headers: new HttpHeaders({\r\n                'x-token': token\r\n            })\r\n        }\r\n        return this.http.get(`${URL_SERVER}/citas/miscitas/taller`, options).pipe(\r\n            retryWhen(error => this.hanflerError(error))\r\n        )\r\n    }\r\n\r\n\r\n    obtenerCita(token, cita) {\r\n        const options = {\r\n            headers: new HttpHeaders({\r\n                'x-token': token,\r\n                'x-cita':  cita\r\n            })\r\n        }\r\n        return this.http.get(`${URL_SERVER}/citas/micita`, options).pipe(\r\n            retryWhen(error => this.hanflerError(error))\r\n        )\r\n    }\r\n\r\n\r\n\r\n    obtenerConversaciones(token, cita, desde) {\r\n        const options = {\r\n            headers: new HttpHeaders({\r\n                'x-token': token,\r\n                'x-idCita':  cita,\r\n                'x-desde':  desde\r\n            })\r\n        };\r\n        console.log(desde);\r\n        return this.http.get(`${URL_SERVER}/citas/chat/uno`, options).pipe(\r\n            retryWhen(error => this.hanflerError(error))\r\n        );\r\n    }\r\n\r\n\r\n    obtenerConversacionesPendientes(token, cita, fecha) {\r\n        const options = {\r\n            headers: new HttpHeaders({\r\n                'x-token': token,\r\n                'x-idCita':  cita,\r\n                'x-fecha':  fecha\r\n            })\r\n        };\r\n        console.log(fecha);\r\n        return this.http.get(`${URL_SERVER}/citas/chat/pendientes`, options).pipe(\r\n            retryWhen(error => this.hanflerError(error))\r\n        );\r\n    }\r\n\r\n    obtenerListaTrabajos(token) {\r\n        const options = {\r\n            headers: new HttpHeaders({\r\n                'x-token': token,\r\n            })\r\n        };\r\n        return this.http.get(`${URL_SERVER}/citas/trabajos/taller`, options).pipe(\r\n            retryWhen(error => this.hanflerError(error))\r\n        );\r\n    }\r\n\r\n    ingresarListaTrabajos(token, data: any) {\r\n        const options = {\r\n            headers: new HttpHeaders({\r\n                'x-token': token,\r\n            })\r\n        };\r\n        return this.http.put(`${URL_SERVER}/citas/trabajos`, data, options).pipe(\r\n            retryWhen(error => this.hanflerError(error))\r\n        );\r\n    }\r\n\r\n\r\n    editarCita(token, cita, data) {\r\n        const options = {\r\n            headers: new HttpHeaders({\r\n                'x-token': token,\r\n                'x-cita':  cita\r\n            })\r\n        }\r\n        return this.http.put(`${URL_SERVER}/citas/micita`, data, options).pipe(\r\n            retryWhen(error => this.hanflerError(error))\r\n        )\r\n    }\r\n\r\n\r\n    ingresarChat(token, data) {\r\n        const options = {\r\n            headers: new HttpHeaders({\r\n                'x-token': token,\r\n            })\r\n        }\r\n        return this.http.post(`${URL_SERVER}/citas/chat`, data, options).pipe(\r\n            retryWhen(error => this.hanflerError(error))\r\n        )\r\n    }\r\n\r\n\r\n    subirArchivosChat(token, idCita, imagen, name?, mime?) {\r\n        console.log('archivo', imagen)\r\n        const options: FileUploadOptions = {\r\n            fileKey: 'archivo',\r\n            fileName: name,\r\n            mimeType: mime,\r\n            httpMethod: 'POST',\r\n            headers: {\r\n                'x-token': token,\r\n                'x-idCita': idCita\r\n            }\r\n        }\r\n\r\n        const fileTransfer: FileTransferObject = this.MmyTransfer.create();\r\n\r\n        return from(fileTransfer.upload(imagen, `${URL_SERVER}/citas/chat/upload`, options)).pipe(\r\n            catchError(error => {\r\n                console.log(`No se pudo subir la imagen `, error);\r\n                throw new Error(`No se pudo subir la imagen `);\r\n            })\r\n        )\r\n        \r\n    }\r\n\r\n\r\n    descargarArchivosChat(file) {\r\n       \r\n\r\n        const fileTransfer: FileTransferObject = this.MmyTransfer.create();\r\n\r\n        return from(fileTransfer.download(`${URL_SERVER}/Citas/${file}`, this.file.dataDirectory + 'MimotoMedia/' + file)).pipe(\r\n            catchError(error => {\r\n                console.log(`No se pudo subir la imagen `, error);\r\n                throw new Error(`No se pudo subir la imagen `);\r\n            })\r\n        )\r\n        \r\n    }\r\n\r\n\r\n    subirArchivosHoja(token, id, imagen, asunto, tipo, name?, mime?) {\r\n        console.log('archivo', imagen)\r\n        const options: FileUploadOptions = {\r\n            fileKey: 'archivo',\r\n            fileName: name,\r\n            mimeType: mime,\r\n            httpMethod: 'POST',\r\n            headers: {\r\n                'x-token': token,\r\n                'x-idhoja': id,\r\n                'x-asunto': asunto,\r\n                'x-tipo': tipo,\r\n            }\r\n        }\r\n\r\n        const fileTransfer: FileTransferObject = this.MmyTransfer.create();\r\n\r\n        return from(fileTransfer.upload(imagen, `${URL_SERVER}/hoja/upload`, options)).pipe(\r\n            catchError(error => {\r\n                console.log(`No se pudo subir la imagen `, error);\r\n                throw new Error(`No se pudo subir la imagen `);\r\n            })\r\n        )\r\n        \r\n    }\r\n\r\n\r\n    leefotos(token, data) {\r\n        const options = {\r\n            headers: new HttpHeaders({\r\n                'x-token': token,\r\n            })\r\n        }\r\n        return this.http.put(`${URL_SERVER}/hoja/fotos`, data, options).pipe(\r\n            retryWhen(error => this.hanflerError(error))\r\n        )\r\n    }\r\n\r\n\r\n    leeHoja(token, data) {\r\n        const options = {\r\n            headers: new HttpHeaders({\r\n                'x-token': token,\r\n            })\r\n        }\r\n        return this.http.put(`${URL_SERVER}/hoja`, data, options).pipe(\r\n            retryWhen(error => this.hanflerError(error))\r\n        )\r\n    }\r\n\r\n    leeHoja2(token, data) {\r\n        const options = {\r\n            headers: new HttpHeaders({\r\n                'x-token': token,\r\n            })\r\n        }\r\n        return this.http.put(`${URL_SERVER}/hoja/leer`, data, options).pipe(\r\n            retryWhen(error => this.hanflerError(error))\r\n        )\r\n    }\r\n\r\n    crearHoja(token, data) {\r\n        const options = {\r\n            headers: new HttpHeaders({\r\n                'x-token': token,\r\n            })\r\n        }\r\n        return this.http.post(`${URL_SERVER}/hoja`, data, options).pipe(\r\n            retryWhen(error => this.hanflerError(error))\r\n        )\r\n    }\r\n\r\n\r\n    editarHoja(token, data) {\r\n        const options = {\r\n            headers: new HttpHeaders({\r\n                'x-token': token,\r\n            })\r\n        }\r\n        return this.http.put(`${URL_SERVER}/hoja/datos`, data, options).pipe(\r\n            retryWhen(error => this.hanflerError(error))\r\n        )\r\n    }\r\n\r\n    buscarHojas(token, data) {\r\n        const options = {\r\n            headers: new HttpHeaders({\r\n                'x-token': token,\r\n            })\r\n        }\r\n        return this.http.put(`${URL_SERVER}/hoja/mios`, data, options).pipe(\r\n            retryWhen(error => this.hanflerError(error))\r\n        )\r\n    }\r\n\r\n    buscarHojasFiltro(token, data) {\r\n        const options = {\r\n            headers: new HttpHeaders({\r\n                'x-token': token,\r\n            })\r\n        }\r\n        return this.http.put(`${URL_SERVER}/hoja/buscar/`, data, options).pipe(\r\n            retryWhen(error => this.hanflerError(error))\r\n        )\r\n    }\r\n}\r\n"]}