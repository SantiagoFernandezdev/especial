{"version":3,"sources":["webpack:///src/app/pages/home/home.module.ts","webpack:///src/app/pages/home/home.page.html","webpack:///src/app/pages/home/home.page.ts","webpack:///src/app/providers/Api/UsuariosLogin.service.ts"],"names":["HomePageModule","forChild","path","component","imports","declarations","HomePage","apiService","inicioService","toastService","router","navCtrl","OSService","menuCtrl","conexion","entradas","almacenamiento","registroService","apiMapas","sesion","usuarioID","vista","miCodigo","usuarioValido","msgUsuario","okUsuario","paises","ciudades","ciudad","load","pais","miciudad","claveValida","msgClave","clave","confirClave","correo","tel","nusuario","ncompleto","okClave","negocios","escogidos","forma","required","$usuarioID","subscribe","numero","dispositivoID","listarPaises","listarNegocios","value","usuario","iniciarPartida","resp","exe","cambiarEstado","guardarUsuario","then","cargaLista","alertApplication","navigate","crearEntrada","error","message","CodigoComprobar","codigo","data","response","length","toastError","toastNotificacion","err","event","detail","console","log","push","nombre","listarCiudades","_id","tipo","checked","find","item","filter","registrar","nombreCompleto","nombreUsuario","role","tipoNegocio","datos","toastExitoso","cambioEstado","navigateRoot","EditarCodigo","crearSede","token","ubicacion","lat","lng","selector","templateUrl","styleUrls","UsuariosLoginService","http","transfer","intento","pipe","errorHttp","ErrorEvent","Error","ProgressEvent","status","terminarPartida","post","res","hanflerError","buscar","options","headers","imagen","fileKey","httpMethod","params","fileTransfer","create","upload","old","get","termino","headerOption","HeaderOption","desde","toString","id","put","providedIn"],"mappings":"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","file":"pages-home-home-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IonicModule } from '@ionic/angular';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\n\nimport { HomePage } from './home.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    RouterModule.forChild([\n      {\n        path: '',\n        component: HomePage\n      }\n    ])\n  ],\n  declarations: [HomePage]\n})\nexport class HomePageModule {}\n","<ion-header class=\"ion-no-border\" [translucent]=\"true\">\n    <ion-toolbar color=\"oscuro\" class=\"ion-justify-content-center\">\n        <ion-title class=\"ion-text-center\">\n            Aplicación para Vehículos\n        </ion-title>\n    </ion-toolbar>\n</ion-header>\n\n<ion-content>\n    <div class=\"contenedor\" class=\"ion-padding\">\n        <h3 class=\"ion-text-center\"></h3><br>\n\n        <div class=\"c\" *ngIf=\"vista === 3\">\n            <ion-list>\n                <ion-item lines=\"none\" mode=\"ios\">\n                    <ion-input [(ngModel)]=\"miCodigo\" class=\"privado\" type=\"text\" placeholder=\"Código de verificación\"></ion-input>\n                </ion-item> <br>\n                <div class=\"texto\">Si no tiene un código, por favor contactenos por medio de este correo: velascosantiago28@gmail.com\n                </div>\n                <br> <br>\n                <div class=\"flexbet\">\n                    <ion-button mode=\"ios\" expand=\"block\" color=\"success\" fill=\"outline\" shape=\"round\" (click)=\"verificar()\">Verificar</ion-button>\n\n                    <ion-button mode=\"ios\" expand=\"block\" color=\"light\" shape=\"round\" (click)=\"ir()\">Volver</ion-button>\n                </div>\n            </ion-list>\n        </div>\n\n\n        <div class=\"c\" *ngIf=\"vista === 4\">\n\n            <ion-list>\n\n                <ion-item class=\"noborder\" lines=\"none\" mode=\"ios\">\n                    <ion-label>Nombre Completo</ion-label>\n                </ion-item>\n                <ion-item lines=\"none\" mode=\"ios\">\n                    <ion-input class=\"privado\" type=\"text\" placeholder=\"Ingrese nombre completo del negocio\" [(ngModel)]=\"ncompleto\"></ion-input>\n\n                </ion-item> <br>\n\n                <div class=\"mensaje\" *ngIf=\"usuarioValido\" [class.brojo]=\"!okUsuario\" [class.bverde]=\"okUsuario\">{{ msgUsuario }}</div>\n\n                <ion-item class=\"noborder\" lines=\"none\" mode=\"ios\">\n                    <ion-label>Nombre usuario</ion-label>\n                </ion-item>\n\n                <ion-item lines=\"none\" mode=\"ios\">\n                    <ion-input class=\"privado\" type=\"text\" placeholder=\"Ingrese su nombre de usuario\" (ionChange)=\"comprobarUsuario($event)\"></ion-input>\n                </ion-item> <br>\n                <ion-item lines=\"none\" class=\" noborder ion-margin-top\" mode=\"md\">\n                    <ion-label class=\"ion-text-wrap\">Escriba su correo electrónico (opcional)</ion-label>\n                </ion-item>\n\n                <ion-item lines=\"none\" class=\"campo ion-margin-top\" mode=\"ios\">\n                    <ion-input placeholder=\"Correo Electrónico\" [(ngModel)]=\"correo\" type=\"email\"></ion-input>\n                </ion-item>\n\n                <ion-item lines=\"none\" class=\"noborder ion-margin-top\" mode=\"md\">\n                    <ion-label class=\"ion-text-wrap\">Escriba su teléfono celular (opcional)</ion-label>\n                </ion-item>\n                <ion-item lines=\"none\" class=\"campo ion-margin-top\" mode=\"ios\">\n                    <ion-input placeholder=\"Número de Celular\" [(ngModel)]=\"tel\" type=\"tel\"></ion-input>\n                </ion-item>\n\n                <ion-item lines=\"none\" class=\"noborder ion-margin-top sinfondo\" mode=\"md\">\n                    <ion-chip color=\"danger\">Requerido</ion-chip>\n                </ion-item>\n\n                <ion-item lines=\"none\" class=\"noborder\" mode=\"md\">\n                    <ion-label class=\"ion-text-wrap\">Selecciona el País</ion-label>\n                    <ion-select okText=\"Aceptar\" cancelText=\"Cancelar\" (ionChange)=\"listarCiudades($event)\">\n                        <ion-select-option *ngFor=\"let pais of paises\" [value]=\"pais\">{{pais.nombre}}</ion-select-option>\n                    </ion-select>\n                </ion-item>\n\n\n\n                <ion-item *ngIf=\"ciudad\" lines=\"none\" class=\"noborder sinfondo\" mode=\"md\">\n                    <ion-chip color=\"danger\">Requerido</ion-chip>\n                </ion-item>\n                <ion-item *ngIf=\"ciudad\" lines=\"none\" class=\" noborder\" mode=\"md\">\n                    <ion-label class=\"ion-text-wrap\">Selecciona la ciudad</ion-label>\n                    <ion-select okText=\"Aceptar\" cancelText=\"Cancelar\" (ionChange)=\"seleccionarCiudad($event)\">\n                        <ion-select-option *ngFor=\"let ciudad of ciudades\" value=\"{{ciudad.nombre}}\">{{ciudad.nombre}}</ion-select-option>\n                    </ion-select>\n                </ion-item> <br>\n\n                <ion-item lines=\"none\" class=\"noborder sinfondo\" mode=\"md\">\n                    <ion-chip color=\"danger\">Requerido</ion-chip>\n                </ion-item>\n\n                <div class=\"mensaje\" *ngIf=\"claveValida\" [class.brojo]=\"!okClave\" [class.bverde]=\"okClave\">{{ msgClave }}</div>\n\n\n                <ion-item lines=\"none\" class=\"noborder ion-margin-top\" mode=\"md\">\n                    <ion-label class=\"ion-text-wrap\">Escriba su contraseña</ion-label>\n                </ion-item>\n                <ion-item lines=\"none\" class=\"campo ion-margin-top\" mode=\"ios\">\n                    <ion-input type=\"password\" placeholder=\"Escriba su contraseña\" (ionChange)=\"comprobarClave( $event, 1 )\"></ion-input>\n                </ion-item>\n\n                <ion-item lines=\"none\" class=\"noborder ion-margin-top\" mode=\"ios\">\n                    <ion-label class=\"ion-text-wrap\">Confirmar la contraseña</ion-label>\n                </ion-item>\n                <ion-item lines=\"none\" class=\"campo ion-margin-top\" mode=\"ios\">\n                    <ion-input type=\"password\" placeholder=\"Confirmar la contraseña\" (ionChange)=\"comprobarClave( $event, 2 )\"></ion-input>\n                </ion-item> <br>\n\n                <ion-item lines=\"none\" class=\"noborder ion-margin-top\" mode=\"md\">\n                    <ion-label class=\"ion-text-wrap\">Tipo de negocio</ion-label>\n                </ion-item>\n                <ion-item *ngFor=\"let tipo of negocios\" class=\"noborder\" mode=\"ios\">\n                    <ion-checkbox slot=\"start\" color=\"success\" value=\"{{ tipo.nombre }}\" (ionChange)=\"agregarNegocios( $event )\"></ion-checkbox>\n                    <ion-label>{{ tipo.nombre }}</ion-label>\n                </ion-item>\n                <br><br>\n\n                <div class=\"flexbet\">\n                    <ion-button expand=\"block\" color=\"danger\" mode=\"ios\" fill=\"outline\" shape=\"round\" (click)=\"ir()\">Cancelar</ion-button>\n\n                    <ion-button expand=\"block\" color=\"light\" mode=\"ios\" shape=\"round\" (click)=\"guardar()\">Crear Cuenta</ion-button>\n\n\n                </div>\n\n            </ion-list>\n        </div>\n\n\n        <div class=\"c\" *ngIf=\"vista === 2\">\n            <div class=\"flexbet\">\n                <ion-card mode=\"ios\" (click)=\"codigo()\">\n                    <ion-card-header><img src=\"/assets/Negocio.png\" width=\"100px\"></ion-card-header>\n                    <ion-card-title>Negocio</ion-card-title>\n\n                </ion-card>\n\n                <ion-card mode=\"ios\" [routerLink]=\"['/registro']\">\n                    <ion-card-header><img src=\"/assets/Estadisticas.png\" width=\"100px\"></ion-card-header>\n                    <ion-card-title>Persona</ion-card-title>\n                </ion-card>\n\n\n            </div> <br> <br>\n            <ion-button expand=\"block\" color=\"warning\" fill=\"outline\" shape=\"round\" (click)=\"retroceder()\">Navegar al inicio</ion-button>\n        </div>\n\n        <form [formGroup]=\"forma\" (ngSubmit)=\"iniciar()\" *ngIf=\"vista === 1\">\n            <ion-grid>\n                <ion-row>\n                    <ion-col size=\"12\">\n                        <ion-item mode=\"ios\" lines=\"none\">\n                            <ion-icon name=\"person\" slot=\"start\" color=\"medium\"></ion-icon>\n                            <ion-input formControlName=\"usuario\" type=\"text\" placeholder=\"Nombre de Usuario\"></ion-input>\n                        </ion-item>\n                    </ion-col>\n                    <ion-col size=\"12\">\n                        <ion-item mode=\"ios\" lines=\"none\">\n                            <ion-icon name=\"key\" slot=\"start\" color=\"medium\"></ion-icon>\n                            <ion-input formControlName=\"clave\" type=\"password\" placeholder=\"Contraseña\"></ion-input>\n                        </ion-item>\n\n                    </ion-col>\n\n                    <br><br>\n\n                    <ion-col size=\"12\">\n                        <ion-button mode=\"ios\" expand=\"block\" shape=\"round\" color=\"light\" type=\"submit\" class=\"margen\">Iniciar Sesión</ion-button>\n                    </ion-col>\n\n\n                </ion-row>\n\n                <ion-row>\n                    <ion-col size=\"12\" class=\"ion-text-center\">\n                        <p class=\"ion-no-margin medium \"><span class=\"opacity\">Recuperar mi </span><b style=\"color: var(--ion-color-success);\" (click)=\"ir()\">Cuenta</b>\n                        </p>\n                    </ion-col>\n                </ion-row>\n\n                <ion-row>\n                    <ion-col size=\"12\" class=\"centrar\">\n                        <ion-button color=\"warning\" fill=\"outline\" shape=\"round\" (click)=\"ir()\">Crear una Cuenta</ion-button>\n                    </ion-col>\n                </ion-row>\n\n\n                <ion-row>\n                    <ion-col size=\"12\">\n                        <div class=\"load\" *ngIf=\"!sesion\">\n                            <ion-spinner color=\"oscuro\" name=\"crescent\"></ion-spinner>\n                            <p class=\"ion-text-center\">Iniciando sesión...</p>\n                        </div>\n                    </ion-col>\n                </ion-row>\n            </ion-grid>\n        </form>\n    </div>\n</ion-content>","import { Component, OnInit } from '@angular/core';\nimport { NavController, MenuController } from '@ionic/angular';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { UsuariosLoginService } from '../../providers/Api/UsuariosLogin.service';\nimport { InicioService } from '../../providers/Almacenamiento/inicio.service';\nimport { Registro } from '../../interfaces/registro.interface';\nimport { ToastServices } from '../../providers/Utilidades/ToastService.service';\nimport { PushService } from '../../providers/PushService/PushService.service';\nimport { Router } from '@angular/router';\nimport { ConexionService } from '../../providers/Conexiones/Conexion.service';\nimport { EntradasServices } from '../../providers/cargas/Entradas.service';\nimport { RegistroService } from '../../providers/Registro/registro.service';\nimport { MapasService } from '../../providers/Api/Mapar.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: 'home.page.html',\n  styleUrls: ['home.page.scss'],\n})\nexport class HomePage implements OnInit {\n\n  public forma: FormGroup;\n  public sesion = true;\n  usuarioID = '';\n  dispositivoID: any;\n\n  vista = 1;\n\n  miCodigo = '';\n\n  // usuarios\n  usuarioValido = false;\n  msgUsuario = '';\n  okUsuario = false;\n\n  paises= [];\n  ciudades = [];\n  ciudad = false;\n  load = false;\n\n  pais = '';\n  miciudad = '';\n\n  claveValida = false;\n  msgClave = '';\n  clave = '';\n  confirClave = '';\n  correo = '';\n  tel = 0;\n  nusuario = '';\n  ncompleto = '';\n  okClave = false;\n\n  negocios = [];\n\n  escogidos = [];\n\n  constructor(\n    private apiService: UsuariosLoginService,\n    private inicioService: InicioService,\n    private toastService: ToastServices,\n    private router: Router,\n    private navCtrl: NavController,\n    private OSService: PushService,\n    private menuCtrl: MenuController,\n    private conexion: ConexionService,\n    private entradas: EntradasServices,\n    private almacenamiento: InicioService,\n    private registroService: RegistroService,\n    private apiMapas: MapasService\n  ) {\n\n    this.forma = new FormGroup({\n      'usuario': new FormControl('', Validators.required),\n      'clave'  : new FormControl('', Validators.required)\n    });\n\n    this.OSService.$usuarioID.subscribe((numero: any) => {\n      this.dispositivoID = numero;\n    })\n\n  }\n\n  ngOnInit() {\n    this.OSService.$usuarioID.subscribe((usuarioID: any) => {\n      this.usuarioID = usuarioID;\n    })\n  }\n\n  ionViewWillEnter() {\n   this.listarPaises();\n   this.listarNegocios();\n  }\n\n  iniciar() {\n   if (this.forma.value.usuario !== '' && this.forma.value.clave !== '') {\n    this.sesion = false;\n    this.apiService.iniciarPartida(this.forma.value, this.dispositivoID).subscribe(\n    (resp: any) => {\n\n      if (resp.exe) {\n        this.sesion = true;\n        this.inicioService.cambiarEstado(false);\n        resp.usuarioID = this.usuarioID;\n  \n        this.inicioService.guardarUsuario(resp).then(() => {\n          this.conexion.cargaLista();\n          this.toastService.alertApplication('Bienvenido!!!', true).then(() => {\n            this.router.navigate(['/central/menu']);\n            this.entradas.crearEntrada();\n          });\n      }, (error) => {\n          this.toastService.alertApplication(error.message, false);\n      });\n\n      } else {\n        this.sesion = true;\n        this.toastService.alertApplication('Credenciales Incorrectas', false);\n      }\n\n    },\n    (error) => {\n      this.sesion = true;\n      this.inicioService.cambiarEstado(true);\n      this.toastService.alertApplication(error.message, false);\n    })\n   }\n  }\n\n  ir() {\n    this.vista = 2;\n  }\n\n  retroceder() {\n    this.vista = 1;\n  }\n  \n\n  codigo() {\n    this.vista = 3;\n  }\n\n  verificar() {\n\n    if (this.miCodigo !== '') {\n      this.apiService.CodigoComprobar({codigo: this.miCodigo}).subscribe((data: any) => {\n        if (data) {\n          if ( data.response.length === 0) {\n            this.toastService.toastError('Ingrese un código válido');\n          } else {\n            this.vista = 4;\n            this.toastService.toastNotificacion('Complete toda la información');\n          }\n         \n        } else {\n          this.toastService.toastError('No se pudo comprobar el código, inténtelo más tarde');\n        }\n      }, (err) => {\n          this.toastService.toastError('No se pudo comprobar el código, inténtelo más tarde')\n      })\n    } else {\n      this.toastService.toastError('Ingrese un código válido');\n\n    }\n\n  }\n\n\n  comprobarUsuario(event) {\n    if (event.detail.value.length > 5) {\n      this.usuarioValido = true;\n      this.apiService.usuario(event.detail.value).subscribe(async (data) => {\n        console.log(data);\n        if (data.exe) {\n          this.okUsuario = false;\n          this.msgUsuario = 'El usuario ya se encuentra en uso';\n        } else {\n          this.okUsuario = true;\n          this.msgUsuario = 'El nombre de usuario esta disponible';\n          this.nusuario = event.detail.value;\n        }\n      }, async (error) => {\n         this.toastService.toastError('No se pudo comprobar el usuario, inténtelo más tarde');\n      })\n    } else {\n      this.usuarioValido = false;\n    }\n  }\n\n\n\n  listarNegocios() {\n    this.apiService.negocios().subscribe((data: any) => {\n      if (data.exe) {\n        this.negocios = data.response;\n      } else {\n        this.negocios.push('Taller Mécanico');\n      }\n    }, (err) => {\n      this.negocios.push('Taller Mécanico');\n    })\n  }\n\n  \n  listarPaises() {\n    this.apiService.listarPaises().subscribe((data: any) => {\n      if (data.exe) {\n        this.paises = data.response;\n      } else {\n        this.paises.push('Colombia');\n      }\n    }, (err) => {\n      this.paises.push('Colombia');\n    })\n  }\n\n\n  listarCiudades( event ) {\n    console.log(event.detail)\n    this.pais = event.detail.value.nombre;\n    this.miciudad = '';\n    this.apiService.listarCiudades(event.detail.value._id).subscribe((data: any) => {\n     if (data.exe) {\n       this.ciudades = data.response;\n       this.ciudad= true;\n     } else {\n       this.toastService.toastError('No se pudo traer las ciudades, intente registrarse más tarde');\n     }\n   }, (err) => {\n     this.toastService.toastError('No se pudo traer las ciudades, intente registrarse más tarde');\n   })\n }\n\n seleccionarCiudad( event ) {\n   this.miciudad = event.detail.value;\n }\n\n comprobarClave( event, tipo ) {\n  this.claveValida = true;\n  if (event.detail.value.length >= 8) {\n    if (tipo === 1) {\n      this.clave = event.detail.value;\n    } else {\n      this.confirClave = event.detail.value;\n    }\n    if (this.clave === this.confirClave) {\n      this.msgClave = 'Las claves coínciden correctamente';\n      this.okClave = true;\n    } else {\n      this.msgClave = 'Las contraseñas no coínciden';\n      this.okClave = false;\n    }\n  } else {\n    this.okClave = false;\n    this.msgClave = 'Debe tener como mínmo 8 caracteres';\n  }\n }\n\n agregarNegocios( event ) {\n   if (event.detail.checked) {\n    if (!this.escogidos.find((item) => item === event.detail.value)) {\n      this.escogidos.push(event.detail.value);\n    }\n   } else {\n     this.escogidos = this.escogidos.filter((item) => item !== event.detail.value);\n   }\n\n   console.log(this.escogidos);\n    \n }\n\n guardar() {\n   if (this.okUsuario && this.okClave && this.pais !== '' && this.miciudad !== '' && this.ncompleto !== '') {\n    this.apiService.registrar({\n      nombreCompleto: this.ncompleto,\n      nombreUsuario: this.nusuario,\n      clave: this.clave,\n      correo: this.correo,\n      tel: this.tel,\n      role: 'TALLER_ROLE',\n      pais: this.pais,\n      ciudad: this.miciudad,\n      tipoNegocio: this.escogidos,\n      usuarioID: this.usuarioID\n  }).subscribe(\n      (datos) => {\n        console.log(datos, 'data', {\n          nombreCompleto: this.ncompleto,\n          nombreUsuario: this.nusuario,\n          clave: this.clave,\n          correo: this.correo,\n          tel: this.tel,\n          role: 'TALLER_ROLE',\n          pais: this.pais,\n          ciudad: this.miciudad,\n          tipoNegocio: this.escogidos,\n          usuarioID: this.usuarioID\n      });\n        \n        this.almacenamiento.guardarUsuario(datos).then(() => {\n          this.toastService.toastExitoso('Usuario registrado corectamente');\n\n          this.registroService.cambioEstado(true);\n          this.almacenamiento.cambiarEstado(false);\n          this.navCtrl.navigateRoot(['/central']);\n          this.apiService.EditarCodigo({codigo: this.miCodigo}).subscribe((data: any) => {\n            console.log('Código cambiado')\n          })\n          // tslint:disable-next-line:max-line-length\n          this.apiMapas.crearSede(datos.token, {ubicacion: {lat: 0, lng: 0}, nombre: 'SEDE ' + this.ncompleto, tipo: this.escogidos, pais: this.pais, ciudad: this.miciudad}).subscribe((data: any) => {\n            if (!data ){\n              this.toastService.toastError('No se pudo crear la sede');\n            }\n          }, (err) => {\n            this.toastService.toastError('No se pudo crear la sede');\n          })\n\n        });\n\n        }, (error) => { \n        this.toastService.toastError('No se pudo registrar el usuario, inténtelo más tarde');\n       });\n   } else {\n     this.toastService.toastError('Existen campos sin diligenciar correctamente');\n   }\n }\n\n\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\r\nimport { Observable, timer, of, from } from 'rxjs';\r\nimport { retryWhen, delayWhen, tap, catchError, take, map, concatAll } from 'rxjs/operators';\r\nimport { Registro } from '../../interfaces/registro.interface';\r\nimport { FileTransfer, FileUploadOptions, FileTransferObject } from '@ionic-native/file-transfer/ngx';\r\nimport { URL_SERVER } from 'src/environments/environment';\r\nimport { InicioService } from '../Almacenamiento/inicio.service';\r\nimport { NavController } from '@ionic/angular';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class UsuariosLoginService {\r\n\r\n\r\n    constructor(\r\n                private http: HttpClient,\r\n                private transfer: FileTransfer, \r\n                private almacenamiento: InicioService,\r\n                private navCtrl: NavController) { }\r\n\r\n    private hanflerError(error: Observable<any>) {\r\n\r\n        let intento = 0;\r\n\r\n        return error.pipe(\r\n            delayWhen(() => timer(5000)),\r\n            map((errorHttp: HttpErrorResponse) => {\r\n\r\n                intento++;\r\n                \r\n                console.log('Entramos a intentos');\r\n                if (errorHttp instanceof ErrorEvent) {\r\n                    if (intento === 3) {\r\n                        throw new Error('Error de Red');\r\n                    }\r\n                } else if (errorHttp instanceof ProgressEvent) {\r\n                    if (intento === 3) {\r\n                        throw new Error('Error de Red');\r\n                    }\r\n                } else {\r\n\r\n                    if ( errorHttp.status === 404) {\r\n                           throw new Error(' al realizar la solicictud ');\r\n                        } else if ( errorHttp.status === 401) {\r\n                            this.almacenamiento.terminarPartida().then(() => {\r\n                                this.navCtrl.navigateRoot('/home');\r\n                            });\r\n                            throw new Error('No tiene permisos para realizar la petición ');\r\n                         } else {\r\n                             console.log(errorHttp, 'Error de servidor');\r\n                             throw new Error(' No se pudo realizar la petición, intentalo más tarde ');\r\n                        }\r\n                }\r\n            }),\r\n            take(3)\r\n        );\r\n}\r\n\r\n    registrar(data): Observable<any> {\r\n        return this.http.post(`${URL_SERVER}/usuarios`, data).pipe(\r\n            map((res: any) => {\r\n                if (res.exe) {\r\n                    res.response.exe = res.exe;\r\n                    res.response.token = res.token;\r\n                    return res.response;\r\n                } else {\r\n                    return res;\r\n                }\r\n            }),\r\n            retryWhen(error => this.hanflerError(error))\r\n        )\r\n    }\r\n\r\n\r\n    usuario(usuario): Observable<any> {\r\n        return this.http.post(`${URL_SERVER}/usuarios/unico`, {buscar: usuario}).pipe(\r\n            retryWhen(error => this.hanflerError(error))\r\n        )\r\n    }\r\n\r\n    iniciarPartida(usuario, dispositivoID): Observable<any> {\r\n        const options = {\r\n            headers: new HttpHeaders({\r\n                'x-dispositivoID': dispositivoID\r\n            })\r\n        };\r\n        return this.http.post(`${URL_SERVER}/login`, usuario, options ).pipe(\r\n            map((res: any) => {\r\n                if (res.exe) {\r\n                    res.response.exe = res.exe;\r\n                    res.response.token = res.token;\r\n                    return res.response;\r\n                } else {\r\n                    return res.exe;\r\n                }\r\n            }),\r\n            retryWhen(error => this.hanflerError(error))\r\n        );\r\n    }\r\n\r\n    fotoPerfilUsuarioMoto( imagen, token, tipo ) {\r\n        const options: FileUploadOptions  = {\r\n            fileKey: 'archivo',\r\n            httpMethod: 'PUT',\r\n            headers: {\r\n                'x-token': token\r\n            },\r\n            params: {\r\n                tipo\r\n            }\r\n        }\r\n\r\n        // 4912685137238652\r\n\r\n        const fileTransfer: FileTransferObject = this.transfer.create();\r\n\r\n        return from(fileTransfer.upload(imagen, `${URL_SERVER}/upload`, options))\r\n        .pipe(\r\n            catchError(error => {\r\n                console.log(`No se pudo subir la imagen `);\r\n                throw new Error(`No se pudo subir la imagen `);\r\n            })\r\n        );\r\n    }\r\n\r\n\r\n    fotoPortada( imagen, token, old ) {\r\n        const options: FileUploadOptions  = {\r\n            fileKey: 'archivo',\r\n            httpMethod: 'PUT',\r\n            headers: {\r\n                'x-token': token\r\n            },\r\n            params: {\r\n                old\r\n            }\r\n        }\r\n\r\n        // 4912685137238652\r\n\r\n        const fileTransfer: FileTransferObject = this.transfer.create();\r\n\r\n        return from(fileTransfer.upload(imagen, `${URL_SERVER}/upload/portada/`, options))\r\n        .pipe(\r\n            catchError(error => {\r\n                console.log(`No se pudo subir la imagen `);\r\n                throw new Error(`No se pudo subir la imagen `);\r\n            })\r\n        );\r\n    }\r\n\r\n    viewImagen(token) {\r\n        const options = {\r\n            headers: new HttpHeaders({\r\n                'x-token': token\r\n            })\r\n        };\r\n        return this.http.get(`${URL_SERVER}/ver`, options).pipe(\r\n            retryWhen(error => this.hanflerError(error))\r\n        );\r\n    }\r\n\r\n    buscarUsuario(termino: string, token: string) {\r\n        const headerOption = {\r\n            headers: new HttpHeaders({\r\n                'x-token': token\r\n            })\r\n        };\r\n\r\n        return this.http.get(`${URL_SERVER}/usuarios/${termino}`, headerOption ).pipe(\r\n            retryWhen(error => this.hanflerError(error))\r\n        );\r\n    }\r\n\r\n    buscarPerfilUsuario(usuario, token) {\r\n        const HeaderOption = {\r\n            headers: new HttpHeaders({\r\n                'x-token': token\r\n            })\r\n        };\r\n\r\n        return this.http.get(`${URL_SERVER}/usuarios/perfil/${usuario}`, HeaderOption).pipe(\r\n            retryWhen(error => this.hanflerError(error))\r\n        );\r\n    }\r\n\r\n\r\n    traerMisNotificaciones(token, desde) {\r\n        const HeaderOption = {\r\n            headers: new HttpHeaders({\r\n                'x-token': token,\r\n                'x-desde': desde.toString()\r\n            })\r\n        };\r\n\r\n        return this.http.get(`${URL_SERVER}/notificaciones/misnotificaciones/`, HeaderOption).pipe(\r\n            retryWhen(error => this.hanflerError(error))\r\n        );\r\n    }\r\n\r\n    notiCantidad(token) {\r\n        const HeaderOption = {\r\n            headers: new HttpHeaders({\r\n                'x-token': token\r\n            })\r\n        };\r\n\r\n        return this.http.get(`${URL_SERVER}/notificaciones/numero/`, HeaderOption).pipe(\r\n            retryWhen(error => this.hanflerError(error))\r\n        );\r\n    }\r\n\r\n\r\n    ActualizarNotificaciones(token, id) {\r\n        const HeaderOption = {\r\n            headers: new HttpHeaders({\r\n                'x-token': token\r\n            })\r\n        };\r\n\r\n        return this.http.put(`${URL_SERVER}/notificaciones/misnotificaciones/cambiarestado/`, {id}, HeaderOption).pipe(\r\n            retryWhen(error => this.hanflerError(error))\r\n        );\r\n    }\r\n\r\n\r\n    listarPaises() {\r\n        return this.http.get(`${URL_SERVER}/paises` ).pipe(\r\n            retryWhen(error => this.hanflerError(error))\r\n        );\r\n    }\r\n\r\n    listarCiudades(pais) {\r\n        const headerOption = {\r\n            headers: new HttpHeaders({\r\n                'x-pais': pais\r\n            })\r\n        };\r\n\r\n        return this.http.get(`${URL_SERVER}/ciudad`, headerOption ).pipe(\r\n            retryWhen(error => this.hanflerError(error))\r\n        );\r\n    }\r\n\r\n    CodigoComprobar(data) {\r\n     \r\n        return this.http.put(`${URL_SERVER}/codigos`, data ).pipe(\r\n            retryWhen(error => this.hanflerError(error))\r\n        );\r\n    }\r\n\r\n    EditarCodigo(data) {\r\n     \r\n        return this.http.put(`${URL_SERVER}/codigos/cambiar`, data ).pipe(\r\n            retryWhen(error => this.hanflerError(error))\r\n        );\r\n    }\r\n\r\n\r\n\r\n    negocios() {\r\n     \r\n        return this.http.get(`${URL_SERVER}/tiponegocio` ).pipe(\r\n            retryWhen(error => this.hanflerError(error))\r\n        );\r\n    }\r\n}\r\n"]}