{"version":3,"sources":["webpack:///src/app/providers/Api/Inventarios.service.ts"],"names":["InventariosService","http","error","intento","pipe","errorHttp","console","log","ErrorEvent","Error","status","token","data","httpHeader","headers","post","hanflerError","put","get","id","patron","delete","ivt","providedIn"],"mappings":"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","file":"default~Inventarios-ivt-configuracion-ivt-configuracion-module~Inventarios-ivt-estadisticas-ivt-esta~d8f64576-es5.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { URL_SERVER } from '../../../environments/environment';\r\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\r\nimport { map, concatAll, retryWhen, delayWhen, take } from 'rxjs/operators';\r\nimport { timer, Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class InventariosService {\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    private hanflerError(error: Observable<any>) {\r\n\r\n            let intento = 0;\r\n\r\n            return error.pipe(\r\n                delayWhen(() => timer(3000)),\r\n                map((errorHttp: HttpErrorResponse) => {\r\n\r\n                        console.log('Entramos a intentos');\r\n                        if (errorHttp instanceof ErrorEvent) {\r\n                            throw new Error('Error de Red');\r\n                        } else {\r\n\r\n                            if ( errorHttp.status === 404) {\r\n                               throw new Error(' Página no encontrada');\r\n                            } else {\r\n                               // throw new Error(' No se pudo realizar la conexión, comprueba tu red ');\r\n                            }\r\n                           \r\n                        }\r\n                }),\r\n                take(3)\r\n            );\r\n    }\r\n\r\n  \r\n\r\n    crearInventario(token: any, data: any) {\r\n        const httpHeader = {\r\n            headers: new HttpHeaders({\r\n                'x-token': token\r\n            })\r\n        };\r\n\r\n        return this.http.post(`${URL_SERVER}/ivt/tipo/`, data, httpHeader).pipe(\r\n            retryWhen(error => this.hanflerError(error))\r\n        );\r\n    }\r\n\r\n    actualizarInventario(token: any, data: any) {\r\n        const httpHeader = {\r\n            headers: new HttpHeaders({\r\n                'x-token': token\r\n            })\r\n        };\r\n\r\n        return this.http.put(`${URL_SERVER}/ivt/cierre/`, data, httpHeader).pipe(\r\n            retryWhen(error => this.hanflerError(error))\r\n        );\r\n    }\r\n\r\n\r\n    leerInventarios(token: any) {\r\n        const httpHeader = {\r\n            headers: new HttpHeaders({\r\n                'x-token': token\r\n            })\r\n        };\r\n\r\n        return this.http.get(`${URL_SERVER}/ivt/tipo/`, httpHeader).pipe(\r\n            retryWhen(error => this.hanflerError(error))\r\n        );\r\n    }\r\n\r\n    leerInventario(token: any, id) {\r\n        const httpHeader = {\r\n            headers: new HttpHeaders({\r\n                'x-token': token,\r\n                'x-id': id\r\n            })\r\n        };\r\n\r\n        return this.http.get(`${URL_SERVER}/ivt/tipo/uno`, httpHeader).pipe(\r\n            retryWhen(error => this.hanflerError(error))\r\n        );\r\n    }\r\n\r\n\r\n    editarAcceso(token: any, data: any) {\r\n        const httpHeader = {\r\n            headers: new HttpHeaders({\r\n                'x-token': token\r\n            })\r\n        };\r\n\r\n        return this.http.put(`${URL_SERVER}/ivt/tipo/accesos/`, data, httpHeader).pipe(\r\n            retryWhen(error => this.hanflerError(error))\r\n        );\r\n    }\r\n\r\n\r\n    // EMPLEADOS ************************************************************\r\n\r\n    BuscarUsuarios(token: any, patron) {\r\n        const httpHeader = {\r\n            headers: new HttpHeaders({\r\n                'x-token': token\r\n            })\r\n        };\r\n\r\n        return this.http.put(`${URL_SERVER}/empleados/buscar/`, {patron}, httpHeader).pipe(\r\n            retryWhen(error => this.hanflerError(error))\r\n        );\r\n    }\r\n\r\n\r\n    crearEmpleado(token: any, data: any) {\r\n        const httpHeader = {\r\n            headers: new HttpHeaders({\r\n                'x-token': token\r\n            })\r\n        };\r\n\r\n        return this.http.post(`${URL_SERVER}/empleados/`, data, httpHeader).pipe(\r\n            retryWhen(error => this.hanflerError(error))\r\n        );\r\n    }\r\n\r\n    editarEmpleado(token: any, data: any) {\r\n        const httpHeader = {\r\n            headers: new HttpHeaders({\r\n                'x-token': token\r\n            })\r\n        };\r\n\r\n        return this.http.put(`${URL_SERVER}/empleados/`, data, httpHeader).pipe(\r\n            retryWhen(error => this.hanflerError(error))\r\n        );\r\n    }\r\n\r\n    leerEmpleados(token: any) {\r\n        const httpHeader = {\r\n            headers: new HttpHeaders({\r\n                'x-token': token\r\n            })\r\n        };\r\n\r\n        return this.http.get(`${URL_SERVER}/empleados/`, httpHeader).pipe(\r\n            retryWhen(error => this.hanflerError(error))\r\n        );\r\n    }\r\n\r\n    eliminarEmpleados(token: any, id: any) {\r\n        const httpHeader = {\r\n            headers: new HttpHeaders({\r\n                'x-token': token,\r\n                'x-id': id\r\n            })\r\n        };\r\n\r\n        return this.http.delete(`${URL_SERVER}/empleados/`, httpHeader).pipe(\r\n            retryWhen(error => this.hanflerError(error))\r\n        );\r\n    }\r\n\r\n\r\n    // Proveedores ******************************************************************\r\n\r\n    crearProveedor(token: any, data: any) {\r\n        const httpHeader = {\r\n            headers: new HttpHeaders({\r\n                'x-token': token\r\n            })\r\n        };\r\n\r\n        return this.http.post(`${URL_SERVER}/ivt/proveedores/`, data, httpHeader).pipe(\r\n            retryWhen(error => this.hanflerError(error))\r\n        );\r\n    }\r\n\r\n    editarProveedor(token: any, data: any) {\r\n        const httpHeader = {\r\n            headers: new HttpHeaders({\r\n                'x-token': token\r\n            })\r\n        };\r\n\r\n        return this.http.put(`${URL_SERVER}/ivt/proveedores/`, data, httpHeader).pipe(\r\n            retryWhen(error => this.hanflerError(error))\r\n        );\r\n    }\r\n\r\n\r\n    eliminarProveedor(token: any, id: any) {\r\n        const httpHeader = {\r\n            headers: new HttpHeaders({\r\n                'x-token': token,\r\n                'x-id': id\r\n            })\r\n        };\r\n\r\n        return this.http.delete(`${URL_SERVER}/ivt/proveedores/`, httpHeader).pipe(\r\n            retryWhen(error => this.hanflerError(error))\r\n        );\r\n    }\r\n\r\n    leerProveedor(token: any, ivt) {\r\n        const httpHeader = {\r\n            headers: new HttpHeaders({\r\n                'x-token': token,\r\n                'x-ivt': ivt\r\n            })\r\n        };\r\n\r\n        return this.http.get(`${URL_SERVER}/ivt/proveedores/`, httpHeader).pipe(\r\n            retryWhen(error => this.hanflerError(error))\r\n        );\r\n    }\r\n\r\n\r\n    // Categorias ******************************************************************\r\n\r\n    crearCategoria(token: any, data: any) {\r\n        const httpHeader = {\r\n            headers: new HttpHeaders({\r\n                'x-token': token\r\n            })\r\n        };\r\n\r\n        return this.http.post(`${URL_SERVER}/ivt/categorias/`, data, httpHeader).pipe(\r\n            retryWhen(error => this.hanflerError(error))\r\n        );\r\n    }\r\n\r\n    editarCategoria(token: any, data: any) {\r\n        const httpHeader = {\r\n            headers: new HttpHeaders({\r\n                'x-token': token\r\n            })\r\n        };\r\n\r\n        return this.http.put(`${URL_SERVER}/ivt/categorias/`, data, httpHeader).pipe(\r\n            retryWhen(error => this.hanflerError(error))\r\n        );\r\n    }\r\n\r\n\r\n    eliminarCategoria(token: any, id: any) {\r\n        const httpHeader = {\r\n            headers: new HttpHeaders({\r\n                'x-token': token,\r\n                'x-id': id\r\n            })\r\n        };\r\n\r\n        return this.http.delete(`${URL_SERVER}/ivt/categorias/`, httpHeader).pipe(\r\n            retryWhen(error => this.hanflerError(error))\r\n        );\r\n    }\r\n\r\n    leerCategoria(token: any, ivt) {\r\n        const httpHeader = {\r\n            headers: new HttpHeaders({\r\n                'x-token': token,\r\n                'x-ivt': ivt\r\n            })\r\n        };\r\n\r\n        return this.http.get(`${URL_SERVER}/ivt/categorias/`, httpHeader).pipe(\r\n            retryWhen(error => this.hanflerError(error))\r\n        );\r\n    }\r\n\r\n\r\n\r\n\r\n    // Productos ******************************************************************\r\n\r\n    crearProducto(token: any, data: any) {\r\n        const httpHeader = {\r\n            headers: new HttpHeaders({\r\n                'x-token': token\r\n            })\r\n        };\r\n\r\n        return this.http.post(`${URL_SERVER}/ivt/productos/`, data, httpHeader).pipe(\r\n            retryWhen(error => this.hanflerError(error))\r\n        );\r\n    }\r\n\r\n    editarProducto(token: any, data: any) {\r\n        const httpHeader = {\r\n            headers: new HttpHeaders({\r\n                'x-token': token\r\n            })\r\n        };\r\n\r\n        return this.http.put(`${URL_SERVER}/ivt/productos/`, data, httpHeader).pipe(\r\n            retryWhen(error => this.hanflerError(error))\r\n        );\r\n    }\r\n\r\n\r\n    eliminarProducto(token: any, id: any) {\r\n        const httpHeader = {\r\n            headers: new HttpHeaders({\r\n                'x-token': token,\r\n                'x-id': id\r\n            })\r\n        };\r\n\r\n        return this.http.delete(`${URL_SERVER}/ivt/productos/`, httpHeader).pipe(\r\n            retryWhen(error => this.hanflerError(error))\r\n        );\r\n    }\r\n\r\n    leerProducto(token: any, data) {\r\n        const httpHeader = {\r\n            headers: new HttpHeaders({\r\n                'x-token': token,\r\n            })\r\n        };\r\n\r\n        return this.http.put(`${URL_SERVER}/ivt/productos/filtro/`, data, httpHeader).pipe(\r\n            retryWhen(error => this.hanflerError(error))\r\n        );\r\n    }\r\n\r\n    leerProductoEstadistica(token: any, data) {\r\n        const httpHeader = {\r\n            headers: new HttpHeaders({\r\n                'x-token': token,\r\n            })\r\n        };\r\n\r\n        return this.http.put(`${URL_SERVER}/ivt/productos/filtro/estadistica/`, data, httpHeader).pipe(\r\n            retryWhen(error => this.hanflerError(error))\r\n        );\r\n    }\r\n\r\n    leerProductosPorInventario(token: any, data) {\r\n        const httpHeader = {\r\n            headers: new HttpHeaders({\r\n                'x-token': token\r\n            })\r\n        };\r\n\r\n        return this.http.put(`${URL_SERVER}/ivt/productos/buscarivt/`, data, httpHeader).pipe(\r\n            retryWhen(error => this.hanflerError(error))\r\n        );\r\n    }\r\n\r\n\r\n    // Entradas  y Salidas ******\r\n\r\n\r\n    buscarProducto(token: any, data: any) {\r\n        const httpHeader = {\r\n            headers: new HttpHeaders({\r\n                'x-token': token\r\n            })\r\n        };\r\n    \r\n        return this.http.put(`${URL_SERVER}/ivt/productos/buscar`, data, httpHeader).pipe(\r\n            retryWhen(error => this.hanflerError(error))\r\n        );\r\n    }\r\n\r\n\r\n    crearEntrada(token: any, data: any) {\r\n        const httpHeader = {\r\n            headers: new HttpHeaders({\r\n                'x-token': token\r\n            })\r\n        };\r\n    \r\n        return this.http.post(`${URL_SERVER}/ivt/entradas/`, data, httpHeader).pipe(\r\n            retryWhen(error => this.hanflerError(error))\r\n        );\r\n    }\r\n\r\n\r\n    leerEntrada(token: any, data) {\r\n        const httpHeader = {\r\n            headers: new HttpHeaders({\r\n                'x-token': token,\r\n            })\r\n        };\r\n    \r\n        return this.http.put(`${URL_SERVER}/ivt/entradas/`, data, httpHeader).pipe(\r\n            retryWhen(error => this.hanflerError(error))\r\n        );\r\n    }\r\n\r\n\r\n    filtrarEntradas(token: any, data) {\r\n        const httpHeader = {\r\n            headers: new HttpHeaders({\r\n                'x-token': token,\r\n            })\r\n        };\r\n    \r\n        return this.http.put(`${URL_SERVER}/ivt/entradas/buscar/`, data, httpHeader).pipe(\r\n            retryWhen(error => this.hanflerError(error))\r\n        );\r\n    }\r\n\r\n\r\n    filtrarEntradasPatron(token: any, data) {\r\n        const httpHeader = {\r\n            headers: new HttpHeaders({\r\n                'x-token': token,\r\n            })\r\n        };\r\n    \r\n        return this.http.put(`${URL_SERVER}/ivt/entradas/buscar/patron/`, data, httpHeader).pipe(\r\n            retryWhen(error => this.hanflerError(error))\r\n        );\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    crearSalida(token: any, data: any) {\r\n        const httpHeader = {\r\n            headers: new HttpHeaders({\r\n                'x-token': token\r\n            })\r\n        };\r\n    \r\n        return this.http.post(`${URL_SERVER}/ivt/salidas/`, data, httpHeader).pipe(\r\n            retryWhen(error => this.hanflerError(error))\r\n        );\r\n    }\r\n\r\n\r\n    leerSalida(token: any, data) {\r\n        const httpHeader = {\r\n            headers: new HttpHeaders({\r\n                'x-token': token,\r\n            })\r\n        };\r\n    \r\n        return this.http.put(`${URL_SERVER}/ivt/salidas/`, data, httpHeader).pipe(\r\n            retryWhen(error => this.hanflerError(error))\r\n        );\r\n    }\r\n\r\n\r\n    filtrarSalidas(token: any, data) {\r\n        const httpHeader = {\r\n            headers: new HttpHeaders({\r\n                'x-token': token,\r\n            })\r\n        };\r\n    \r\n        return this.http.put(`${URL_SERVER}/ivt/salidas/buscar/`, data, httpHeader).pipe(\r\n            retryWhen(error => this.hanflerError(error))\r\n        );\r\n    }\r\n\r\n\r\n    filtrarSalidasPatron(token: any, data) {\r\n        const httpHeader = {\r\n            headers: new HttpHeaders({\r\n                'x-token': token,\r\n            })\r\n        };\r\n    \r\n        return this.http.put(`${URL_SERVER}/ivt/salidas/buscar/patron/`, data, httpHeader).pipe(\r\n            retryWhen(error => this.hanflerError(error))\r\n        );\r\n    }\r\n\r\n    CargarInventarios(token: any, data) {\r\n        const httpHeader = {\r\n            headers: new HttpHeaders({\r\n                'x-token': token,\r\n            })\r\n        };\r\n    \r\n        return this.http.put(`${URL_SERVER}/ivt/tipo/almacen/`, data, httpHeader).pipe(\r\n            retryWhen(error => this.hanflerError(error))\r\n        );\r\n    }\r\n\r\n\r\n    // Estadisticas\r\n\r\n\r\n    CierresInventario(token: any, data: any) {\r\n        const httpHeader = {\r\n            headers: new HttpHeaders({\r\n                'x-token': token\r\n            })\r\n        };\r\n\r\n        return this.http.put(`${URL_SERVER}/ivt/cierre/buscar/`, data, httpHeader).pipe(\r\n            retryWhen(error => this.hanflerError(error))\r\n        );\r\n    }\r\n\r\n    MovCantidades(token: any, data: any) {\r\n        const httpHeader = {\r\n            headers: new HttpHeaders({\r\n                'x-token': token\r\n            })\r\n        };\r\n\r\n        return this.http.put(`${URL_SERVER}/ivt/mov/`, data, httpHeader).pipe(\r\n            retryWhen(error => this.hanflerError(error))\r\n        );\r\n    }\r\n\r\n    MovCantidades2(token: any, data: any) {\r\n        const httpHeader = {\r\n            headers: new HttpHeaders({\r\n                'x-token': token\r\n            })\r\n        };\r\n\r\n        return this.http.put(`${URL_SERVER}/ivt/mov/salidas/`, data, httpHeader).pipe(\r\n            retryWhen(error => this.hanflerError(error))\r\n        );\r\n    }\r\n\r\n\r\n    leerMovmientos(token: any, data) {\r\n        const httpHeader = {\r\n            headers: new HttpHeaders({\r\n                'x-token': token\r\n            })\r\n        };\r\n\r\n        return this.http.put(`${URL_SERVER}/ivt/movimientos/filtro/`, data, httpHeader).pipe(\r\n            retryWhen(error => this.hanflerError(error))\r\n        );\r\n    }\r\n\r\n\r\n    leerAgotados(token: any, data) {\r\n        const httpHeader = {\r\n            headers: new HttpHeaders({\r\n                'x-token': token\r\n            })\r\n        };\r\n\r\n        return this.http.put(`${URL_SERVER}/ivt/productos/agotados/`, data, httpHeader).pipe(\r\n            retryWhen(error => this.hanflerError(error))\r\n        );\r\n    }\r\n\r\n\r\n    leerProximos(token: any, data) {\r\n        const httpHeader = {\r\n            headers: new HttpHeaders({\r\n                'x-token': token\r\n            })\r\n        };\r\n\r\n        return this.http.put(`${URL_SERVER}/ivt/productos/proximos/`, data, httpHeader).pipe(\r\n            retryWhen(error => this.hanflerError(error))\r\n        );\r\n    }\r\n \r\n\r\n}\r\n"]}