{"version":3,"sources":["webpack:///src/app/pages/Inventarios/ivt-configuracion/ivt-configuracion-routing.module.ts","webpack:///src/app/pages/Inventarios/ivt-configuracion/ivt-configuracion.module.ts","webpack:///src/app/pages/Inventarios/ivt-configuracion/ivt-configuracion.page.ts","webpack:///src/app/pages/Inventarios/ivt-configuracion/ivt-configuracion.page.html"],"names":["routes","path","component","IvtConfiguracionPageRoutingModule","forChild","imports","exports","IvtConfiguracionPageModule","declarations","IvtConfiguracionPage","almacenamiento","ivtApi","toast","activeRoute","alertCtrl","router","nombre","cambio","cargarCategorias","event","then","target","complete","catch","obtenerToken","info","leerInventario","token","snapshot","paramMap","get","subscribe","data","exe","response","name","toastError","err","console","log","detail","checked","create","header","message","buttons","text","role","handler","actualizar","alert","present","bool","actualizarInventario","ivt","toastExitoso","navigate","toggle","guardar","selector","templateUrl","styleUrls"],"mappings":"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","file":"Inventarios-ivt-configuracion-ivt-configuracion-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IvtConfiguracionPage } from './ivt-configuracion.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: IvtConfiguracionPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class IvtConfiguracionPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { IvtConfiguracionPageRoutingModule } from './ivt-configuracion-routing.module';\n\nimport { IvtConfiguracionPage } from './ivt-configuracion.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    IvtConfiguracionPageRoutingModule\n  ],\n  declarations: [IvtConfiguracionPage]\n})\nexport class IvtConfiguracionPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { InicioService } from '../../../providers/Almacenamiento/inicio.service';\nimport { InventariosService } from '../../../providers/Api/Inventarios.service';\nimport { ToastServices } from '../../../providers/Utilidades/ToastService.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AlertController } from '@ionic/angular';\n\n@Component({\n  selector: 'app-ivt-configuracion',\n  templateUrl: './ivt-configuracion.page.html',\n  styleUrls: ['./ivt-configuracion.page.scss'],\n})\nexport class IvtConfiguracionPage implements OnInit {\n\n  nombre = '';\n  cambio = false;\n\n  constructor(\n    private almacenamiento: InicioService,\n    private ivtApi: InventariosService,\n    private toast: ToastServices,\n    private activeRoute: ActivatedRoute,\n    private alertCtrl: AlertController,\n    private router: Router\n  ) { }\n\n  ngOnInit() { }\n\n  ionViewWillEnter() {\n    this.cargarCategorias();\n  }\n\n  refrescando( event ) {\n    this.cargarCategorias().then(() => {\n      event.target.complete()\n    }).catch(() => event.target.complete())\n  }\n\n  async cargarCategorias() {\n      const info = await this.almacenamiento.obtenerToken();\n\n      if ( info ) {\n        this.ivtApi.leerInventario(info.token, this.activeRoute.snapshot.paramMap.get('id')).subscribe((data: any) => {\n          if (data.exe) {\n              this.nombre = data.response.name;\n          } else {\n            this.toast.toastError('No se pudo cargar los datos, intentelo más tarde');\n          }\n        }, (err) => {\n            this.toast.toastError('No se pudo cargar los datos, intentelo más tarde');\n        })\n      }\n  }\n\n  toggle( event ) {\n    console.log(event)\n    this.cambio = event.detail.checked;\n  }\n\n  async guardar() {\n    if (this.cambio) {\n        const alert = await this.alertCtrl.create({\n          header: 'Cerrar periodo',\n          message: 'Al cerrar el periodo de inventario comezará un nuevo periodo a partir de ahora. Esta acción no se puede revsersar',\n          buttons: [\n            {\n              text: 'cancelar',\n              role: 'cancel'\n            },\n            {\n              text: 'Aceptar',\n              handler: () => {\n                this.actualizar(true);\n              }\n            }\n          ]\n        })\n\n        await alert.present();\n    } else {\n      this.actualizar(false);\n    }\n  }\n\n  async actualizar(bool) {\n      const info = await this.almacenamiento.obtenerToken();\n\n      if ( info ) {\n        this.ivtApi.actualizarInventario(info.token, {ivt: this.activeRoute.snapshot.paramMap.get('id'), nombre: this.nombre, exe: bool}).subscribe((data: any) => {\n          if ( data.exe ) {\n            this.toast.toastExitoso('Información actualizada!');\n            this.router.navigate(['/central/menu/ivt-miinventario', this.activeRoute.snapshot.paramMap.get('id')]);\n          } else {\n            this.toast.toastError('No se pudo actualizar el inventario, intentelo más tarde');\n          }\n        }, (err) => {\n          this.toast.toastError('No se pudo actualizar el inventario, intentelo más tarde');\n        })\n      }\n  }\n\n\n}\n","<ion-header class=\"ion-no-border\">\n    <ion-toolbar color=\"success\">\n        <ion-back-button slot=\"start\" icon=\"chevron-back-outline\" defaultHref=\"/central/menu/ivt-inicio\"></ion-back-button>\n        <ion-title>Configuración</ion-title>\n    </ion-toolbar>\n</ion-header>\n\n<ion-content>\n\n    <div class=\"divider\"></div>\n    <ion-list>\n        <ion-item mode=\"ios\">\n            <ion-label position=\"floating\">\n                Nombre del Inventario\n            </ion-label>\n            <ion-input type=\"text\" [(ngModel)]=\"nombre\"></ion-input>\n        </ion-item>\n\n        <ion-item mode=\"ios\">\n            <ion-label class=\"ion-text-wrap\">\n                Cerrar periodo de inventario\n            </ion-label>\n            <ion-toggle slot=\"end\" color=\"tertiary\" (ionChange)=\"toggle( $event )\"></ion-toggle>\n        </ion-item> <br>\n\n        <ion-button color=\"light\" expand=\"block\" mode=\"ios\" shape=\"round\" (click)=\"guardar()\">Guardar Cambios</ion-button>\n    </ion-list>\n\n</ion-content>"]}