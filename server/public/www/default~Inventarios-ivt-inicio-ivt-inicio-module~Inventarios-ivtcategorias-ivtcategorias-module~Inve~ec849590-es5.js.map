{"version":3,"sources":["webpack:///src/app/pages/Inventarios/ivt-modal/ivt-modal.page.html","webpack:///src/app/pages/Inventarios/ivt-modal/ivt-modal.page.ts"],"names":["IvtModalPage","modalCtrl","ivtApi","almacenamiento","toast","socket","color","vista","titulo","ivt","simple","avanzado","ivtTipo","nombre","nombrep","tel1","tel2","correo","nombrec","load","categorias","proveedores","nombrepd","codigopd","limite","selectCat","selectPro","productos","texto","mostrar","productoHistoria","productoEntrada","producto","cantidad","undefined","precio","origen","origenextra","total","mensaje","codigo","productoSalida","destino","destinoivt","prodDestino","mensaje2","creador","producto2","nombre2","codigo2","ivtPadre","inventarios","productosHijos","ivtSelect","entrada","tipo","cargarCategorias","cargarProveedores","console","log","categoria","proveedor","inventario","cargarInventario","cargarInventarios","obtenerToken","info","carga","CargarInventarios","token","subscribe","data","exe","slide","lockSwipes","response","forEach","_id","push","accesos","toastError","err","leerInventario","crearInventario","toastExitoso","dismiss","crearProveedor","crearCategoria","crearProducto","trim","editarProducto","event","detail","value","leerCategoria","leerProveedor","then","catch","buscarProducto","patron","length","i","slideNext","slidePrev","leerProductosPorInventario","id","filter","prod","crearEntrada","emit","usuarios","existencia","crearSalida","cancelar","cerrar","selector","templateUrl","styleUrls","static"],"mappings":"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","file":"default~Inventarios-ivt-inicio-ivt-inicio-module~Inventarios-ivtcategorias-ivtcategorias-module~Inve~ec849590-es5.js","sourcesContent":["<ion-header class=\"ion-no-border\">\n    <ion-toolbar [color]=\"color\">\n\n        <ion-title>{{ titulo }}</ion-title>\n        <ion-buttons slot=\"end\">\n            <ion-button (click)=\"cerrar()\">\n                <ion-icon slot=\"icon-only\" name=\"close-outline\"></ion-icon>\n            </ion-button>\n        </ion-buttons>\n    </ion-toolbar>\n</ion-header>\n\n<ion-content>\n\n\n    <ion-list *ngIf=\"vista === 'crear'\">\n\n\n        <ion-item-divider lines=\"none\" color=\"light\" class=\"ion-padding\">\n            Nombre del Inventario\n        </ion-item-divider>\n\n        <ion-item>\n            <ion-input [(ngModel)]=\"nombre\" class=\"ion-padding\" type=\"text\" placeholder=\"Escribe el nombre del inventario\"></ion-input>\n        </ion-item>\n\n        <div class=\"ion-padding\">\n            <ion-button class=\"marginTop colorw\" mode=\"ios\" shape=\"round\" expand=\"block\" color=\"warning\" (click)=\"crear()\">CREAR</ion-button>\n        </div>\n\n        <div class=\"center\" *ngIf=\"load\">\n            <ion-spinner name=\"crescent\"></ion-spinner> Creando Inventario...\n        </div>\n    </ion-list>\n\n\n\n    <ion-list *ngIf=\"vista === 'proveedores'\">\n        <ion-item-divider lines=\"none\" color=\"light\" class=\"ion-padding\">\n            Nombre del Proveedor\n        </ion-item-divider>\n        <ion-item>\n            <ion-input [(ngModel)]=\"nombrep\" class=\"ion-padding\" type=\"text\" placeholder=\"Escribe el nombre del proveedor\"></ion-input>\n        </ion-item>\n\n        <ion-item-divider lines=\"none\" color=\"light\" class=\"ion-padding\">\n            Contacto del Proveedor\n        </ion-item-divider>\n\n        <ion-item>\n            <ion-input [(ngModel)]=\"tel1\" class=\"ion-padding\" type=\"number\" placeholder=\"Teléfono de contacto\"></ion-input>\n        </ion-item>\n\n        <ion-item>\n            <ion-input [(ngModel)]=\"tel2\" class=\"ion-padding\" type=\"number\" placeholder=\"Teléfono adicional\"></ion-input>\n        </ion-item>\n\n        <ion-item>\n            <ion-input [(ngModel)]=\"correo\" class=\"ion-padding\" type=\"text\" placeholder=\"Correo electrónico de contacto\"></ion-input>\n        </ion-item>\n\n        <div class=\"ion-padding\">\n            <ion-button class=\"marginTop colorw\" mode=\"ios\" shape=\"round\" expand=\"block\" color=\"warning\" (click)=\"crearProveedor()\">CREAR</ion-button>\n        </div>\n\n        <div class=\"center\" *ngIf=\"load\">\n            <ion-spinner color=\"success\" name=\"crescent\"></ion-spinner> Creando Proveedor...\n        </div>\n    </ion-list>\n\n    <ion-list *ngIf=\"vista === 'categorias'\">\n        <ion-item-divider lines=\"none\" color=\"light\" class=\"ion-padding\">\n            Nombre de la Categoría\n        </ion-item-divider>\n        <ion-item>\n            <ion-input [(ngModel)]=\"nombrec\" class=\"ion-padding\" type=\"text\" placeholder=\"Escribe el nombre de la categoría\"></ion-input>\n        </ion-item>\n\n\n        <div class=\"ion-padding\">\n            <ion-button class=\"marginTop colorw\" mode=\"ios\" shape=\"round\" expand=\"block\" color=\"warning\" (click)=\"crearCategoria()\">CREAR</ion-button>\n        </div>\n\n        <div class=\"center\" *ngIf=\"load\">\n            <ion-spinner color=\"success\" name=\"crescent\"></ion-spinner> Creando Categoría...\n        </div>\n    </ion-list>\n\n\n\n    <ion-list *ngIf=\"vista === 'productos'\">\n        <ion-item-divider lines=\"none\" color=\"light\" class=\"ion-padding\">\n            <ion-label>INFORMACIÓN</ion-label>\n        </ion-item-divider>\n        <ion-item>\n            <ion-input [(ngModel)]=\"nombrepd\" class=\"ion-padding\" type=\"text\" placeholder=\"Escribe el nombre del producto\"></ion-input>\n        </ion-item>\n\n        <ion-item>\n            <ion-input [(ngModel)]=\"codigopd\" class=\"ion-padding\" type=\"text\" placeholder=\"Escribe el código del producto\"></ion-input>\n        </ion-item>\n\n        <ion-item-divider lines=\"none\" color=\"light\" class=\"ion-padding\">\n            <ion-label>CATEGORÍA</ion-label>\n        </ion-item-divider>\n        <ion-item>\n            <ion-label>Seleccione la categoría</ion-label>\n            <ion-select (ionChange)=\"cambioCategoria( $event )\">\n                <ion-select-option *ngFor=\"let categoria of categorias\" value=\"{{ categoria.nombre }}\">{{ categoria.nombre }}</ion-select-option>\n            </ion-select>\n        </ion-item>\n\n        <ion-item-divider lines=\"none\" color=\"light\" class=\"ion-padding\">\n            <ion-label>PROVEEDOR</ion-label>\n        </ion-item-divider>\n        <ion-item>\n            <ion-label>Seleccione la proveedor</ion-label>\n            <ion-select (ionChange)=\"cambioProveedor( $event )\">\n                <ion-select-option *ngFor=\"let proveedor of proveedores\" value=\"{{ proveedor.nombre }}\">{{ proveedor.nombre }}</ion-select-option>\n            </ion-select>\n        </ion-item>\n\n        <ion-item-divider lines=\"none\" color=\"light\" class=\"ion-padding\">\n            <ion-label class=\"ion-text-wrap\">LIMITE DE EXISTENCIA <br> Escribe la cantidad en la cual se va a notificar que el producto esta próximo a agotarse.</ion-label>\n        </ion-item-divider>\n        <ion-item>\n            <ion-input [(ngModel)]=\"limite\" class=\"ion-padding\" type=\"number\" placeholder=\"Escribe la cantidad\"></ion-input>\n        </ion-item>\n\n        <div class=\"ion-padding\">\n            <ion-button class=\"marginTop colorw\" mode=\"ios\" shape=\"round\" expand=\"block\" color=\"warning\" (click)=\"crearProducto()\">CREAR</ion-button>\n        </div>\n\n        <div class=\"center\" *ngIf=\"load\">\n            <ion-spinner color=\"success\" name=\"crescent\"></ion-spinner> Creando nuevo Producto...\n        </div>\n    </ion-list>\n\n\n\n    <ion-list *ngIf=\"vista === 'editarproductos'\">\n        <ion-item-divider lines=\"none\" color=\"light\" class=\"ion-padding\">\n            <ion-label>INFORMACIÓN</ion-label>\n        </ion-item-divider>\n        <ion-item>\n            <ion-input [(ngModel)]=\"nombrepd\" class=\"ion-padding\" type=\"text\" placeholder=\"Escribe el nombre del producto\"></ion-input>\n        </ion-item>\n\n        <ion-item>\n            <ion-input [(ngModel)]=\"codigopd\" class=\"ion-padding\" type=\"text\" placeholder=\"Escribe el código del producto\"></ion-input>\n        </ion-item>\n\n        <ion-item-divider lines=\"none\" color=\"light\" class=\"ion-padding\">\n            <ion-label>CATEGORÍA</ion-label>\n        </ion-item-divider>\n        <ion-item>\n            <ion-label>Seleccione la categoría</ion-label>\n            <ion-select placeholder=\"Seleccione una\" [value]=\"selectCat\" (ionChange)=\"cambioCategoria( $event )\">\n                <ion-select-option *ngFor=\"let categoria of categorias\" value=\"{{ categoria.nombre }}\">{{ categoria.nombre }}</ion-select-option>\n            </ion-select>\n        </ion-item>\n\n        <ion-item-divider lines=\"none\" color=\"light\" class=\"ion-padding\">\n            <ion-label>PROVEEDOR</ion-label>\n        </ion-item-divider>\n        <ion-item>\n            <ion-label>Seleccione la proveedor</ion-label>\n            <ion-select [value]=\"selectPro\" (ionChange)=\"cambioProveedor( $event )\">\n                <ion-select-option *ngFor=\"let proveedor of proveedores\" value=\"{{ proveedor.nombre }}\">{{ proveedor.nombre }}</ion-select-option>\n            </ion-select>\n        </ion-item>\n\n\n        <ion-item-divider lines=\"none\" color=\"light\" class=\"ion-padding\">\n            <ion-label>LIMITE DE EXISTENCIA</ion-label> <br> Escribe la cantidad en la cual se va a notificar que el producto esta próximo a agotarse.\n        </ion-item-divider>\n        <ion-item>\n            <ion-input [(ngModel)]=\"limite\" class=\"ion-padding\" type=\"number\" placeholder=\"Escribe la cantidad\"></ion-input>\n        </ion-item>\n\n        <div class=\"ion-padding\">\n            <ion-button class=\"marginTop colorw\" mode=\"ios\" shape=\"round\" expand=\"block\" color=\"warning\" (click)=\"editarProducto()\">EDITAR PRODUCTO</ion-button>\n        </div>\n\n        <div class=\"center\" *ngIf=\"load\">\n            <ion-spinner color=\"success\" name=\"crescent\"></ion-spinner> Editando nuevo Producto...\n        </div>\n    </ion-list>\n\n\n\n    <ion-slides *ngIf=\"carga && vista === 'entradas'\" #slide>\n        <ion-slide>\n            <ion-searchbar class=\"ion-text-left\" debounce=\"500\" placeholder=\"Buscar Producto por código o nombre\" mode=\"ios\" (ionChange)=\"buscar( $event )\"></ion-searchbar>\n\n            <div class=\"divider light\"></div>\n\n            <ion-list *ngIf=\"load\">\n                <ion-item *ngFor=\"let pdo of [1,1,1,1,1]\">\n\n                    <ion-skeleton-text slot=\"start\" animated style=\"width: 30px; height: 30px;\"></ion-skeleton-text>\n\n                    <ion-label>\n                        <ion-skeleton-text animated style=\"width: 100%; height: 10px;\"></ion-skeleton-text>\n\n                        <ion-skeleton-text animated style=\"width: 80%; height: 10px;\"></ion-skeleton-text>\n                    </ion-label>\n                </ion-item>\n            </ion-list>\n\n            <ion-list>\n                <ion-item *ngFor=\"let producto of productos; let i = index;\" (click)=\"validarProducto( producto , i)\">\n                    <ion-avatar slot=\"start\">\n                        <img src=\"/assets/Productos.png\">\n                    </ion-avatar>\n\n                    <ion-label>\n                        <div>{{producto.nombre}}</div>\n                        <div *ngIf=\"producto.codigo\"><strong>Código: </strong> {{producto.codigo}}</div>\n\n\n                        <div><strong>Categoria: </strong> <strong class=\"rojoi\">{{ producto.categoria }}</strong></div>\n\n                        <div class=\"flexbet\"><strong>Existencia:  <span class=\"verdei\">{{ producto.existencia }}</span></strong>\n                            <ion-chip color=\"success\" *ngIf=\"producto.existencia > producto.limote\">AL DIA</ion-chip>\n                            <ion-chip color=\"warning\" *ngIf=\"producto.existencia <= producto.limite && producto.existencia > 0\">SE ESTÁ AGOTANDO</ion-chip>\n                            <ion-chip color=\"danger\" *ngIf=\"producto.existencia === 0\">PRODUCTO AGOTADO</ion-chip>\n                        </div>\n                    </ion-label>\n                </ion-item>\n            </ion-list>\n\n            <div class=\"center\" *ngIf=\"mostrar\">\n                <h3 class=\"tituloGrande\">No existen productos relacionados con: <strong>{{ texto }}</strong></h3>\n            </div>\n        </ion-slide>\n\n        <ion-slide>\n            <ion-card mode=\"ios\">\n                <ion-card-content>\n                    <h3 class=\"tituloGrande tprod\">{{productoHistoria.nombre}}</h3>\n\n                    <ion-list>\n                        <ion-item-divider color=\"light\">\n                            <ion-label>Información del producto</ion-label>\n                        </ion-item-divider>\n                        <ion-item>\n                            <ion-input (ionChange)=\"entradaCambioProd($event, 'precio')\" [(ngModel)]=\"productoEntrada.precio\" type=\"number\" placeholder=\"Precio Unitario\"></ion-input>\n                        </ion-item>\n\n                        <ion-item>\n                            <ion-input (ionChange)=\"entradaCambioProd($event, 'canti')\" [(ngModel)]=\"productoEntrada.cantidad\" type=\"number\" placeholder=\"Cantidad\"></ion-input>\n                        </ion-item>\n\n                        <div class=\"total \" *ngIf=\"productoEntrada.total > 0 && productoEntrada.total\">\n                            ${{productoEntrada.total | decimales:'es-CO'}}\n                        </div>\n\n                        <ion-item-divider color=\"light\">\n                            <ion-label>Origen</ion-label>\n                        </ion-item-divider>\n\n                        <ion-item>\n                            <ion-label>Seleccione la proveedor</ion-label>\n                            <ion-select [value]=\"selectPro\" (ionChange)=\"cambioProveedor( $event )\">\n                                <ion-select-option *ngFor=\"let proveedor of proveedores\" value=\"{{ proveedor.nombre }}\">{{ proveedor.nombre }}</ion-select-option>\n                            </ion-select>\n                        </ion-item>\n\n                        <ion-item>\n                            <ion-input [(ngModel)]=\"productoEntrada.origenextra\" type=\"text\" placeholder=\"Otro\"></ion-input>\n                        </ion-item>\n\n\n                    </ion-list>\n\n                    <div class=\"flexbet\">\n\n\n                        <ion-button class=\"btn\" (click)=\"cancelar()\" color=\"light\" expand=\"block\" mode=\"ios\" shape=\"round\">CANCELAR</ion-button>\n\n                        <ion-button class=\"btn\" (click)=\"guardarEntrada()\" color=\"warning\" expand=\"block\" mode=\"ios\" shape=\"round\">GUARDAR</ion-button>\n                    </div>\n                </ion-card-content>\n            </ion-card>\n        </ion-slide>\n    </ion-slides>\n\n\n\n\n    <ion-slides *ngIf=\"carga && vista === 'salidas'\" #slide>\n        <ion-slide>\n            <ion-searchbar class=\"ion-text-left\" debounce=\"500\" placeholder=\"Buscar Producto por código o nombre\" mode=\"ios\" (ionChange)=\"buscar( $event )\"></ion-searchbar>\n\n            <div class=\"divider light\"></div>\n\n            <ion-list *ngIf=\"load\">\n                <ion-item *ngFor=\"let pdo of [1,1,1,1,1]\">\n\n                    <ion-skeleton-text slot=\"start\" animated style=\"width: 30px; height: 30px;\"></ion-skeleton-text>\n\n                    <ion-label>\n                        <ion-skeleton-text animated style=\"width: 100%; height: 10px;\"></ion-skeleton-text>\n\n                        <ion-skeleton-text animated style=\"width: 80%; height: 10px;\"></ion-skeleton-text>\n                    </ion-label>\n                </ion-item>\n            </ion-list>\n\n            <ion-list>\n                <ion-item *ngFor=\"let producto of productos; let i = index;\" (click)=\"validarProducto( producto , i)\">\n                    <ion-avatar slot=\"start\">\n                        <img src=\"/assets/Productos.png\">\n                    </ion-avatar>\n\n                    <ion-label>\n                        <div>{{producto.nombre}}</div>\n                        <div *ngIf=\"producto.codigo\"><strong>Código: </strong> {{producto.codigo}}</div>\n\n\n                        <div><strong>Categoria: </strong> <strong class=\"rojoi\">{{ producto.categoria }}</strong></div>\n\n                        <div class=\"flexbet\"><strong>Existencia:  <span class=\"verdei\">{{ producto.existencia }}</span></strong>\n                            <ion-chip color=\"success\" *ngIf=\"producto.existencia > producto.limote\">AL DIA</ion-chip>\n                            <ion-chip color=\"warning\" *ngIf=\"producto.existencia <= producto.limite && producto.existencia > 0\">SE ESTÁ AGOTANDO</ion-chip>\n                            <ion-chip color=\"danger\" *ngIf=\"producto.existencia === 0\">PRODUCTO AGOTADO</ion-chip>\n                        </div>\n                    </ion-label>\n                </ion-item>\n            </ion-list>\n\n            <div class=\"center\" *ngIf=\"mostrar\">\n                <h3 class=\"tituloGrande\">No existen productos relacionados con: <strong>{{ texto }}</strong></h3>\n            </div>\n        </ion-slide>\n\n        <ion-slide>\n            <ion-card mode=\"ios\">\n                <ion-card-content>\n                    <h3 class=\"tituloGrande tprod\">{{productoHistoria.nombre}}</h3>\n\n                    <ion-list>\n                        <ion-item-divider color=\"light\">\n                            <ion-label>Información del producto</ion-label>\n                        </ion-item-divider>\n                        <ion-item>\n                            <ion-input (ionChange)=\"salidaCambioProd($event, 'precio')\" [(ngModel)]=\"productoSalida.precio\" type=\"number\" placeholder=\"Precio Unitario de Venta\"></ion-input>\n                        </ion-item>\n\n                        <ion-item>\n                            <ion-input (ionChange)=\"salidaCambioProd($event, 'canti')\" [(ngModel)]=\"productoSalida.cantidad\" type=\"number\" placeholder=\"Cantidad de Productos que salen\"></ion-input>\n                        </ion-item>\n\n                        <div clss=\"ion-padding\" class=\"total \" *ngIf=\"productoSalida.total > 0 && productoSalida.total\">\n                            ${{productoSalida.total | decimales:'es-CO'}}\n                        </div>\n\n                        <ion-item-divider color=\"light\">\n                            <ion-label>Destino de Salida</ion-label> <br>\n\n                        </ion-item-divider>\n\n                        <ion-item>\n                            <ion-label>¿Mover para otro Inventario?</ion-label>\n                            <ion-select [value]=\"selectPro\" (ionChange)=\"cambioInventario( $event )\">\n                                <ion-select-option *ngFor=\"let ivt of inventarios\" value=\"{{ ivt._id }}\">{{ ivt.name }}</ion-select-option>\n                            </ion-select>\n                        </ion-item>\n\n                        <div *ngIf=\"ivtPadre\">\n                            <ion-item-divider color=\"light\">\n                                <ion-label class=\"ion-text-wrap\">¿ A que producto se le va a realizar </ion-label> <br>\n\n                            </ion-item-divider>\n                            <ion-searchbar [placeholder]=\"'Buscar producto de ' + selectPro\" debounce=\"500\" (ionChange)=\"productoHijo( $event )\"></ion-searchbar>\n\n                            <ion-radio-group (ionChange)=\"prodDestino( $event )\">\n                                <ion-item *ngFor=\"let producto of productosHijos; let i = index;\">\n                                    <ion-avatar slot=\"start\">\n                                        <img src=\"/assets/Productos.png\">\n                                    </ion-avatar>\n\n                                    <ion-label>\n                                        <div>{{producto.nombre}}</div>\n                                        <div *ngIf=\"producto.codigo\"><strong>Código: </strong> {{producto.codigo}}</div>\n\n\n                                        <div><strong>Categoria: </strong> <strong class=\"rojoi\">{{ producto.categoria }}</strong></div>\n\n                                        <div class=\"flexbet\"><strong>Existencia:  <span class=\"verdei\">{{ producto.existencia }}</span></strong>\n                                            <ion-chip color=\"success\" *ngIf=\"producto.existencia > producto.limote\">AL DIA</ion-chip>\n                                            <ion-chip color=\"warning\" *ngIf=\"producto.existencia <= producto.limite && producto.existencia > 0\">SE ESTÁ AGOTANDO</ion-chip>\n                                            <ion-chip color=\"danger\" *ngIf=\"producto.existencia === 0\">PRODUCTO AGOTADO</ion-chip>\n                                        </div>\n                                    </ion-label>\n                                    <ion-radio value=\"{{producto._id}}\"></ion-radio>\n                                </ion-item>\n                            </ion-radio-group>\n                        </div>\n\n\n                        <ion-item *ngIf=\"!ivtPadre\">\n                            <ion-input [(ngModel)]=\"productoSalida.destino\" type=\"text\" placeholder=\"Nombre del cliente (opcional)\"></ion-input>\n                        </ion-item>\n\n\n                    </ion-list>\n\n                    <div class=\"flexbet\">\n\n\n                        <ion-button class=\"btn\" (click)=\"cancelar()\" color=\"light\" expand=\"block\" mode=\"ios\" shape=\"round\">CANCELAR</ion-button>\n\n                        <ion-button class=\"btn\" (click)=\"guardarSalida()\" color=\"warning\" expand=\"block\" mode=\"ios\" shape=\"round\">GUARDAR</ion-button>\n                    </div>\n                </ion-card-content>\n            </ion-card>\n        </ion-slide>\n    </ion-slides>\n\n</ion-content>","import { Component, OnInit, Input, ViewChild } from '@angular/core';\nimport { ModalController, IonSlides, IonSlide } from '@ionic/angular';\nimport { InventariosService } from '../../../providers/Api/Inventarios.service';\nimport { InicioService } from '../../../providers/Almacenamiento/inicio.service';\nimport { ToastServices } from '../../../providers/Utilidades/ToastService.service';\nimport { Socket } from 'ngx-socket-io';\n\n@Component({\n  selector: 'app-ivt-modal',\n  templateUrl: './ivt-modal.page.html',\n  styleUrls: ['./ivt-modal.page.scss'],\n})\nexport class IvtModalPage implements OnInit {\n  @Input() tipo;\n  @Input() inventario;\n  @Input() producto;\n  @Input() creador;\n  @Input() accesos;\n  \n  color = '';\n  vista = '';\n  titulo = '';\n\n  ivt = {\n    simple: false,\n    avanzado: false\n  };\n\n  ivtTipo = '';\n  nombre = 'Mi inventario';\n  \n  nombrep = '';\n  tel1 = '';\n  tel2 = '';\n  correo = '';\n\n  nombrec = '';\n\n  load = false;\n\n  categorias = [];\n  proveedores = [];\n\n  nombrepd = '';\n  codigopd = '';\n  limite = 0;\n\n  selectCat = '';\n  selectPro = '';\n\n  // Movimientos\n\n  productos = [];\n  texto = '';\n  mostrar = false;\n\n  carga;\n\n  productoHistoria: any = {};\n\n  productoEntrada = {\n    producto: '',\n    cantidad: undefined,\n    precio: undefined,\n    origen: '',\n    origenextra: '',\n    total: 0,\n    ivt: '',\n    mensaje: '',\n    nombre: '',\n    codigo: ''\n  };\n\n\n\n  productoSalida = {\n    producto: '',\n    cantidad: undefined,\n    precio: undefined,\n    destino: '',\n    destinoivt: '',\n    prodDestino: '',\n    total: 0,\n    ivt: '',\n    mensaje: '',\n    nombre: '',\n    codigo: '',\n    mensaje2: '',\n    creador: '',\n    producto2: '',\n    nombre2: '',\n    codigo2: ''\n  }\n\n\n  ivtPadre = false;\n\n  inventarios = [];\n  productosHijos = [];\n  ivtSelect = '';\n\n  @ViewChild('slide',\n  {static: false}) slide: IonSlides;\n\n\n  constructor(\n    private modalCtrl: ModalController,\n    private ivtApi: InventariosService,\n    private almacenamiento: InicioService,\n    private toast: ToastServices,\n    private socket: Socket\n  ) { }\n\n  ngOnInit() {\n  }\n\n  ionViewDidEnter() {\n    this.entrada();\n  }\n\n  async entrada() {\n    if (this.tipo === 'crear') {\n      this.vista = 'crear';\n      this.titulo = 'Creando Inventario';\n      this.color = 'barra'\n    } else if (this.tipo === 'proveedores') {\n      this.vista = 'proveedores';\n      this.titulo = 'Creando Proveedor';\n    } else if (this.tipo === 'categorias') {\n      this.vista = 'categorias';\n      this.titulo = 'Creando Categoría';\n    } else if (this.tipo === 'productos') {\n      this.vista = 'productos';\n      this.titulo = 'Creando Producto';\n      await this.cargarCategorias();\n      await this.cargarProveedores();\n    } else if (this.tipo === 'editarproductos') {\n      this.vista = 'editarproductos';\n      this.titulo = 'Editar Producto';\n      this.nombrepd = this.producto.nombre;\n      this.codigopd = this.producto.codigo;\n      this.limite = this.producto.limite;\n      console.log(this.producto)\n      await this.cargarCategorias();\n      await this.cargarProveedores();\n\n      this.selectCat = this.producto.categoria;\n      this.selectPro = this.producto.proveedor;\n    } else if (this.tipo === 'entradas') {\n      \n      this.vista = 'entradas';\n      this.color = 'success';\n      this.titulo = 'Registrar Nueva Entrada';\n      this.productoEntrada.ivt = this.inventario;\n      \n      this.cargarProveedores()\n      this.cargarInventario()\n     \n    } else if (this.tipo === 'salidas') {\n      \n      this.vista = 'salidas';\n      this.color = 'success';\n      this.titulo = 'Registrar Nueva Salida';\n      this.productoSalida.ivt = this.inventario;\n      \n      this.cargarInventarios()\n     \n    }\n  }\n\n  async cargarInventarios() {\n      this.load = true;\n      const info = await this.almacenamiento.obtenerToken();\n\n      if ( info ) {\n        this.carga = true;\n        this.ivtApi.CargarInventarios(info.token, {creador: this.creador}).subscribe(async (data: any) => {\n         \n          console.log(data, this.creador);\n          if (data.exe) {\n            await this.slide.lockSwipes(true);\n            data.response.forEach((ivt) => {\n                if (ivt._id !== this.inventario) {\n                  this.inventarios.push(ivt);\n                } else {\n                  this.accesos = ivt.accesos;\n                }\n            })\n          } else {\n            this.toast.toastError('No se traer la lista de inventarios, intentelo más tarde');\n          }\n          this.load = false;\n        }, (err) => {\n          this.toast.toastError('No se pudo crear el inventario, intentelo más tarde');\n          this.load = false;\n        })\n      }\n  }\n\n\n\n  async cargarInventario() {\n    this.load = true;\n    const info = await this.almacenamiento.obtenerToken();\n\n    if ( info ) {\n      this.carga = true;\n      this.ivtApi.leerInventario(info.token, this.inventario).subscribe(async (data: any) => {\n       \n        if (data.exe) {\n          this.accesos = data.accesos;\n        } else {\n          this.toast.toastError('No se pudo traer el inventario, intentelo más tarde');\n        }\n        this.load = false;\n      }, (err) => {\n        this.toast.toastError('No se pudo traer el inventario, intentelo más tarde');\n        this.load = false;\n      })\n    }\n}\n\n  // Crear\n\n\n\n  async crear() {\n    this.load = true;\n    const info: any = await this.almacenamiento.obtenerToken();\n\n    if ( info && this.tipo !== '' ) {\n        this.ivtApi.crearInventario(info.token, {tipo: 'simple', nombre: this.nombre}).subscribe((data: any) => {\n          if (data.exe) {\n\n            this.toast.toastExitoso('Inventario creado!');\n          } else {\n            this.toast.toastError('No se pudo crear el inventario, intentelo más tarde');\n          }\n          this.load = false;\n          this.modalCtrl.dismiss({\n            exe: true\n          })\n        }, (err) => {\n          this.toast.toastError('No se pudo crear el inventario, intentelo más tarde');\n          this.load = false;\n        })\n    }\n\n  }\n\n  async crearProveedor() {\n    this.load = true;\n    const info: any = await this.almacenamiento.obtenerToken();\n\n    if ( info && this.tipo !== '' ) {\n        // tslint:disable-next-line:max-line-length\n        this.ivtApi.crearProveedor(info.token, {nombre: this.nombrep, tel1: this.tel1, tel2: this.tel2, correo: this.correo, ivt: this.inventario}).subscribe((data: any) => {\n          if (data.exe) {\n\n            this.toast.toastExitoso('Proveedor creado!');\n          } else {\n            this.toast.toastError('No se pudo crear el proveedor, intentelo más tarde');\n          }\n          this.load = false;\n          this.modalCtrl.dismiss({\n            exe: true\n          })\n        }, (err) => {\n          this.toast.toastError('No se pudo crear el proveedor, intentelo más tarde');\n          this.load = false;\n        })\n    }\n\n  }\n\n\n  async crearCategoria() {\n    this.load = true;\n    const info: any = await this.almacenamiento.obtenerToken();\n\n    if ( info && this.tipo !== '' ) {\n        // tslint:disable-next-line:max-line-length\n        this.ivtApi.crearCategoria(info.token, {nombre: this.nombrec, ivt: this.inventario}).subscribe((data: any) => {\n          if (data.exe) {\n\n            this.toast.toastExitoso('Categoría creado!');\n          } else {\n            this.toast.toastError('No se pudo crear la categoría, intentelo más tarde');\n          }\n          this.load = false;\n          this.modalCtrl.dismiss({\n            exe: true\n          })\n        }, (err) => {\n          this.toast.toastError('No se pudo crear la categoría, intentelo más tarde');\n          this.load = false;\n        })\n    }\n\n  }\n\n  async crearProducto() {\n    this.load = true;\n    const info: any = await this.almacenamiento.obtenerToken();\n\n    if ( info && this.tipo !== '' ) {\n        // tslint:disable-next-line:max-line-length\n        this.ivtApi.crearProducto(info.token, {nombre: this.nombrepd.trim(), codigo: this.codigopd.trim(), categoria: this.selectCat, proveedor: this.selectPro, inventario: this.inventario, limite: this.limite}).subscribe((data: any) => {\n          if (data.exe) {\n\n            this.toast.toastExitoso('Producto creado!');\n            this.modalCtrl.dismiss({exe: true});\n          } else {\n            this.toast.toastError('No se pudo crear el producto, inténtelo más tarde');\n          }\n          this.load = false;\n          this.modalCtrl.dismiss({\n            exe: true\n          })\n        }, (err) => {\n          this.toast.toastError('No se pudo crear el producto, intentelo más tarde');\n          this.load = false;\n        })\n    }\n\n  }\n\n\n  async editarProducto() {\n    this.load = true;\n    const info: any = await this.almacenamiento.obtenerToken();\n\n    if ( info && this.tipo !== '' ) {\n        // tslint:disable-next-line:max-line-length\n        this.ivtApi.editarProducto(info.token, {nombre: this.nombrepd.trim(), codigo: this.codigopd.trim(), categoria: this.selectCat, proveedor: this.selectPro, _id: this.producto._id, limite: this.limite}).subscribe((data: any) => {\n          if (data.exe) {\n\n            this.toast.toastExitoso('Producto editado!');\n          } else {\n            this.toast.toastError('No se pudo editar el producto, inténtelo más tarde');\n          }\n          this.load = false;\n          this.modalCtrl.dismiss({\n            exe: true\n          })\n        }, (err) => {\n          this.toast.toastError('No se pudo editar el producto, intentelo más tarde');\n          this.load = false;\n        })\n    }\n\n  }\n\n  cambioCategoria(event) {\n      this.selectCat = event.detail.value;\n  }\n\n  cambioProveedor(event) {\n    this.selectPro = event.detail.value;\n    this.productoEntrada.origen = event.detail.value;\n}\n\n  async cambioInventario(event) {\n      // this.selectPro = event.detail.value.name;\n      this.productoSalida.destinoivt = event.detail.value;\n      this.ivtSelect = event.detail.value;\n      this.ivtPadre = true;\n    }\n\n  async cargarCategorias() {\n    const info = await this.almacenamiento.obtenerToken();\n\n    if ( info ) {\n      this.ivtApi.leerCategoria(info.token, this.inventario).subscribe((data: any) => {\n        if (data.exe) {\n            this.categorias = data.response;\n        } else {\n          this.toast.toastError('No se pudo cargar los datos, intentelo más tarde');\n        }\n      }, (err) => {\n          this.toast.toastError('No se pudo cargar los datos, intentelo más tarde');\n      })\n    }\n}\n\n\nasync cargarProveedores() {\n\n  const info = await this.almacenamiento.obtenerToken();\n\n  if ( info ) {\n      this.carga = true;\n      this.ivtApi.leerProveedor(info.token, this.inventario).subscribe((data: any) => {\n        if (data.exe) {\n            \n            if (this.vista === 'entradas') {\n              this.slide.lockSwipes(true).then(() => {\n\n              }).catch(() => {\n                console.log('Error')\n              })\n            }\n            this.proveedores = data.response;\n        } else {\n          this.toast.toastError('No se pudo cargar los datos, intentelo más tarde');\n        }\n      }, (err) => {\n          this.toast.toastError('No se pudo cargar los datos, intentelo más tarde');\n      })\n    \n  }\n\n}\n\n\n  async buscar( event ) {\n    this.load = true;\n    this.texto = event.detail.value;\n    const info: any = await this.almacenamiento.obtenerToken();\n\n    if ( info && this.tipo !== '' && event.detail.value !== '' ) {\n        this.ivtApi.buscarProducto(info.token, {_id: this.inventario, patron: event.detail.value}).subscribe((data: any) => {\n          console.log(data)\n          if (data.exe) {\n            this.productos = data.response;\n            if ( data.response.length === 0 ) {\n              this.mostrar = true;\n            } else {\n              this.mostrar = false;\n            }\n          } else {\n            this.toast.toastError('No se pudo consultar los productos, intentelo más tarde');\n          }\n          this.load = false;\n        }, (err) => {\n          this.toast.toastError('No se pudo consultar los productos, intentelo más tarde');\n          this.load = false;\n        })\n    } else {\n      this.load = false;\n      this.productos = [];\n    }\n  }\n\n  async validarProducto(producto, i) {\n     await this.slide.lockSwipes(false);\n     await this.slide.slideNext(300);\n     await this.slide.lockSwipes(true);\n     this.productoHistoria = producto;\n     this.productoEntrada.producto = this.productoHistoria._id;\n     this.productoSalida.producto = this.productoHistoria._id;\n  }\n\n\n  async cancelar() {\n    await this.slide.lockSwipes(false);\n    await this.slide.slidePrev(300);\n    await this.slide.lockSwipes(true);\n\n    this.productoHistoria = '';\n    this.productoEntrada = {\n      producto: '',\n      cantidad: undefined,\n      precio: undefined,\n      origen: '',\n      origenextra: '',\n      total: 0,\n      ivt: '',\n      mensaje: '',\n      nombre: '',\n      codigo: ''\n    };\n  \n    this.productoSalida = {\n      producto: '',\n      cantidad: undefined,\n      precio: undefined,\n      destino: '',\n      destinoivt: '',\n      prodDestino: '',\n      total: 0,\n      ivt: '',\n      mensaje: '',\n      nombre: '',\n      codigo: '',\n      mensaje2: '',\n      creador: '',\n      producto2: '',\n      nombre2: '',\n      codigo2: ''\n    }\n  \n\n    this.ivtPadre = false;\n    this.ivtSelect = '';\n    this.selectPro = '';\n    \n }\n\n  entradaCambioProd(event, tipo) {\n    if ( tipo === 'precio') {\n        this.productoEntrada.precio = event.detail.value;\n    } else if ( tipo === 'canti') {\n        this.productoEntrada.cantidad = event.detail.value;\n    }\n\n    this.productoEntrada.total = this.productoEntrada.precio * this.productoEntrada.cantidad;\n  }\n\n  salidaCambioProd(event, tipo) {\n    if ( tipo === 'precio') {\n        this.productoSalida.precio = event.detail.value;\n    } else if ( tipo === 'canti') {\n        this.productoSalida.cantidad = event.detail.value;\n    }\n\n    this.productoSalida.total = this.productoSalida.precio * this.productoSalida.cantidad;\n  }\n\n  async productoHijo(event) {\n     if (event.detail.value !== '') {\n      const info = await this.almacenamiento.obtenerToken();\n\n      if ( info ) {\n        this.ivtApi.leerProductosPorInventario(info.token, {id: this.ivtSelect, patron: event.detail.value}).subscribe((data: any) => {\n          console.log(data)\n          if (data.exe) {\n            \n            this.productosHijos = data.response;\n          } else {\n            this.toast.toastError('No se pudo traer los productos del inventario destino, intentelo más tarde');\n          }\n      }, (err) => {\n        this.toast.toastError('No se pudo traer los productos del inventario destino, intentelo más tarde');\n      })\n      }\n     } else {\n       this.productoSalida.prodDestino = '';\n     }\n  }\n\n  prodDestino( event ) {\n    console.log(event);\n    const info = this.productosHijos.filter((prod) => prod._id === event.detail.value);\n    this.productoSalida.prodDestino = event.detail.value;\n    this.productoSalida.producto2 = info[0]._id;\n    this.productoSalida.nombre2 = info[0].nombre;\n    this.productoSalida.codigo2 = info[0].codigo;\n  }\n\n\n  async guardarEntrada() {\n      if (this.productoEntrada.cantidad === 0 || !this.productoEntrada.cantidad || this.productoEntrada.precio === 0 || !this.productoEntrada.precio) {\n        this.toast.toastError('Verifique que la cantidad o precio de venta esten diligenciados');\n      } else {\n        const info = await this.almacenamiento.obtenerToken();\n\n        if ( info ) {\n        this.productoEntrada.nombre = this.productoHistoria.nombre;\n        this.productoEntrada.codigo = this.productoHistoria.codigo;\n        this.productoEntrada.mensaje =` Nueva entrada del producto ${this.productoEntrada.nombre} por una cantidad de ${this.productoEntrada.cantidad}. Creado por ${info.nombre}`;\n        this.ivtApi.crearEntrada(info.token, this.productoEntrada).subscribe((data: any) => {\n          console.log(data);\n          if (data.exe) {\n            this.socket.emit('eventoIVT', {\n              mensaje: `Nueva entrada del producto ${this.productoEntrada.nombre} por una cantidad de ${this.productoEntrada.cantidad}. Creado por ${info.nombre}`,\n              usuarios: this.accesos,\n              id: this.inventario,\n              tipo: 'entrada'\n            })\n            this.toast.toastExitoso('Entrada creada con éxito!');\n          } else {\n            this.toast.toastError('No se pudo crear la entrada, intentelo más tarde');\n          }\n          this.modalCtrl.dismiss({\n            exe: true\n          })\n        }, (err) => {\n            this.toast.toastError('No se pudo crear la entrada, intentelo más tarde');\n        })\n      }\n      }\n  }\n\n\n  async guardarSalida() {\n    console.log(this.productoHistoria);\n    if (this.productoSalida.cantidad === 0 || !this.productoSalida.cantidad || this.productoSalida.precio === 0 || !this.productoSalida.precio) {\n      this.toast.toastError('Verifique que la cantidad o precio de venta esten diligenciados');\n    } else if (this.productoSalida.cantidad > this.productoHistoria.existencia) {\n      // tslint:disable-next-line:max-line-length\n      this.toast.toastError(`Solo quedan ${this.productoHistoria.existencia} ${this.productoHistoria.nombre} en inventario, no puede sacar más de esa cantidad`);\n    } else if (this.ivtSelect !== '' && this.productoSalida.prodDestino === '') {\n      // tslint:disable-next-line:max-line-length\n      this.toast.toastError(`Debe de seleccionar el producto al cual se le va agregar la cantidad despachada`);\n    } else {\n\n    const info = await this.almacenamiento.obtenerToken();\n\n    if ( info ) {\n      this.productoSalida.creador = this.creador;\n      this.productoSalida.nombre = this.productoHistoria.nombre;\n      this.productoSalida.codigo = this.productoHistoria.codigo;\n      // tslint:disable-next-line:max-line-length\n      this.productoSalida.mensaje = `Nueva Salida del producto ${this.productoSalida.nombre} por una cantidad de ${this.productoSalida.cantidad}. Creado por ${info.nombre}`;\n\n      if ( this.productoSalida.prodDestino !== '' && this.productoSalida.destinoivt !== '') {\n        // tslint:disable-next-line:max-line-length\n        this.productoSalida.mensaje2 = `Nueva Entrada del producto ${this.productoSalida.nombre} por una cantidad de ${this.productoSalida.cantidad}. Creado por ${info.nombre}`;\n      }\n      this.ivtApi.crearSalida(info.token, this.productoSalida).subscribe((data: any) => {\n        console.log(data);\n\n        if (data.exe) {\n          this.socket.emit('eventoIVT', {\n            // tslint:disable-next-line:max-line-length\n            mensaje: `Nueva Salida del producto ${this.productoSalida.nombre} por una cantidad de ${this.productoSalida.cantidad}. Creado por ${info.nombre}`,\n            usuarios: this.accesos,\n            creador: this.creador,\n            id: this.inventario,\n            tipo: 'salida'\n          })\n          this.toast.toastExitoso('Salida creada con éxito!');\n          this.cancelar();\n        } else {\n          this.toast.toastError('No se pudo crear la salida, intentelo más tarde');\n        }\n        this.modalCtrl.dismiss({\n          exe: true\n        })\n      }, (err) => {\n          this.toast.toastError('No se pudo crear la salida, intentelo más tarde');\n      })\n    }\n  }\n}\n\n\n  cerrar(){\n    this.modalCtrl.dismiss({})\n  }\n\n \n\n}\n"]}