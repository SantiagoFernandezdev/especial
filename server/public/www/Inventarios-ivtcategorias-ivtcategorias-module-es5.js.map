{"version":3,"sources":["webpack:///src/app/pages/Inventarios/ivtcategorias/ivtcategorias-routing.module.ts","webpack:///src/app/pages/Inventarios/ivtcategorias/ivtcategorias.module.ts","webpack:///src/app/pages/Inventarios/ivtcategorias/ivtcategorias.page.html","webpack:///src/app/pages/Inventarios/ivtcategorias/ivtcategorias.page.ts","webpack:///src/app/pipes/numeros/decimales.pipe.ts"],"names":["routes","path","component","IVTcategoriasPageRoutingModule","forChild","imports","exports","IVTcategoriasPageModule","declarations","IVTcategoriasPage","modalCtrl","almacenamiento","ivtApi","toast","alertCtrl","activeRoute","categorias","load","cargarCategorias","event","then","target","complete","catch","obtenerToken","info","leerCategoria","token","snapshot","paramMap","get","subscribe","data","exe","response","toastError","err","create","componentProps","tipo","inventario","modal","present","onWillDismiss","cerrado","categoria","i","header","inputs","type","name","placeholder","value","nombre","buttons","text","role","handler","editarCategoria","_id","res","toastExitoso","alert","eliminarCategoria","splice","refrescando","selector","templateUrl","styleUrls","DecimalesPipe","locale","Intl","NumberFormat","minimumFractionDigits","format"],"mappings":"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","file":"Inventarios-ivtcategorias-ivtcategorias-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IVTcategoriasPage } from './ivtcategorias.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: IVTcategoriasPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class IVTcategoriasPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { IVTcategoriasPageRoutingModule } from './ivtcategorias-routing.module';\n\nimport { IVTcategoriasPage } from './ivtcategorias.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    IVTcategoriasPageRoutingModule\n  ],\n  declarations: [IVTcategoriasPage]\n})\nexport class IVTcategoriasPageModule {}\n","<ion-header class=\"ion-no-border\">\n    <ion-toolbar color=\"success\">\n\n        <ion-buttons slot=\"start\">\n            <ion-back-button icon=\"chevron-back-outline\" defaultHref=\"/central/menu/ivt-inicio\"></ion-back-button>\n        </ion-buttons>\n\n        <ion-title>Categorías</ion-title>\n    </ion-toolbar>\n</ion-header>\n\n<ion-content>\n\n    <ion-refresher slot=\"fixed\" (ionRefresh)=\"refrescando($event)\" pullFactor=\"0.5\" pullMin=\"50\" pullMax=\"150\">\n        <ion-refresher-content pullingIcon=\"arrow-dropdown\" refreshingSpinner=\"circles\">\n        </ion-refresher-content>\n    </ion-refresher>\n\n    <ion-searchbar mode=\"ios\" placeholder=\"Buscar Categoría\"></ion-searchbar>\n\n\n\n    <div class=\"divider light\"></div>\n\n    <div class=\"divider\"></div>\n\n    <div class=\"cen\" *ngIf=\"categorias.length === 0\">\n        <img src=\"/assets/Categorias.png\" width=\"100px\" alt=\"\">\n        <h3 class=\"tituloGrande\">No tiene categorías registradas</h3>\n    </div>\n\n    <div class=\"carga\" *ngIf=\"load\">\n        <ion-list>\n            <ion-item *ngFor=\"let e of [1,1,1,1,1]\">\n                <ion-skeleton-text slot=\"start\" animated style=\"width: 50px; height: 50px\"></ion-skeleton-text>\n                <ion-label>\n                    <ion-skeleton-text animated style=\"width: 50%; height: 20px\"></ion-skeleton-text>\n                    <ion-skeleton-text animated style=\"width: 90%; height: 20px\"></ion-skeleton-text>\n                </ion-label>\n            </ion-item>\n        </ion-list>\n\n    </div>\n\n\n    <ion-list *ngIf=\"categorias.length > 0\">\n\n        <ion-item-sliding *ngFor=\"let categoria of categorias; let i = index\">\n            <ion-item>\n                <ion-avatar slot=\"start\">\n                    <img src=\"/assets/Categorias.png\">\n                </ion-avatar>\n\n                <ion-label>\n                    {{categoria.nombre}} <br>\n                </ion-label>\n            </ion-item>\n\n            <ion-item-options side=\"end\">\n                <ion-item-option color=\"warning\" (click)=\"editar( categoria, i )\">\n                    <ion-icon name=\"pencil-outline\" slot=\"icon-only\"></ion-icon>\n                </ion-item-option>\n\n                <ion-item-option color=\"danger\" (click)=\"eliminar( categoria, i )\">\n                    <ion-icon name=\"trash-outline\" slot=\"icon-only\"></ion-icon>\n                </ion-item-option>\n            </ion-item-options>\n        </ion-item-sliding>\n    </ion-list>\n\n    <ion-fab vertical=\"bottom\" horizontal=\"end\" slot=\"fixed\">\n        <ion-fab-button color=\"success\" (click)=\"modal()\">\n            <ion-icon name=\"add-outline\"></ion-icon>\n        </ion-fab-button>\n    </ion-fab>\n</ion-content>","import { Component, OnInit } from '@angular/core';\nimport { InicioService } from '../../../providers/Almacenamiento/inicio.service';\nimport { ModalController, AlertController } from '@ionic/angular';\nimport { InventariosService } from 'src/app/providers/Api/Inventarios.service';\nimport { ToastServices } from 'src/app/providers/Utilidades/ToastService.service';\nimport { IvtModalPage } from '../ivt-modal/ivt-modal.page';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-ivtcategorias',\n  templateUrl: './ivtcategorias.page.html',\n  styleUrls: ['./ivtcategorias.page.scss'],\n})\nexport class IVTcategoriasPage implements OnInit {\n\n  categorias = [];\n  load = false;\n\n  constructor(\n    private modalCtrl: ModalController,\n    private almacenamiento: InicioService,\n    private ivtApi: InventariosService,\n    private toast: ToastServices,\n    private alertCtrl: AlertController,\n    private activeRoute: ActivatedRoute\n  ) { }\n\n  ngOnInit() {\n  }\n\n  ionViewWillEnter() {\n    this.cargarCategorias();\n  }\n\n  refrescando( event ) {\n    this.cargarCategorias().then(() => {\n      event.target.complete()\n    }).catch(() => event.target.complete())\n  }\n\n  async cargarCategorias() {\n      const info = await this.almacenamiento.obtenerToken();\n\n      if ( info ) {\n        this.ivtApi.leerCategoria(info.token, this.activeRoute.snapshot.paramMap.get('id')).subscribe((data: any) => {\n          if (data.exe) {\n              this.categorias = data.response;\n          } else {\n            this.toast.toastError('No se pudo cargar los datos, intentelo más tarde');\n          }\n        }, (err) => {\n            this.toast.toastError('No se pudo cargar los datos, intentelo más tarde');\n        })\n      }\n  }\n\n  async modal() {\n    const modal = await this.modalCtrl.create({\n      component: IvtModalPage,\n      componentProps: {\n        tipo: 'categorias',\n        inventario: this.activeRoute.snapshot.paramMap.get('id')\n      },\n    })\n\n    await modal.present();\n\n    const cerrado = await modal.onWillDismiss();\n\n    if (cerrado.data) {\n      if (cerrado.data.exe) {\n        this.cargarCategorias();\n      }\n    }\n\n  }\n\n  async editar ( categoria: any, i ) {\n      const alert = await this.alertCtrl.create({\n        header: 'Editar Categoría',\n        inputs: [\n          {\n            type: 'text',\n            name: 'nombre',\n            placeholder: 'Escriba el nombre de la categoría',\n            value: categoria.nombre\n          }\n        ],\n        buttons: [\n          {\n            text: 'Cancelar',\n            role: 'cancel'\n          },\n          {\n            text: 'Aceptar',\n            handler: async (data) => {\n                const info = await this.almacenamiento.obtenerToken();\n\n                if ( info ) {\n                  // tslint:disable-next-line:max-line-length\n                  this.ivtApi.editarCategoria(info.token, {nombre: data.nombre, _id: categoria._id}).subscribe((res: any) => {\n                      \n                      if ( res.exe ) {\n                        this.toast.toastExitoso('Categoría editado!');\n                        this.categorias[i].nombre = res.response.nombre;\n                      } else {\n                        this.toast.toastError('No se pudo editar la categoría, intentelo más tarde');\n                      }\n                  }, (err) => {\n                    this.toast.toastError('No se pudo editar la categoría, intentelo más tarde');\n                  })\n                }\n            }\n          }\n        ]\n      })\n\n      await alert.present();\n\n     \n  }\n\n  async eliminar ( categoria: any, i ) {\n    const info = await this.almacenamiento.obtenerToken();\n\n    if ( info ) {\n      // tslint:disable-next-line:max-line-length\n      this.ivtApi.eliminarCategoria(info.token, categoria._id).subscribe((res: any) => {\n          \n          if ( res.exe ) {\n            this.toast.toastExitoso('Categoría eliminada!');\n            this.categorias.splice(i, 1);\n          } else {\n            this.toast.toastError('No se pudo eliminar la categoría, intentelo más tarde');\n          }\n      }, (err) => {\n        this.toast.toastError('No se pudo eliminar la categoría, intentelo más tarde');\n      })\n    }\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'decimales'\n})\nexport class DecimalesPipe implements PipeTransform {\n\n  transform(value: number, locale: string): any {\n    if (value === 0) {\n      return 0\n    } else {\n      return new Intl.NumberFormat(locale, {\n        minimumFractionDigits: 1\n      }).format(value);\n    }\n  }\n\n}\n"]}