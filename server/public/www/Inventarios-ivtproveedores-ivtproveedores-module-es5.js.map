{"version":3,"sources":["webpack:///src/app/pages/Inventarios/ivtproveedores/ivtproveedores-routing.module.ts","webpack:///src/app/pages/Inventarios/ivtproveedores/ivtproveedores.module.ts","webpack:///src/app/pages/Inventarios/ivtproveedores/ivtproveedores.page.html","webpack:///src/app/pages/Inventarios/ivtproveedores/ivtproveedores.page.ts"],"names":["routes","path","component","IVTProveedoresPageRoutingModule","forChild","imports","exports","IVTProveedoresPageModule","entryComponents","declarations","IVTProveedoresPage","modalCtrl","almacenamiento","ivtApi","toast","alertCtrl","activeRoute","proveedores","load","cargarProveedores","event","then","target","complete","catch","obtenerToken","info","leerProveedor","token","snapshot","paramMap","get","subscribe","data","exe","response","toastError","err","create","componentProps","tipo","inventario","modal","present","onWillDismiss","cerrado","proveedor","i","header","inputs","type","name","placeholder","value","nombre","telefono","telefono2","correo","buttons","text","role","handler","editarProveedor","tel1","tel2","_id","res","toastExitoso","alert","eliminarProveedor","splice","refrescando","transform","opacity","selector","templateUrl","styleUrls","animations"],"mappings":"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","file":"Inventarios-ivtproveedores-ivtproveedores-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IVTProveedoresPage } from './ivtproveedores.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: IVTProveedoresPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class IVTProveedoresPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { IVTProveedoresPageRoutingModule } from './ivtproveedores-routing.module';\n\nimport { IVTProveedoresPage } from './ivtproveedores.page';\nimport { IvtModalPage } from '../ivt-modal/ivt-modal.page';\nimport { IvtModalPageModule } from '../ivt-modal/ivt-modal.module';\n\n@NgModule({\n  entryComponents: [\n      IvtModalPage\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    IVTProveedoresPageRoutingModule,\n    IvtModalPageModule\n  ],\n  declarations: [IVTProveedoresPage]\n})\nexport class IVTProveedoresPageModule {}\n","<ion-header class=\"ion-no-border\">\n    <ion-toolbar color=\"success\">\n\n        <ion-buttons slot=\"start\">\n            <ion-back-button icon=\"chevron-back-outline\" defaultHref=\"/central/menu/ivt-inicio\"></ion-back-button>\n        </ion-buttons>\n\n        <ion-title>Proveedores</ion-title>\n    </ion-toolbar>\n</ion-header>\n\n<ion-content>\n\n    <ion-refresher slot=\"fixed\" (ionRefresh)=\"refrescando($event)\" pullFactor=\"0.5\" pullMin=\"50\" pullMax=\"150\">\n        <ion-refresher-content pullingIcon=\"arrow-dropdown\" refreshingSpinner=\"circles\">\n        </ion-refresher-content>\n    </ion-refresher>\n\n    <ion-searchbar mode=\"ios\" placeholder=\"Buscar Proveedor\"></ion-searchbar>\n\n\n\n    <div class=\"divider light\"></div>\n\n    <div class=\"divider\"></div>\n\n    <div class=\"cen\" *ngIf=\"proveedores.length === 0\">\n        <img src=\"/assets/Proveedores.png\" width=\"100px\" alt=\"\">\n        <h3 class=\"tituloGrande\">No tiene proveedores registrados</h3>\n    </div>\n\n    <div class=\"carga\" *ngIf=\"load\">\n        <ion-list>\n            <ion-item *ngFor=\"let e of [1,1,1,1,1]\">\n                <ion-skeleton-text slot=\"start\" animated style=\"width: 50px; height: 50px\"></ion-skeleton-text>\n                <ion-label>\n                    <ion-skeleton-text animated style=\"width: 50%; height: 20px\"></ion-skeleton-text>\n                    <ion-skeleton-text animated style=\"width: 90%; height: 20px\"></ion-skeleton-text>\n                </ion-label>\n            </ion-item>\n        </ion-list>\n\n    </div>\n\n\n    <ion-list *ngIf=\"proveedores.length > 0\">\n\n        <ion-item-sliding @salida *ngFor=\"let proveedor of proveedores; let i = index\">\n            <ion-item>\n                <ion-avatar slot=\"start\">\n                    <img src=\"/assets/Proveedores.png\">\n                </ion-avatar>\n\n                <ion-label>\n                    {{proveedor.nombre}} <br>\n                    <strong class=\"verdei\">{{proveedor.telefono}} </strong>\n                    <strong *ngIf=\"proveedor.telefono2 !== ''\" class=\"verdei\"> - {{proveedor.telefono2}} </strong> <br>\n                    <div class=\"rojoi\">{{ proveedor.correo }}</div>\n                </ion-label>\n            </ion-item>\n\n            <ion-item-options side=\"end\">\n                <ion-item-option color=\"warning\" (click)=\"editar( proveedor, i )\">\n                    <ion-icon name=\"pencil-outline\" slot=\"icon-only\"></ion-icon>\n                </ion-item-option>\n\n                <ion-item-option color=\"danger\" (click)=\"eliminar( proveedor, i )\">\n                    <ion-icon name=\"trash-outline\" slot=\"icon-only\"></ion-icon>\n                </ion-item-option>\n            </ion-item-options>\n        </ion-item-sliding>\n    </ion-list>\n\n    <ion-fab vertical=\"bottom\" horizontal=\"end\" slot=\"fixed\">\n        <ion-fab-button color=\"success\" (click)=\"modal()\">\n            <ion-icon name=\"add-outline\"></ion-icon>\n        </ion-fab-button>\n    </ion-fab>\n\n</ion-content>","import { Component, OnInit } from '@angular/core';\nimport { ModalController, AlertController } from '@ionic/angular';\nimport { InicioService } from '../../../providers/Almacenamiento/inicio.service';\nimport { InventariosService } from '../../../providers/Api/Inventarios.service';\nimport { IvtModalPage } from '../ivt-modal/ivt-modal.page';\nimport { ToastServices } from '../../../providers/Utilidades/ToastService.service';\nimport { trigger, transition, style, animate } from '@angular/animations';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-ivtproveedores',\n  templateUrl: './ivtproveedores.page.html',\n  styleUrls: ['./ivtproveedores.page.scss'],\n  animations: [\n    trigger('salida', [\n      transition(':leave', [\n        style({\n          transform: 'scale(1)',\n          opacity: 1\n        }),\n        animate('300ms', style({\n          transform: 'scale(0)',\n          opacity: 0\n        }))\n      ])\n    ])\n  ]\n})\nexport class IVTProveedoresPage implements OnInit {\n\n  proveedores = [];\n  load = false;\n\n  constructor(\n    private modalCtrl: ModalController,\n    private almacenamiento: InicioService,\n    private ivtApi: InventariosService,\n    private toast: ToastServices,\n    private alertCtrl: AlertController,\n    private activeRoute: ActivatedRoute\n  ) { }\n\n  ngOnInit() {\n  }\n\n  ionViewWillEnter() {\n    this.cargarProveedores();\n  }\n\n  refrescando( event ) {\n    this.cargarProveedores().then(() => {\n      event.target.complete()\n    }).catch(() => event.target.complete())\n  }\n\n  async cargarProveedores() {\n      const info = await this.almacenamiento.obtenerToken();\n\n      if ( info ) {\n        this.ivtApi.leerProveedor(info.token, this.activeRoute.snapshot.paramMap.get('id')).subscribe((data: any) => {\n          if (data.exe) {\n              this.proveedores = data.response;\n          } else {\n            this.toast.toastError('No se pudo cargar los datos, intentelo más tarde');\n          }\n        }, (err) => {\n            this.toast.toastError('No se pudo cargar los datos, intentelo más tarde');\n        })\n      }\n  }\n\n  async modal() {\n    const modal = await this.modalCtrl.create({\n      component: IvtModalPage,\n      componentProps: {\n        tipo: 'proveedores',\n        inventario: this.activeRoute.snapshot.paramMap.get('id')\n      },\n    })\n\n    await modal.present();\n\n    const cerrado = await modal.onWillDismiss();\n\n    if (cerrado.data) {\n      if (cerrado.data.exe) {\n        this.cargarProveedores();\n      }\n    }\n  }\n\n  async editar ( proveedor: any, i ) {\n      const alert = await this.alertCtrl.create({\n        header: 'Editar Proveedor',\n        inputs: [\n          {\n            type: 'text',\n            name: 'nombre',\n            placeholder: 'Escriba el nombre del proveedor',\n            value: proveedor.nombre\n          },\n          {\n            type: 'number',\n            name: 'tel1',\n            placeholder: 'Teléfono de contacto',\n            value: proveedor.telefono\n          }, \n          {\n            type: 'number',\n            name: 'tel2',\n            placeholder: 'Teléfono de contacto adicional',\n            value: proveedor.telefono2\n          },\n          {\n            type: 'text',\n            name: 'correo',\n            placeholder: 'Correo electrónico de contacto',\n            value: proveedor.correo\n          }\n        ],\n        buttons: [\n          {\n            text: 'Cancelar',\n            role: 'cancel'\n          },\n          {\n            text: 'Aceptar',\n            handler: async (data) => {\n                const info = await this.almacenamiento.obtenerToken();\n\n                if ( info ) {\n                  // tslint:disable-next-line:max-line-length\n                  this.ivtApi.editarProveedor(info.token, {nombre: data.nombre, tel1: data.tel1, tel2: data.tel2, correo: data.correo, _id: proveedor._id}).subscribe((res: any) => {\n                      \n                      if ( res.exe ) {\n                        this.toast.toastExitoso('Proveedor editado!');\n                        this.proveedores[i].nombre = res.response.nombre;\n                        this.proveedores[i].telefono = res.response.telefono;\n                        this.proveedores[i].telefono2 = res.response.telefono2;\n                        this.proveedores[i].correo = res.response.correo;\n                      } else {\n                        this.toast.toastError('No se pudo editar el proveedor, intentelo más tarde');\n                      }\n                  }, (err) => {\n                    this.toast.toastError('No se pudo editar el proveedor, intentelo más tarde');\n                  })\n                }\n            }\n          }\n        ]\n      })\n\n      await alert.present();\n  }\n\n  async eliminar ( proveedor: any, i ) {\n    const info = await this.almacenamiento.obtenerToken();\n\n    if ( info ) {\n      // tslint:disable-next-line:max-line-length\n      this.ivtApi.eliminarProveedor(info.token, proveedor._id).subscribe((res: any) => {\n          \n          if ( res.exe ) {\n            this.toast.toastExitoso('Proveedor eliminado!');\n            this.proveedores.splice(i, 1);\n          } else {\n            this.toast.toastError('No se pudo eliminar el proveedor, intentelo más tarde');\n          }\n      }, (err) => {\n        this.toast.toastError('No se pudo eliminar el proveedor, intentelo más tarde');\n      })\n    }\n  }\n\n}\n"]}