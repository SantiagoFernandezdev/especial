{"version":3,"sources":["webpack:///src/app/pages/registro/registro.module.ts","webpack:///src/app/pages/registro/registro.page.html","webpack:///src/app/pages/registro/registro.page.ts","webpack:///src/app/providers/Api/UsuariosLogin.service.ts","webpack:///src/app/providers/Utilidades/AlertService.service.ts"],"names":["routes","path","component","RegistroPageModule","forChild","imports","declarations","RegistroPage","usuarioService","toastService","router","navCtrl","registroService","almacenamiento","platform","alertService","OSSignal","usuarioValido","colorStatus","mensaje","usuarioID","paises","ciudades","ciudad","load","pais","miciudad","index","forma","required","minLength","pattern","controls","setValidators","compareClaves","bind","$usuarioID","subscribe","probar","listarPaises","data","exe","response","push","err","event","detail","value","nombre","listarCiudades","_id","changeOne2","toastError","obtenerToken","info","Slide","lockSwipes","then","campoForma","item","filter","dato","length","alertBasicApplication","cambioEstado","navigateBack","control","compare","dataRegistro","registrar","datos","clave","guardarUsuario","alertApplication","cambiarEstado","navigateForward","error","nombreUsuario","errors","usuario","Content","scrollToTop","getActiveIndex","guardarCambios","avanzar","lockSwipeToPrev","slideNext","lockSwipeToNext","retroceso","next","selector","templateUrl","styleUrls","static","UsuariosLoginService","http","transfer","intento","pipe","errorHttp","console","log","ErrorEvent","Error","ProgressEvent","status","terminarPartida","navigateRoot","post","res","token","hanflerError","buscar","dispositivoID","options","headers","imagen","tipo","fileKey","httpMethod","params","fileTransfer","create","upload","old","get","termino","headerOption","HeaderOption","desde","toString","id","put","providedIn","AlertService","alertCtrl","header","message","handlerFunction","buttons","role","text","handler","alert","present"],"mappings":"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","file":"pages-registro-registro-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { RegistroPage } from './registro.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RegistroPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [RegistroPage]\n})\nexport class RegistroPageModule {}\n","<ion-header color=\"\" class=\"ion-no-border\">\n    <ion-toolbar color=\"success\">\n        <ion-buttons slot=\"start\">\n            <ion-button class=\"cancelar\" (click)=\"retroceso()\" fill=\"clear\">\n                <ion-icon name=\"arrow-back-outline\" slot=\"icon-only\"></ion-icon>\n            </ion-button>\n        </ion-buttons>\n        <ion-title>Crear cuenta</ion-title>\n    </ion-toolbar>\n</ion-header>\n<ion-content #content color=\"blanco\">\n    <div class=\"contenedor\">\n\n        <form [formGroup]=\"forma\" (ngSubmit)=\"guardarCambios()\">\n\n            <ion-slides *ngIf=\"load\" #slide class=\"slide-full\">\n\n                <ion-slide class=\"slide\">\n                    <div class=\"content\" style=\"width: 100%;\">\n\n                        <ion-grid>\n                            <ion-row>\n                                <ion-col size=\"12\">\n                                    <p class=\"ion-margin-top\"></p>\n                                    <ion-item lines=\"none\" class=\" ion-margin-top\" mode=\"md\">\n                                        <ion-label class=\"ion-text-wrap\">Escriba su nombre completo de Persona o negocio correspondiente</ion-label>\n                                    </ion-item>\n                                    <ion-item lines=\"none\" class=\"campo ion-margin-top\" mode=\"ios\">\n                                        <ion-input placeholder=\"Nombre Completo\" type=\"text\" formControlName=\"nombreCompleto\" (ionChange)=\"changeOne([forma.controls.nombreCompleto.errors])\"></ion-input>\n                                    </ion-item>\n\n                                </ion-col>\n                            </ion-row>\n\n                        </ion-grid>\n\n\n                    </div>\n                </ion-slide>\n\n\n\n\n                <ion-slide class=\"slide\">\n                    <div class=\"content\" style=\"width: 100%;\">\n\n                        <ion-grid>\n                            <ion-row>\n                                <ion-col size=\"12\">\n                                    <ion-item lines=\"none\" class=\" ion-margin-top\" mode=\"md\">\n                                        <ion-label class=\"ion-text-wrap\">Escriba un nombre de usuario para la aplicación</ion-label>\n                                    </ion-item>\n                                    <ion-item lines=\"none\" class=\"campo ion-margin-top\" mode=\"ios\">\n                                        <ion-input placeholder=\"Moto_28\" type=\"text\" formControlName=\"nombreUsuario\" (ionChange)=\"comprobarUsuario($event)\"></ion-input>\n                                    </ion-item>\n                                </ion-col>\n\n                                <ion-col size=\"12\">\n                                    <br>\n\n                                </ion-col>\n\n                                <ion-col size=\"12\">\n                                    <br>\n\n                                    <div class=\"contenido\" *ngIf=\"!usuarioValido\">\n                                        <div class=\"load\">\n                                            <ion-spinner color=\"primary\" name=\"crescent\"></ion-spinner>\n                                            <p>Validando Usuario...</p>\n                                        </div>\n\n                                    </div>\n                                </ion-col>\n                            </ion-row>\n                        </ion-grid>\n\n\n                    </div>\n                </ion-slide>\n\n\n                <ion-slide class=\"slide\">\n                    <div class=\"content\" style=\"width: 100%;\">\n\n                        <ion-grid>\n                            <ion-row>\n                                <ion-col size=\"12\">\n\n                                    <ion-item lines=\"none\" class=\" ion-margin-top\" mode=\"md\">\n                                        <ion-label class=\"ion-text-wrap\">Escriba su correo electrónico (opcional)</ion-label>\n                                    </ion-item>\n\n                                    <ion-item lines=\"none\" class=\"campo ion-margin-top\" mode=\"ios\">\n                                        <ion-input placeholder=\"Correo Electrónico\" type=\"email\" formControlName=\"correo\" (ionChange)=\"changeOne([forma.controls.correo.errors, forma.controls.tel.errors])\"></ion-input>\n                                    </ion-item>\n\n                                    <ion-item lines=\"none\" class=\" ion-margin-top\" mode=\"md\">\n                                        <ion-label class=\"ion-text-wrap\">Escriba su teléfono celular (opcional)</ion-label>\n                                    </ion-item>\n                                    <ion-item lines=\"none\" class=\"campo ion-margin-top\" mode=\"ios\">\n                                        <ion-input placeholder=\"Número de Celular\" type=\"tel\" formControlName=\"tel\" (ionChange)=\"changeOne([forma.controls.correo.errors, forma.controls.tel.errors])\"></ion-input>\n                                    </ion-item>\n\n                                    <ion-item lines=\"none\" class=\" ion-margin-top sinfondo\" mode=\"md\">\n                                        <ion-chip color=\"danger\">Requerido</ion-chip>\n                                    </ion-item>\n\n                                    <ion-item lines=\"none\" class=\"\" mode=\"md\">\n                                        <ion-label class=\"ion-text-wrap\">Selecciona el País</ion-label>\n                                        <ion-select okText=\"Aceptar\" cancelText=\"Cancelar\" (ionChange)=\"listarCiudades($event)\">\n                                            <ion-select-option *ngFor=\"let pais of paises\" [value]=\"pais\">{{pais.nombre}}</ion-select-option>\n                                        </ion-select>\n                                    </ion-item>´\n\n\n\n                                    <ion-item *ngIf=\"ciudad\" lines=\"none\" class=\" ion-margin-top sinfondo\" mode=\"md\">\n                                        <ion-chip color=\"danger\">Requerido</ion-chip>\n                                    </ion-item>\n                                    <ion-item *ngIf=\"ciudad\" lines=\"none\" class=\" \" mode=\"md\">\n                                        <ion-label class=\"ion-text-wrap\">Selecciona la ciudad</ion-label>\n                                        <ion-select okText=\"Aceptar\" cancelText=\"Cancelar\" (ionChange)=\"seleccionarCiudad($event)\">\n                                            <ion-select-option *ngFor=\"let ciudad of ciudades\" value=\"{{ciudad.nombre}}\">{{ciudad.nombre}}</ion-select-option>\n                                        </ion-select>\n                                    </ion-item>\n\n                                </ion-col>\n\n\n                            </ion-row>\n                        </ion-grid>\n\n\n                    </div>\n                </ion-slide>\n\n\n                <ion-slide class=\"slide\">\n                    <div class=\"content\" style=\"width: 100%;\">\n\n                        <ion-grid>\n                            <ion-row>\n                                <ion-col size=\"12\">\n\n                                    <ion-item lines=\"none\" class=\" ion-margin-top\" mode=\"md\">\n                                        <ion-label class=\"ion-text-wrap\">Escriba su contraseña</ion-label>\n                                    </ion-item>\n                                    <ion-item lines=\"none\" class=\"campo ion-margin-top\" mode=\"ios\">\n                                        <ion-input type=\"password\" formControlName=\"clave\" (ionChange)=\"changeOne([forma.controls.clave.errors, forma.controls.confirmarClave.errors])\"></ion-input>\n                                    </ion-item>\n                                </ion-col>\n\n\n                                <ion-col size=\"12\">\n                                    <ion-item lines=\"none\" class=\" ion-margin-top\" mode=\"md\">\n                                        <ion-label class=\"ion-text-wrap\">Confirmar la contraseña</ion-label>\n                                    </ion-item>\n                                    <ion-item lines=\"none\" class=\"campo ion-margin-top\" mode=\"ios\">\n                                        <ion-input type=\"password\" formControlName=\"confirmarClave\" (ionChange)=\"changeOne([forma.controls.clave.errors, forma.controls.confirmarClave.errors])\"></ion-input>\n                                    </ion-item>\n                                    <h4 class=\"ion-text-center ion-margin-top opacity\">Clave Privada</h4><br><br>\n                                </ion-col>\n\n                                <ion-col size=\"12\">\n                                    <br>\n\n                                    <div *ngIf=\"!usuarioValido\" class=\"contenido\">\n                                        <ion-spinner color=\"primary\" name=\"crescent\"> Guardando información</ion-spinner>\n\n                                    </div>\n                                </ion-col>\n                            </ion-row>\n                        </ion-grid>\n\n\n                    </div>\n                </ion-slide>\n\n            </ion-slides>\n\n\n        </form>\n    </div>\n</ion-content>\n\n<ion-footer mode=\"md\">\n    <ion-toolbar [color]=\"colorStatus\" (click)=\"next()\">\n        <ion-title slot=\"start\">Continuar</ion-title>\n        <ion-buttons slot=\"end\">\n            <ion-button fill=\"clear\">\n                <ion-icon name=\"arrow-round-forward\" slot=\"icon-only\"></ion-icon>\n            </ion-button>\n\n        </ion-buttons>\n    </ion-toolbar>\n</ion-footer>","import { Component, ViewChild, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { ToastController, IonSlides, IonSlide, Platform, NavController, IonContent } from '@ionic/angular';\nimport { UsuariosLoginService } from 'src/app/providers/Api/UsuariosLogin.service';\nimport { Router } from '@angular/router';\nimport { RegistroService } from '../../providers/Registro/registro.service';\nimport { InicioService } from '../../providers/Almacenamiento/inicio.service';\nimport { Registro } from '../../interfaces/registro.interface';\nimport { from } from 'rxjs';\nimport { InicioGuard } from '../../Guard/login/inicio.guard';\nimport { ToastServices } from '../../providers/Utilidades/ToastService.service';\nimport { AlertService } from '../../providers/Utilidades/AlertService.service';\nimport { last, first } from 'rxjs/operators';\nimport { PushService } from '../../providers/PushService/PushService.service';\n\n@Component({\n  selector: 'app-registro',\n  templateUrl: './registro.page.html',\n  styleUrls: ['./registro.page.scss'],\n})\nexport class RegistroPage implements OnInit{\n  [x: string]: any;\n\n  forma: FormGroup;\n  usuarioValido: boolean = true;\n  colorStatus = 'blanco';\n  mensaje = 'Ingresa su nombre completo';\n  usuarioID: any = '';\n  paises= [];\n  ciudades = [];\n  ciudad = false;\n  load = false;\n\n  pais = '';\n  miciudad = '';\n\n  index = 0;\n\n  @ViewChild('slide', {static: false}) Slide: IonSlides;\n  @ViewChild('content') Content: IonContent;\n\n  constructor(\n    private usuarioService: UsuariosLoginService,\n    private toastService: ToastServices,\n    private router: Router,\n    private navCtrl: NavController,\n    private registroService: RegistroService,\n    private almacenamiento: InicioService,\n    private platform: Platform,\n    private alertService: AlertService,\n    private OSSignal: PushService\n    ) {\n\n      this.forma = new FormGroup({\n        'nombreCompleto': new FormControl('', [Validators.required, Validators.minLength(10)]),\n        'nombreUsuario' : new FormControl('', [Validators.required, Validators.minLength(5)]),\n        'correo'        : new FormControl('', [Validators.required, Validators.pattern('[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,3}$')]),\n        'clave'         : new FormControl('', [Validators.required, Validators.minLength(8)]),\n        'confirmarClave': new FormControl(),\n        'tel'           : new FormControl('', [Validators.required]),\n      });\n\n      this.forma.controls['confirmarClave'].setValidators([\n        Validators.required, Validators.minLength(8), this.compareClaves.bind( this.forma )\n      ])\n\n      this.OSSignal.$usuarioID.subscribe((usuarioID: any) => {\n        this.usuarioID = usuarioID;\n        // console.log('Entramos al usuarioID ', usuarioID);\n      });\n\n      \n\n   }\n\n   ngOnInit() {\n\n   }\n\n   ionViewWillEnter() {\n\n    this.probar();\n    this.listarPaises();\n   }\n\n   listarPaises() {\n     this.usuarioService.listarPaises().subscribe((data: any) => {\n       if (data.exe) {\n         this.paises = data.response;\n       } else {\n         this.paises.push('Colombia');\n       }\n     }, (err) => {\n       this.paises.push('Colombia');\n     })\n   }\n\n\n   listarCiudades( event ) {\n     this.ciudad= true;\n     this.pais =  event.detail.value.nombre;\n     this.miciudad = '';\n     this.usuarioService.listarCiudades(event.detail.value._id).subscribe((data: any) => {\n      if (data.exe) {\n        this.ciudades = data.response;\n        this.changeOne2();\n      } else {\n        this.toastService.toastError('No se pudo traer las ciudades, intente registrarse más tarde');\n      }\n    }, (err) => {\n      this.toastService.toastError('No se pudo traer las ciudades, intente registrarse más tarde');\n    })\n  }\n\n  seleccionarCiudad( event ) {\n    this.miciudad = event.detail.value;\n    this.changeOne2();\n  }\n\n   async probar() {\n     this.load = true;\n     const info = await this.almacenamiento.obtenerToken();\n\n     if ( info ) {\n       \n       this.Slide.lockSwipes(true).then(() => {\n        // console.log('bien');\n      });\n     }\n   }\n\n   async changeOne2() {\n    // console.log(this.index);\n    \n    if (this.index === 1 && this.pais !== '' && this.miciudad !== '') {\n      this.colorStatus = 'success';\n      } else if (this.index !== 1) {\n        this.colorStatus = 'success';\n      } else {\n        this.colorStatus = 'blanco';\n      }\n      \n  }\n\n  async changeOne(campoForma: any[]) {\n    // console.log(this.index);\n    const item = campoForma.filter((dato: any) => dato === null);\n    if (item.length === campoForma.length) {\n      if (this.index === 1 && this.pais !== '' && this.miciudad !== '') {\n\n      } else if (this.index !== 1) {\n        this.colorStatus = 'success';\n      } else {\n        this.colorStatus = 'blanco';\n      }\n      \n    } else {\n      this.colorStatus = 'blanco';\n    }\n  }\n\n\n  retroceso() {\n    this.alertService.alertBasicApplication('Mensaje', '¿Estas seguro de que deseas cancelar el registro?', () => {\n          this.registroService.cambioEstado(true);\n          this.navCtrl.navigateBack('/home');\n    })\n  }\n  // Validaciones Funcines\n\n  compareClaves(control: FormControl): {[s: string]:boolean} {\n    if (control.value !== this.controls['clave'].value) {\n      return {\n        compare: true\n      }\n    }\n    return null;\n  }\n\n  guardarCambios() {\n    this.usuarioValido = false;\n\n    const dataRegistro: any = this.forma.value;\n    dataRegistro.usuarioID = this.usuarioID === '' ? 'hola' : this.usuarioID;\n\n    dataRegistro.pais = this.pais,\n    dataRegistro.ciudad = this.miciudad;\n    this.usuarioService.registrar(dataRegistro).subscribe(\n      (datos) => {\n         this.usuarioValido = true;\n         delete datos.clave;\n         datos.clave = this.forma.controls.clave.value;\n         datos.usuarioID = 'hola';\n\n         this.almacenamiento.guardarUsuario(datos).then(() => {\n           this.toastService.alertApplication('Usuario registrado corectamente', true);\n\n           this.registroService.cambioEstado(true);\n           this.almacenamiento.cambiarEstado(false);\n           this.navCtrl.navigateForward(['/central']);\n\n         }, (error) => {\n           this.usuarioValido = true;\n           this.toastService.alertApplication(error, false);\n         });\n\n        },\n      (error) => { this.toastService.alertApplication(error, false); this.usuarioValido = true;},\n      () => { }\n    );\n  }\n\n  comprobarUsuario(event) {\n    if (!this.forma.controls.nombreUsuario.errors){\n      this.usuarioValido = false;\n      this.usuarioService.usuario(event.detail.value).subscribe(async (data) => {\n     \n      if (data.exe) {\n        this.usuarioValido = true;\n        this.colorStatus = 'blanco';\n        this.mensaje = 'El usuario ya existe, por favor escoge otro nombre';\n\n      } else {\n        this.colorStatus = 'success';\n        this.usuarioValido = true;\n        this.mensaje = 'El nombre de usuario esta disponible';\n      }\n    }, async (error) => {\n      await this.toastService.alertApplication(error, false);\n      this.usuarioValido = true;\n    }, () => {\n      // console.log('Listo Completado');\n    })\n      \n    } else {\n      this.colorStatus = 'blanco';\n    }\n    \n  }\n\n\n   async next() {\n     // console.log('Next');\n     if (this.colorStatus === 'success') {\n        await this.Content.scrollToTop(100);\n        this.Slide.getActiveIndex().then((index) => {\n            this.index = index;\n            if (index === 3) {\n              this.guardarCambios();\n              return;\n            } else if (index === 0) {\n              this.mensaje = 'Escge un nombre de usuario personalizado';\n            }  else if (index === 1) {\n              this.mensaje = 'Ingresa un correo y número celular válido al cual se contacten contigo';\n            } else if (index === 2) {\n              this.mensaje = 'Tú contraseña debe tener almenos 8 caracteres';\n            }\n            this.avanzar();\n        });\n     }\n  }\n\n  async avanzar() {\n    // console.log('Avanzar');\n    this.colorStatus = 'blanco';\n    this.registroService.cambioEstado(false);\n    await this.Slide.lockSwipes(false);\n    await this.Slide.lockSwipeToPrev(true);\n    await this.Slide.slideNext(300);\n    await this.Slide.lockSwipeToNext(true);\n  }\n\n  ioniewDidLeave() {\n    this.Slide.lockSwipes(true).then(() => {\n      // console.log('bien');\n    });\n  }\n\n\n\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\r\nimport { Observable, timer, of, from } from 'rxjs';\r\nimport { retryWhen, delayWhen, tap, catchError, take, map, concatAll } from 'rxjs/operators';\r\nimport { Registro } from '../../interfaces/registro.interface';\r\nimport { FileTransfer, FileUploadOptions, FileTransferObject } from '@ionic-native/file-transfer/ngx';\r\nimport { URL_SERVER } from 'src/environments/environment';\r\nimport { InicioService } from '../Almacenamiento/inicio.service';\r\nimport { NavController } from '@ionic/angular';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class UsuariosLoginService {\r\n\r\n\r\n    constructor(\r\n                private http: HttpClient,\r\n                private transfer: FileTransfer, \r\n                private almacenamiento: InicioService,\r\n                private navCtrl: NavController) { }\r\n\r\n    private hanflerError(error: Observable<any>) {\r\n\r\n        let intento = 0;\r\n\r\n        return error.pipe(\r\n            delayWhen(() => timer(5000)),\r\n            map((errorHttp: HttpErrorResponse) => {\r\n\r\n                intento++;\r\n                \r\n                console.log('Entramos a intentos');\r\n                if (errorHttp instanceof ErrorEvent) {\r\n                    if (intento === 3) {\r\n                        throw new Error('Error de Red');\r\n                    }\r\n                } else if (errorHttp instanceof ProgressEvent) {\r\n                    if (intento === 3) {\r\n                        throw new Error('Error de Red');\r\n                    }\r\n                } else {\r\n\r\n                    if ( errorHttp.status === 404) {\r\n                           throw new Error(' al realizar la solicictud ');\r\n                        } else if ( errorHttp.status === 401) {\r\n                            this.almacenamiento.terminarPartida().then(() => {\r\n                                this.navCtrl.navigateRoot('/home');\r\n                            });\r\n                            throw new Error('No tiene permisos para realizar la petición ');\r\n                         } else {\r\n                             console.log(errorHttp, 'Error de servidor');\r\n                             throw new Error(' No se pudo realizar la petición, intentalo más tarde ');\r\n                        }\r\n                }\r\n            }),\r\n            take(3)\r\n        );\r\n}\r\n\r\n    registrar(data): Observable<any> {\r\n        return this.http.post(`${URL_SERVER}/usuarios`, data).pipe(\r\n            map((res: any) => {\r\n                if (res.exe) {\r\n                    res.response.exe = res.exe;\r\n                    res.response.token = res.token;\r\n                    return res.response;\r\n                } else {\r\n                    return res;\r\n                }\r\n            }),\r\n            retryWhen(error => this.hanflerError(error))\r\n        )\r\n    }\r\n\r\n\r\n    usuario(usuario): Observable<any> {\r\n        return this.http.post(`${URL_SERVER}/usuarios/unico`, {buscar: usuario}).pipe(\r\n            retryWhen(error => this.hanflerError(error))\r\n        )\r\n    }\r\n\r\n    iniciarPartida(usuario, dispositivoID): Observable<any> {\r\n        const options = {\r\n            headers: new HttpHeaders({\r\n                'x-dispositivoID': dispositivoID\r\n            })\r\n        };\r\n        return this.http.post(`${URL_SERVER}/login`, usuario, options ).pipe(\r\n            map((res: any) => {\r\n                if (res.exe) {\r\n                    res.response.exe = res.exe;\r\n                    res.response.token = res.token;\r\n                    return res.response;\r\n                } else {\r\n                    return res.exe;\r\n                }\r\n            }),\r\n            retryWhen(error => this.hanflerError(error))\r\n        );\r\n    }\r\n\r\n    fotoPerfilUsuarioMoto( imagen, token, tipo ) {\r\n        const options: FileUploadOptions  = {\r\n            fileKey: 'archivo',\r\n            httpMethod: 'PUT',\r\n            headers: {\r\n                'x-token': token\r\n            },\r\n            params: {\r\n                tipo\r\n            }\r\n        }\r\n\r\n        // 4912685137238652\r\n\r\n        const fileTransfer: FileTransferObject = this.transfer.create();\r\n\r\n        return from(fileTransfer.upload(imagen, `${URL_SERVER}/upload`, options))\r\n        .pipe(\r\n            catchError(error => {\r\n                console.log(`No se pudo subir la imagen `);\r\n                throw new Error(`No se pudo subir la imagen `);\r\n            })\r\n        );\r\n    }\r\n\r\n\r\n    fotoPortada( imagen, token, old ) {\r\n        const options: FileUploadOptions  = {\r\n            fileKey: 'archivo',\r\n            httpMethod: 'PUT',\r\n            headers: {\r\n                'x-token': token\r\n            },\r\n            params: {\r\n                old\r\n            }\r\n        }\r\n\r\n        // 4912685137238652\r\n\r\n        const fileTransfer: FileTransferObject = this.transfer.create();\r\n\r\n        return from(fileTransfer.upload(imagen, `${URL_SERVER}/upload/portada/`, options))\r\n        .pipe(\r\n            catchError(error => {\r\n                console.log(`No se pudo subir la imagen `);\r\n                throw new Error(`No se pudo subir la imagen `);\r\n            })\r\n        );\r\n    }\r\n\r\n    viewImagen(token) {\r\n        const options = {\r\n            headers: new HttpHeaders({\r\n                'x-token': token\r\n            })\r\n        };\r\n        return this.http.get(`${URL_SERVER}/ver`, options).pipe(\r\n            retryWhen(error => this.hanflerError(error))\r\n        );\r\n    }\r\n\r\n    buscarUsuario(termino: string, token: string) {\r\n        const headerOption = {\r\n            headers: new HttpHeaders({\r\n                'x-token': token\r\n            })\r\n        };\r\n\r\n        return this.http.get(`${URL_SERVER}/usuarios/${termino}`, headerOption ).pipe(\r\n            retryWhen(error => this.hanflerError(error))\r\n        );\r\n    }\r\n\r\n    buscarPerfilUsuario(usuario, token) {\r\n        const HeaderOption = {\r\n            headers: new HttpHeaders({\r\n                'x-token': token\r\n            })\r\n        };\r\n\r\n        return this.http.get(`${URL_SERVER}/usuarios/perfil/${usuario}`, HeaderOption).pipe(\r\n            retryWhen(error => this.hanflerError(error))\r\n        );\r\n    }\r\n\r\n\r\n    traerMisNotificaciones(token, desde) {\r\n        const HeaderOption = {\r\n            headers: new HttpHeaders({\r\n                'x-token': token,\r\n                'x-desde': desde.toString()\r\n            })\r\n        };\r\n\r\n        return this.http.get(`${URL_SERVER}/notificaciones/misnotificaciones/`, HeaderOption).pipe(\r\n            retryWhen(error => this.hanflerError(error))\r\n        );\r\n    }\r\n\r\n    notiCantidad(token) {\r\n        const HeaderOption = {\r\n            headers: new HttpHeaders({\r\n                'x-token': token\r\n            })\r\n        };\r\n\r\n        return this.http.get(`${URL_SERVER}/notificaciones/numero/`, HeaderOption).pipe(\r\n            retryWhen(error => this.hanflerError(error))\r\n        );\r\n    }\r\n\r\n\r\n    ActualizarNotificaciones(token, id) {\r\n        const HeaderOption = {\r\n            headers: new HttpHeaders({\r\n                'x-token': token\r\n            })\r\n        };\r\n\r\n        return this.http.put(`${URL_SERVER}/notificaciones/misnotificaciones/cambiarestado/`, {id}, HeaderOption).pipe(\r\n            retryWhen(error => this.hanflerError(error))\r\n        );\r\n    }\r\n\r\n\r\n    listarPaises() {\r\n        return this.http.get(`${URL_SERVER}/paises` ).pipe(\r\n            retryWhen(error => this.hanflerError(error))\r\n        );\r\n    }\r\n\r\n    listarCiudades(pais) {\r\n        const headerOption = {\r\n            headers: new HttpHeaders({\r\n                'x-pais': pais\r\n            })\r\n        };\r\n\r\n        return this.http.get(`${URL_SERVER}/ciudad`, headerOption ).pipe(\r\n            retryWhen(error => this.hanflerError(error))\r\n        );\r\n    }\r\n\r\n    CodigoComprobar(data) {\r\n     \r\n        return this.http.put(`${URL_SERVER}/codigos`, data ).pipe(\r\n            retryWhen(error => this.hanflerError(error))\r\n        );\r\n    }\r\n\r\n    EditarCodigo(data) {\r\n     \r\n        return this.http.put(`${URL_SERVER}/codigos/cambiar`, data ).pipe(\r\n            retryWhen(error => this.hanflerError(error))\r\n        );\r\n    }\r\n\r\n\r\n\r\n    negocios() {\r\n     \r\n        return this.http.get(`${URL_SERVER}/tiponegocio` ).pipe(\r\n            retryWhen(error => this.hanflerError(error))\r\n        );\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { AlertController } from '@ionic/angular';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class AlertService {\r\n    constructor(\r\n        private alertCtrl: AlertController\r\n    ) {}\r\n\r\n    // tslint:disable-next-line:ban-types\r\n    async alertBasicApplication(header, message, handlerFunction: Function) {\r\n        const alert = await this.alertCtrl.create({\r\n            header,\r\n            message,\r\n            buttons: [\r\n                {\r\n                    role: 'cancel',\r\n                    text: 'Cancelar'\r\n                },\r\n                {\r\n                    text: 'Confirmar',\r\n                    handler: () => {\r\n                        handlerFunction();\r\n                    }\r\n                }\r\n            ]\r\n        });\r\n\r\n        return await alert.present();\r\n    }\r\n}"]}